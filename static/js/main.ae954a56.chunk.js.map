{"version":3,"sources":["components/Header.js","components/display/Welcome.js","components/display/Select.js","components/display/AddBatches.js","components/display/Screen.js","components/display/index.js","storage/index.js","actions/index.js","actions/types.js","components/tables/index.js","components/reusables/Former.js","components/tables/Create.js","components/tables/Rename.js","components/batches/index.js","components/batches/Create.js","components/batches/Rename.js","components/lectures/index.js","components/lectures/Create.js","components/lectures/Rename.js","components/App.js","reducers/TableList.js","reducers/BatchList.js","reducers/LectureList.js","reducers/index.js","reducers/SelectedTable.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","Select","AddBatches","this","props","batches","length","connect","state","BatchList","Screen","Display","display_Welcome","display_Select","display_AddBatches","display_Screen","list","welcomeMessage","selected","nothingSelected","addBatches","screen","TableList","SelectedTable","storage","focus","Object","classCallCheck","data_prefix","sessionStorage","getItem","JSON","parse","ex","id","data","undefined","console","log","arguments","setItem","stringify","removeItem","name","getList","creation","push","saveList","saveData","newname","newlist","map","item","filter","deleteData","table","batch","lecture","renameTableById","rename","type","renameBatchById","renameLectureById","Tables","_this","additional","SelectBtn","onClick","selectTableById","key","className","concat","deleteTableById","pathname","renderList","getData","delete","deleted","Input","_Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","value","change","event","setState","target","onChange","inherits","createClass","Former","values","Form","onSubmit","preventDefault","FormSubmit","children","formProps","CreateTable","onFormSubmit","createTableByName","history","_Former","htmlFor","Former_Input","assign","Math","random","toString","split","substr","create","RenameTable","handleSubmit","location","_this2","Batches","deleteBatchById","CreateBatch","createBatchByName","RenameBatch","Lectures","deleteLectureById","LectureList","CreateLecture","createLectureByName","RenameLecture","App","BrowserRouter","Route","path","component","exact","session","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.ae954a56.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/tables\">\r\n            <button>Tables</button>\r\n          </Link>\r\n\r\n          <Link to=\"/batches\">\r\n            <button>Batches</button>\r\n          </Link>\r\n\r\n          <Link to=\"/lectures\">\r\n            <button>Lectures</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return <div>Welcome !!</div>;\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    return <div>Select a Table</div>;\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddBatches extends Component {\r\n  render() {\r\n    if (this.props.batches.length === 0) {\r\n      return (\r\n        <div>\r\n          You have't created any batches , Please create batches and add them to\r\n          the table of your choice.\r\n        </div>\r\n      );\r\n    }\r\n    return <div>You have no batches in the selected table</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.BatchList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddBatches);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    return <div>This is the actual Displayer</div>;\r\n  }\r\n}\r\n\r\nexport default Screen;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport Select from \"./Select\";\r\nimport AddBatches from \"./AddBatches\";\r\nimport Screen from \"./Screen\";\r\n\r\nclass Display extends Component {\r\n  welcomeMessage() {\r\n    return <Welcome />;\r\n  }\r\n  nothingSelected() {\r\n    return <Select />;\r\n  }\r\n  addBatches() {\r\n    return <AddBatches />;\r\n  }\r\n  screen() {\r\n    return <Screen />;\r\n  }\r\n  render() {\r\n    if (this.props.list.length === 0) {\r\n      return this.welcomeMessage();\r\n    } else if (this.props.selected === null) {\r\n      return this.nothingSelected();\r\n    } else if (this.props.selected !== null) {\r\n      if (this.props.selected.list.length === 0) {\r\n        return this.addBatches();\r\n      } else {\r\n        return this.screen();\r\n      }\r\n    } else {\r\n      return <div>We cannot figure out the display</div>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TableList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Display);\r\n","class storage {\r\n  constructor(focus) {\r\n    switch (focus) {\r\n      case \"table\":\r\n      default:\r\n        this.list = \"tables-list\";\r\n        this.data_prefix = \"td-\";\r\n        break;\r\n      case \"batch\":\r\n        this.list = \"batches-list\";\r\n        this.data_prefix = \"bt-\";\r\n        break;\r\n      case \"lecture\":\r\n        this.list = \"lectures-list\";\r\n        this.data_prefix = \"lt-\";\r\n        break;\r\n    }\r\n  }\r\n  getList() {\r\n    let list = sessionStorage.getItem(this.list) || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  getData(id) {\r\n    let data = sessionStorage.getItem(this.data_prefix + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      console.log(data);\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  saveList(list = []) {\r\n    sessionStorage.setItem(this.list, JSON.stringify(list));\r\n  }\r\n  saveData(id, data = {}) {\r\n    sessionStorage.setItem(this.data_prefix + id, JSON.stringify(data));\r\n  }\r\n  deleteData(id) {\r\n    sessionStorage.removeItem(this.data_prefix + id);\r\n  }\r\n  create(name, id) {\r\n    let list = this.getList();\r\n    let creation = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      list: []\r\n    };\r\n    console.log(\"list\", list);\r\n    list.push(creation);\r\n    this.saveList(list);\r\n    this.saveData(id, data);\r\n  }\r\n  rename(newname, id) {\r\n    let list = this.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    this.saveList(newlist);\r\n  }\r\n  delete(id) {\r\n    let list = this.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    this.saveList(newlist);\r\n    this.deleteData(id);\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../storage\";\r\nimport {\r\n  CREATE_TABLE,\r\n  SELECT_TABLE,\r\n  RENAME_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BATCH,\r\n  RENAME_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_LECTURE,\r\n  RENAME_LECTURE,\r\n  DELETE_LECTURE\r\n} from \"./types\";\r\n\r\nlet table = new storage(\"table\");\r\nlet batch = new storage(\"batch\");\r\nlet lecture = new storage(\"lecture\");\r\n\r\nexport const createTableByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(0, 5);\r\n  table.create(name, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: CREATE_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const selectTableById = id => {\r\n  let tableData = table.getData(id);\r\n  return {\r\n    type: SELECT_TABLE,\r\n    table: tableData\r\n  };\r\n};\r\nexport const renameTableById = (newname, id) => {\r\n  table.rename(newname, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: RENAME_TABLE,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteTableById = id => {\r\n  table.delete(id);\r\n  let list = table.getList();\r\n  return {\r\n    type: DELETE_TABLE,\r\n    deleted: id,\r\n    list\r\n  };\r\n};\r\n\r\nexport const createBatchByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(3, 8);\r\n  batch.create(name, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: CREATE_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const renameBatchById = (newname, id) => {\r\n  batch.rename(newname, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: RENAME_BATCH,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteBatchById = id => {\r\n  batch.delete(id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: DELETE_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const createLectureByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(4, 9);\r\n  lecture.create(name, id);\r\n  let list = lecture.getList();\r\n  console.log(list);\r\n  return {\r\n    type: CREATE_LECTURE,\r\n    list\r\n  };\r\n};\r\nexport const renameLectureById = (newname, id) => {\r\n  lecture.rename(newname, id);\r\n  let list = lecture.getList();\r\n  return {\r\n    type: RENAME_LECTURE,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteLectureById = id => {\r\n  lecture.delete(id);\r\n  let list = lecture.getList();\r\n  return {\r\n    type: DELETE_LECTURE,\r\n    list\r\n  };\r\n};\r\n","export const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const SELECT_TABLE = \"SELECT_TABLE\";\r\nexport const RENAME_TABLE = \"RENAME_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const RENAME_BATCH = \"RENAME_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_LECTURE = \"CREATE_LECTURE\";\r\nexport const RENAME_LECTURE = \"RENAME_LECTURE\";\r\nexport const DELETE_LECTURE = \"DELETE_LECTURE\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  selectTableById,\r\n  renameTableById,\r\n  deleteTableById\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      let additional = \"\";\r\n      let SelectBtn = () => {\r\n        return null;\r\n      };\r\n      if (this.props.selected !== null && this.props.selected.id === item.id) {\r\n        additional = \"selected-table\";\r\n      } else {\r\n        SelectBtn = () => {\r\n          return (\r\n            <button onClick={() => this.props.selectTableById(item.id)}>\r\n              Select\r\n            </button>\r\n          );\r\n        };\r\n      }\r\n      return (\r\n        <div key={item.id} className={`table-card card-box ${additional}`}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <SelectBtn />\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteTableById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link to={{ pathname: \"/tables/rename\", id: item.id }}>\r\n              <button>Rename</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <Link to=\"/tables/create\">\r\n              <button>Create A Table</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TableList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectTableById,\r\n    renameTableById,\r\n    deleteTableById\r\n  }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nfunction Former(name) {\r\n  const values = {};\r\n  const FormSubmit = (event, onSubmit = () => {}) => {\r\n    event.preventDefault();\r\n\r\n    onSubmit(values);\r\n  };\r\n  const Form = props => {\r\n    return (\r\n      <form\r\n        onSubmit={event => {\r\n          FormSubmit(event, props.onSubmit);\r\n        }}\r\n      >\r\n        {props.children}\r\n      </form>\r\n    );\r\n  };\r\n  const formProps = {\r\n    onChange: function(name, value) {\r\n      if (name !== undefined) {\r\n        values[name] = value;\r\n      }\r\n    }\r\n  };\r\n  return {\r\n    Form,\r\n    formProps\r\n  };\r\n}\r\n\r\nexport class Input extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n    value: this.props.value || \"\"\r\n  };\r\n  change = event => {\r\n    this.setState({\r\n      name: this.props.name,\r\n      value: event.target.value\r\n    });\r\n    this.props.onChange(this.props.name, event.target.value);\r\n  };\r\n  componentDidMount() {\r\n    this.props.onChange(this.state.name, this.state.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <input\r\n        type={this.props.type || \"text\"}\r\n        name={this.props.name}\r\n        onChange={this.change}\r\n        value={this.state.value}\r\n        className={this.props.className || null}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Former;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTableByName } from \"../../actions\";\r\n\r\nclass CreateTable extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createTableByName(values[\"name\"]);\r\n    this.props.history.push(\"/tables\");\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <label htmlFor=\"name\">Table</label>\r\n        <Input name=\"name\" {...formProps} />\r\n        <Input name=\"submit\" type=\"submit\" value=\"Submit\" {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createTableByName\r\n  }\r\n)(CreateTable);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameTableById } from \"../../actions\";\r\n\r\nclass RenameTable extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameTableById(values.newname, this.props.location.id);\r\n    this.props.history.push(\"/tables\");\r\n  };\r\n  render() {\r\n    if (this.props.location.id === undefined) {\r\n      this.props.history.push(\"/tables\");\r\n    } else {\r\n      let session = new storage(\"table\");\r\n      let table = session\r\n        .getList()\r\n        .filter(item => item.id === this.props.location.id)[0];\r\n      const { Form, formProps } = Former(\"rename\");\r\n      return (\r\n        <div>\r\n          {table.name}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"newname\" {...formProps} />\r\n            <Input type=\"submit\" value=\"Rename\" {...formProps} />\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameTableById\r\n  }\r\n)(RenameTable);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameBatchById, deleteBatchById } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      return (\r\n        <div className=\"batch-card card-box\" key={item.id}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteBatchById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link to={{ pathname: \"/batches/rename\", id: item.id }}>\r\n              <button>Rename</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <Link to=\"/batches/create\">\r\n              <button>Create A Batch</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.BatchList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    renameBatchById,\r\n    deleteBatchById\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createBatchByName } from \"../../actions\";\r\n\r\nclass CreateBatch extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createBatchByName(values[\"name\"]);\r\n    this.props.history.push(\"/batches\");\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <Input name=\"name\" {...formProps} />\r\n        <Input name=\"submit\" type=\"submit\" value=\"Submit\" {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBatchByName\r\n  }\r\n)(CreateBatch);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameBatchById } from \"../../actions\";\r\n\r\nclass RenameBatch extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameBatchById(values.newname, this.props.location.id);\r\n    this.props.history.push(\"/batches\");\r\n  };\r\n  render() {\r\n    if (this.props.location.id === undefined) {\r\n      this.props.history.push(\"/batches\");\r\n    } else {\r\n      let session = new storage(\"batch\");\r\n      let table = session\r\n        .getList()\r\n        .filter(item => item.id === this.props.location.id)[0];\r\n      const { Form, formProps } = Former(\"rename\");\r\n      return (\r\n        <div>\r\n          {table.name}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"newname\" {...formProps} />\r\n            <Input type=\"submit\" value=\"Rename\" {...formProps} />\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameBatchById\r\n  }\r\n)(RenameBatch);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameLectureById, deleteLectureById } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      return (\r\n        <div className=\"lecture-card card-box\" key={item.id}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLectureById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link to={{ pathname: \"/Lectures/rename\", id: item.id }}>\r\n              <button>Rename</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <Link to=\"/Lectures/create\">\r\n              <button>Create A Lecture</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    list: state.LectureList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    renameLectureById,\r\n    deleteLectureById\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createLectureByName } from \"../../actions\";\r\n\r\nclass CreateLecture extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createLectureByName(values[\"name\"]);\r\n    this.props.history.push(\"/lectures\");\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <Input name=\"name\" {...formProps} />\r\n        <Input name=\"submit\" type=\"submit\" value=\"Submit\" {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createLectureByName\r\n  }\r\n)(CreateLecture);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameLectureById } from \"../../actions\";\r\n\r\nclass RenameLecture extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameLectureById(values.newname, this.props.location.id);\r\n    this.props.history.push(\"/Lectures\");\r\n  };\r\n  render() {\r\n    if (this.props.location.id === undefined) {\r\n      this.props.history.push(\"/Lectures\");\r\n    } else {\r\n      let session = new storage(\"Lecture\");\r\n      let table = session\r\n        .getList()\r\n        .filter(item => item.id === this.props.location.id)[0];\r\n      const { Form, formProps } = Former(\"rename\");\r\n      return (\r\n        <div>\r\n          {table.name}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"newname\" {...formProps} />\r\n            <Input type=\"submit\" value=\"Rename\" {...formProps} />\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameLectureById\r\n  }\r\n)(RenameLecture);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Tables from \"./tables\";\r\nimport CreateTable from \"./tables/Create\";\r\nimport RenameTable from \"./tables/Rename\";\r\n//Batches Import\r\nimport Batches from \"./batches\";\r\nimport CreateBatch from \"./batches/Create\";\r\nimport RenameBatch from \"./batches/Rename\";\r\n//Lectures Import\r\nimport Lectures from \"./lectures\";\r\nimport CreateLecture from \"./lectures/Create\";\r\nimport RenameLecture from \"./lectures/Rename\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n\r\n            <Route path=\"/tables\" exact component={Tables} />\r\n            <Route path=\"/tables/create\" exact component={CreateTable} />\r\n            <Route path=\"/tables/rename\" exact component={RenameTable} />\r\n\r\n            <Route path=\"/batches\" exact component={Batches} />\r\n            <Route path=\"/batches/create\" exact component={CreateBatch} />\r\n            <Route path=\"/batches/rename\" exact component={RenameBatch} />\r\n\r\n            <Route path=\"/lectures\" exact component={Lectures} />\r\n            <Route path=\"/lectures/create\" exact component={CreateLecture} />\r\n            <Route path=\"/lectures/rename\" exact component={RenameLecture} />\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { CREATE_TABLE, RENAME_TABLE, DELETE_TABLE } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"table\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_TABLE:\r\n    case RENAME_TABLE:\r\n    case DELETE_TABLE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CREATE_BATCH, RENAME_BATCH, DELETE_BATCH } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"batch\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_BATCH:\r\n    case RENAME_BATCH:\r\n    case DELETE_BATCH:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_LECTURE,\r\n  RENAME_LECTURE,\r\n  DELETE_LECTURE\r\n} from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"lecture\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_LECTURE:\r\n    case RENAME_LECTURE:\r\n    case DELETE_LECTURE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport SelectedTable from \"./SelectedTable\";\r\nimport TableList from \"./TableList\";\r\nimport BatchList from \"./BatchList\";\r\nimport LectureList from \"./LectureList\";\r\n\r\nexport default combineReducers({\r\n  SelectedTable,\r\n  TableList,\r\n  BatchList,\r\n  LectureList\r\n});\r\n","import { SELECT_TABLE, DELETE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let selected_table = action.table || null;\r\n      return selected_table;\r\n    case DELETE_TABLE:\r\n      if (state !== null && action.deleted === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}