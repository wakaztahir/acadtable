{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","actions/downloader.js","components/others/LectureModal.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","ex","id","lectFind","filter","l","time","day","place","value","message","secLectFind","batch","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","swapDay","dayID","withID","current","future","i","newDays","setDataKey","createTime","swapTime","timeID","newTimes","createPlace","swapPlace","placeID","newPlaces","createBatch","swapBatch","batchID","newBatches","createSubject","subject","swapSubject","subjectID","newSubjects","createTeacher","teacher","swapTeacher","teacherID","newTeachers","DefaultSetupSettings","info","name","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","color","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","catch","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","LectureModal","params","creator","toEdit","edit","mode","list","defaultValue","margin","marginTop","Lectures","Days","Times","Places","Batches","Subjects","Teachers","Screen","tableMode","downloader","refs","area","swap","otherLecture","otherValidator","objector","flexDirection","minWidth","ref","marginBottom","col","colIndex","swapper","row","rowIndex","block","others_LectureModal","st","bh","tr","effectedRow","r","lectureSwap","effectedCol","c","User","Tables","action","quicker","_this2$state$creator","_this2$state$creator2","updateTable","marginRight","deleteTable","baseName","fontWeight","tableID","listshow","showitem","itemlist","lectCard","tm","pc","dy","marginLeft","paddingBottom","updateBatch","deleteBatch","updateDay","deleteDay","AColorPicker","require","updateTime","deleteTime","updatePlace","deletePlace","updateSubject","deleteSubject","updateTeacher","deleteTeacher","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","Modal","modal","button","waiting","confirm","implement","System","App","position","components_Welcome","components_Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7f521406.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect, ex = { id: \"exception\" }) => {\r\n  let lectFind = lectures.filter(\r\n    l => l.time === lect.time && l.day === lect.day && l.place === lect.place\r\n  );\r\n  if (lectFind.length > 0 && lectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n      return {\r\n        value: false,\r\n        message: \"This batch is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      return {\r\n        value: true,\r\n        message: \"\"\r\n      };\r\n    }\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth,\r\n          height: tableHeight\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth, tableHeight], \"landscape\");\r\n          }\r\n          doc.addImage(dataUrl, \"PNG\", 20, 20);\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\nimport { keyList, lectureValidator } from \"../../actions/helpers\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      batch: null,\r\n      subject: null,\r\n      teacher: null,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.props.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {toEdit.map(key => {\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {key} &nbsp;\r\n                    </label>\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    <button\r\n                      style={{ margin: \"0 0.5em\" }}\r\n                      onClick={() => {\r\n                        this.setState({ display: key });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}>Cancel</button>\r\n              </span>\r\n              &nbsp;\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator;\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n          >\r\n            Back\r\n          </button>\r\n          <div style={{ marginTop: \"1em\" }}>\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  creator({ name });\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                    {this.state.display} &nbsp;\r\n                  </label>\r\n                  <input type=\"text\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>\r\n              </form>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  updateLecture,\r\n  deleteLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapPlace,\r\n  swapTeacher,\r\n  swapSubject,\r\n  swapTime\r\n} from \"../../actions\";\r\n\r\nimport { listKey, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../others/LectureModal\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  swapper(area, from, to) {\r\n    let swap;\r\n    switch (area) {\r\n      default:\r\n        swap = null;\r\n        break;\r\n      case \"days\":\r\n        swap = this.props.swapDay;\r\n        break;\r\n      case \"times\":\r\n        swap = this.props.swapTime;\r\n        break;\r\n      case \"batches\":\r\n        swap = this.props.swapBatch;\r\n        break;\r\n      case \"places\":\r\n        swap = this.props.swapPlace;\r\n        break;\r\n      case \"subjects\":\r\n        swap = this.props.swapSubject;\r\n        break;\r\n    }\r\n    if (swap != null) {\r\n      swap(from.id, to.id);\r\n    }\r\n  }\r\n  lectureSwap(from, to) {\r\n    let lectFind = this.props.lectures.filter(\r\n      l => l.day === to.day && l.time === to.time && l.place === to.place\r\n    );\r\n    if (lectFind.length > 0) {\r\n      let otherLecture = lectFind[0];\r\n      otherLecture = {\r\n        ...otherLecture,\r\n        day: from.day,\r\n        time: from.time,\r\n        place: from.place\r\n      };\r\n      let otherValidator = lectureValidator(\r\n        this.props.lectures,\r\n        otherLecture,\r\n        from\r\n      );\r\n      if (otherValidator.value) {\r\n        this.props.updateLecture(otherLecture.id, otherLecture);\r\n        let validator = lectureValidator(this.props.lectures, to, otherLecture);\r\n        if (validator.value) {\r\n          this.props.updateLecture(to.id, to);\r\n        } else {\r\n          this.props.showModal(\"message\", validator.message);\r\n        }\r\n      } else {\r\n        this.props.showModal(\r\n          \"message\",\r\n          \"2nd lecture error , \" + otherValidator.message\r\n        );\r\n      }\r\n    } else {\r\n      let validator = lectureValidator(this.props.lectures, to);\r\n      if (validator.value) {\r\n        this.props.updateLecture(to.id, to);\r\n      } else {\r\n        this.props.showModal(\"message\", validator.message);\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"pdfrender render\",\r\n                downloader: downloadPDF,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadJPEG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download JPEG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadPNG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PNG\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td className=\"main-block\">\r\n                        {base != null ? <span>{base.name}</span> : null}\r\n                      </td>\r\n                      {cols.map((col, colIndex) => {\r\n                        return (\r\n                          <td key={\"c\" + col.id} className=\"col-block\">\r\n                            <span>{col.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {colIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"left\"\r\n                                />\r\n                              )}\r\n                              {colIndex === cols.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"right\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows.map((row, rowIndex) => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <td className=\"row-block\">\r\n                            <span>{row.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {rowIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"above\"\r\n                                />\r\n                              )}\r\n                              {rowIndex === rows.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"bottom\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          {cols.map(col => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={[\"subject\", \"batch\", \"teacher\"]}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td key={\"b\" + col.id} className=\"table-block\">\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Batch Error\r\n                                    </span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                  <div className=\"block-buttons\">\r\n                                    <button\r\n                                      className=\"above\"\r\n                                      onClick={() => {\r\n                                        let effectedRow = null;\r\n                                        rows.filter((r, i) => {\r\n                                          if (r.id === row.id) {\r\n                                            effectedRow = rows[i - 1];\r\n                                          }\r\n                                          return r;\r\n                                        });\r\n                                        if (effectedRow != null) {\r\n                                          lecture[listKey(table.rows)] =\r\n                                            effectedRow.id;\r\n                                          this.lectureSwap(block[0], lecture);\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"bottom\"\r\n                                      onClick={() => {\r\n                                        let effectedRow = null;\r\n                                        rows.filter((r, i) => {\r\n                                          if (r.id === row.id) {\r\n                                            effectedRow = rows[i + 1];\r\n                                          }\r\n                                          return r;\r\n                                        });\r\n                                        if (effectedRow != null) {\r\n                                          lecture[listKey(table.rows)] =\r\n                                            effectedRow.id;\r\n                                          this.lectureSwap(block[0], lecture);\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"right\"\r\n                                      onClick={() => {\r\n                                        let effectedCol = null;\r\n                                        cols.filter((c, i) => {\r\n                                          if (c.id === col.id) {\r\n                                            effectedCol = cols[i + 1];\r\n                                          }\r\n                                          return c;\r\n                                        });\r\n                                        if (effectedCol != null) {\r\n                                          lecture[listKey(table.cols)] =\r\n                                            effectedCol.id;\r\n                                          this.lectureSwap(block[0], lecture);\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"left\"\r\n                                      onClick={() => {\r\n                                        let effectedCol = null;\r\n                                        cols.filter((c, i) => {\r\n                                          if (c.id === col.id) {\r\n                                            effectedCol = cols[i - 1];\r\n                                          }\r\n                                          return c;\r\n                                        });\r\n                                        if (effectedCol != null) {\r\n                                          lecture[listKey(table.cols)] =\r\n                                            effectedCol.id;\r\n                                          this.lectureSwap(block[0], lecture);\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"edit\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"content\",\r\n                                          <LectureModal\r\n                                            id={lecture.id}\r\n                                            params={{ ...lecture }}\r\n                                            edit={[\r\n                                              \"subject\",\r\n                                              \"batch\",\r\n                                              \"teacher\"\r\n                                            ]}\r\n                                            mode=\"update\"\r\n                                          />\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"delete\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"confirm\",\r\n                                          \"Are you sure ?\",\r\n                                          [\r\n                                            () => {\r\n                                              this.props.deleteLecture(\r\n                                                lecture.id\r\n                                              );\r\n                                            }\r\n                                          ]\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    deleteLecture,\r\n    swapBatch,\r\n    swapDay,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTeacher,\r\n    swapTime\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    },\r\n    quicker: {\r\n      base: \"days\",\r\n      rows: \"places\",\r\n      cols: \"times\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let { base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.createTable({ base, baseValue, rows, cols });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let { id, base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.updateTable(id, { base, baseValue, rows, cols });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { keyList, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div key={lecture.id} className=\"block\">\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch\r\n} from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: { id: null, name: null, mode: \"create\" }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createDay, updateDay, swapDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Days</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                this.props.createDay({ name: day });\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTime, updateTime, swapTime, deleteTime } from \"../../actions\";\r\n\r\nconst AColorPicker = require(\"a-color-picker\");\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      color: \"#fff60c\",\r\n      mode: \"create\"\r\n    },\r\n    quicker: {\r\n      fromTime: \"08\",\r\n      fromMeridian: \"AM\",\r\n      toTime: \"01\",\r\n      toMeridian: \"PM\",\r\n      lectureTime: \"60\",\r\n      color: \"#fff60c\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  this.props.createTime({ name: time });\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n            <div className=\"color\" ref=\"color\" />\r\n            Color{\" \"}\r\n            <button\r\n              onClick={() => {\r\n                AColorPicker.from(this.refs.color);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Quick Times\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace\r\n} from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    },\r\n    quicker: { name: \"Room\", from: \"1\", to: \"10\" }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  this.props.createPlace({ name: place });\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject\r\n} from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Subjects</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Teachers</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.1;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}