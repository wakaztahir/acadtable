{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","actions/downloader.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","id","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","message","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","createLecture","lecture","createDay","day","createTime","time","createPlace","place","DefaultSetupSettings","info","name","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","value","placeholder","required","onClick","_this3","x","_this4","_this5","style","color","_this6","objects","textTransform","map","obj","finish","title","_this7","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","concat","getMinutes","getTime","setMinutes","push","i","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","catch","ex","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","Screen","tableMode","downloader","refs","objector","marginTop","flexDirection","minWidth","ref","filter","marginBottom","col","row","block","params","subject","st","batch","bh","teacher","tr","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","creator","action","onSubmit","preventDefault","_this2$state$creator","_this2$state$creator2","updateTable","defaultValue","item","marginRight","deleteTable","quicker","margin","disabled","baseName","fontWeight","tableID","listshow","showitem","mode","updateLecture","list","y","itemlist","lectCard","tm","pc","dy","deleteLecture","marginLeft","keyName","keyList","paddingBottom","lect","lectureID","createBatch","updateBatch","index","swapBatch","deleteBatch","batchID","withID","current","future","newBatches","setDataKey","updateDay","swapDay","deleteDay","dayID","newDays","updateTime","swapTime","deleteTime","timeID","newTimes","updatePlace","swapPlace","deletePlace","placeID","newPlaces","createSubject","updateSubject","swapSubject","deleteSubject","subjectID","newSubjects","createTeacher","updateTeacher","swapTeacher","deleteTeacher","teacherID","newTeachers","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","User","Modal","modal","button","waiting","confirm","implement","System","App","components_Welcome","components_Modal","initial_state","combineReducers","toConsumableArray","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.1be932b9.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    id: \"example\",\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = data => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = data => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = data => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08:00\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01:00\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\"\r\n      //   \"batches\",\r\n      //   \"subjects\",\r\n      //   \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place\r\n        },\r\n        true\r\n      );\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth,\r\n          height: tableHeight\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth, tableHeight], \"landscape\");\r\n          }\r\n          doc.addImage(dataUrl, \"PNG\", 0, 0);\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { showModal, unshowModal } from \"../../actions\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"pdfrender render\",\r\n                downloader: downloadPDF,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadJPEG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download JPEG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadPNG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PNG\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>{base != null ? base.name : null}</td>\r\n                      {cols.map(col => {\r\n                        return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows.map(row => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <td>{row.name}</td>\r\n                          {cols.map(col => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    //this.props.displayAddModal(params);\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = block[0];\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block\"\r\n                                  onClick={() => {}}\r\n                                >\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Batch Error\r\n                                    </span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector).map(key => {\r\n                return (\r\n                  <option key={\"base\" + key} value={key}>\r\n                    {key}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                value={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {this.state.creator.baseValue !== null\r\n                  ? objector[this.state.creator.base].filter(\r\n                      item => item.id === this.state.creator.baseValue\r\n                    ).length > 0\r\n                    ? null\r\n                    : this.setState({\r\n                        creator: { ...this.state.creator, baseValue: null }\r\n                      })\r\n                  : null}\r\n                {objector[this.state.creator.base].map(item => {\r\n                  if (this.state.creator.baseValue == null) {\r\n                    this.setState({\r\n                      creator: { ...this.state.creator, baseValue: item.id }\r\n                    });\r\n                  }\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              value={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(key => key !== this.state.creator.base)\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              value={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              style={{ marginRight: \"1em\" }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.props.deleteTable(this.state.creator.id);\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { keyList } from \"../../actions/helpers\";\r\n\r\nimport { createLecture, updateLecture, deleteLecture } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createLecture({\r\n                batch: this.state.creator.batch,\r\n                subject: this.state.creator.subject,\r\n                teacher: this.state.creator.teacher,\r\n                place: this.state.creator.place,\r\n                day: this.state.creator.day,\r\n                time: this.state.creator.time\r\n              });\r\n            } else {\r\n              this.props.updateLecture(this.state.creator.id, {\r\n                batch: this.state.creator.batch,\r\n                subject: this.state.creator.subject,\r\n                teacher: this.state.creator.teacher,\r\n                place: this.state.creator.place,\r\n                day: this.state.creator.day,\r\n                time: this.state.creator.time\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          {Object.keys(objector).map(key => {\r\n            let list = objector[key];\r\n            if (this.state.creator[key] != null) {\r\n              if (\r\n                list.filter(item => item.id === this.state.creator[key])\r\n                  .length === 0\r\n              ) {\r\n                if (list.length > 0) {\r\n                  let creator = { ...this.state.creator };\r\n                  creator[key] = list[0].id;\r\n                  this.setState({ creator });\r\n                } else {\r\n                  let creator = { ...this.state.creator };\r\n                  creator[key] = null;\r\n                  this.setState({ creator });\r\n                }\r\n              }\r\n            }\r\n            return (\r\n              <div className=\"form-row\" key={key}>\r\n                <label\r\n                  htmlFor={key + \"sct\"}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {key}\r\n                </label>\r\n                <select\r\n                  name={key}\r\n                  id={key + \"sct\"}\r\n                  value={this.state.creator[key] || \"\"}\r\n                  required={true}\r\n                  onChange={x => {\r\n                    let y = {};\r\n                    y[key] = x.target.value;\r\n                    this.setState({ creator: { ...this.state.creator, ...y } });\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div key={lecture.id} className=\"block\">\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch\r\n} from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Batch\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createDay, updateDay, swapDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                this.props.createDay({ name: day });\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Day\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTime, updateTime, swapTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Time\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace\r\n} from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Place\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject\r\n} from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Subject\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Teacher\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      console.log(action.payload.days);\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}