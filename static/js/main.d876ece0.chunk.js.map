{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","components/others/ColorsPanel.js","components/others/LectureModal.js","components/others/AreaEditor.js","components/others/ObjectEditor.js","actions/downloader.js","components/others/Exporter.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","COLORS","TABLE_HEADER_COLOR","TABLE_FOOTER_COLOR","TABLE_SIDEBAR_COLOR","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","ex","id","lectFind","filter","l","time","day","place","value","message","secLectFind","batch","teacher","batchValidator","batches","batchFind","b","name","dayValidator","days","dayFind","d","timeValidator","times","timeFind","t","placeValidator","places","placeFind","p","subjectValidator","subjects","subject","subjectFind","s","teacherValidator","teachers","teacherFind","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","collections","getDataItem","key","delDataItem","delData","values","forEach","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","updateTable","tableID","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","updateDay","dayID","swapDay","withID","current","future","i","newDays","setDataKey","deleteDay","createTime","updateTime","timeID","swapTime","newTimes","deleteTime","createPlace","updatePlace","placeID","swapPlace","newPlaces","deletePlace","createBatch","updateBatch","batchID","swapBatch","newBatches","deleteBatch","createSubject","updateSubject","subjectID","swapSubject","newSubjects","deleteSubject","createTeacher","updateTeacher","teacherID","swapTeacher","newTeachers","deleteTeacher","DefaultSetupSettings","info","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","color","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","toLocaleDateString","toUpperCase","baseValue","header","text","footer","sidebar","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","ColorsPanel","addClass","change","LectureModal","params","toEdit","edit","mode","log","list","defaultValue","margin","others_ColorsPanel","creator","marginTop","Lectures","Days","Times","Places","Batches","Subjects","Teachers","AreaEditor","element","update","ObjectEditor","updateValue","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","internal","pageSize","getWidth","getHeight","catch","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","Exporter","tableMode","downloader","Screen","refs","area","request","req","swap","switcher","otherLecture","otherValidator","others_AreaEditor","others_ObjectEditor","deletor","objector","flexDirection","others_Exporter","minWidth","ref","marginBottom","colSpan","ObjectEdit","rowSpan","left","AreaEdit","col","colIndex","swapper","row","rowIndex","top","block","others_LectureModal","st","bh","tr","effectedRow","r","lectureSwap","effectedCol","c","User","Tables","action","quicker","_this2$state$creator","_this2$state$creator2","marginRight","deleteTable","baseName","fontWeight","DefaultCreator","listshow","showitem","itemlist","lectCard","tm","pc","dy","marginLeft","paddingBottom","dayObj","DefaultQuicker","timeObj","placeObj","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","Modal","modal","button","waiting","confirm","implement","System","App","position","components_Welcome","components_Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d876ece0.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const COLORS = [\r\n  \"transparent\",\r\n  \"#ff5e52\",\r\n  \"#fff60c\",\r\n  \"#a7e034\",\r\n  \"#e0dfc7\",\r\n  \"#6777eb\"\r\n];\r\n\r\nexport const LECTURE_COLOR = \"transparent\";\r\nexport const DAY_COLOR = \"transparent\";\r\nexport const TIME_COLOR = \"transparent\";\r\nexport const PLACE_COLOR = \"transparent\";\r\nexport const BATCH_COLOR = \"transparent\";\r\nexport const SUBJECT_COLOR = \"transparent\";\r\nexport const TEACHER_COLOR = \"transparent\";\r\nexport const TABLE_HEADER_COLOR = \"transparent\";\r\nexport const TABLE_FOOTER_COLOR = \"transparent\";\r\nexport const TABLE_SIDEBAR_COLOR = \"transparent\";\r\n\r\nexport const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect, ex = { id: \"exception\" }) => {\r\n  let lectFind = lectures.filter(\r\n    l =>\r\n      l.time === lect.time &&\r\n      l.day === lect.day &&\r\n      l.place === lect.place &&\r\n      l.id !== lect.id\r\n  );\r\n  if (lectFind.length > 0 && lectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n      return {\r\n        value: false,\r\n        message:\r\n          \"This batch/class is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      let secLectFind = lectures.filter(\r\n        l =>\r\n          l.teacher === lect.teacher &&\r\n          l.time === lect.time &&\r\n          l.day === lect.day &&\r\n          l.id !== lect.id\r\n      );\r\n      if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n        return {\r\n          value: false,\r\n          message:\r\n            \"One teacher cannot teach two batches/classes at the same time.\"\r\n        };\r\n      } else {\r\n        return {\r\n          value: true,\r\n          message: \"\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const batchValidator = (batches, batch, ex = { id: \"exception\" }) => {\r\n  let batchFind = batches.filter(\r\n    b => b.name === batch.name && b.id !== batch.id\r\n  );\r\n  if (batchFind.length > 0 && batchFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A batch with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const dayValidator = (days, day, ex = { id: \"exception\" }) => {\r\n  let dayFind = days.filter(d => d.name === day.name && d.id !== day.id);\r\n  if (dayFind.length > 0 && dayFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A day with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const timeValidator = (times, time, ex = { id: \"exception\" }) => {\r\n  let timeFind = times.filter(t => t.name === time.name && t.id !== time.id);\r\n  if (timeFind.length > 0 && timeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A time with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const placeValidator = (places, place, ex = { id: \"exception\" }) => {\r\n  let placeFind = places.filter(\r\n    p => p.name === place.name && p.id !== place.id\r\n  );\r\n  if (placeFind.length > 0 && placeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A place with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const subjectValidator = (\r\n  subjects,\r\n  subject,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let subjectFind = subjects.filter(\r\n    s => s.name === subject.name && s.id !== subject.id\r\n  );\r\n  if (subjectFind.length > 0 && subjectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A subject with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const teacherValidator = (\r\n  teachers,\r\n  teacher,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let teacherFind = teachers.filter(\r\n    t => t.name === teacher.name && t.id !== teacher.id\r\n  );\r\n  if (teacherFind.length > 0 && teacherFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A teacher with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols,\r\n        header: { text: \"Quick Table\", color: \"transparent\" },\r\n        footer: { text: \"Quick Table\", color: \"transparent\" },\r\n        sidebar: { text: \"Acadtable\", color: \"transparent\" }\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { COLORS } from \"../../actions/helpers\";\r\n\r\nclass ColorsPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div style={this.props.style == null ? {} : this.props.style}>\r\n        {COLORS.map(color => {\r\n          let addClass = color === this.props.color ? \"selected\" : \"\";\r\n          return (\r\n            <span\r\n              className={\"color-btn \" + addClass}\r\n              style={{ background: color }}\r\n              key={\"color\" + color}\r\n              onClick={() => {\r\n                this.props.change(color);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorsPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  DAY_COLOR,\r\n  TIME_COLOR,\r\n  PLACE_COLOR,\r\n  BATCH_COLOR,\r\n  SUBJECT_COLOR,\r\n  TEACHER_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      batch: null,\r\n      subject: null,\r\n      color: null,\r\n      display: null,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              info.color = this.state.params.color;\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info, {\r\n                  id: this.state.params.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.props.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {toEdit.map(key => {\r\n              console.log(key);\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {key} &nbsp;\r\n                    </label>\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    <button\r\n                      style={{ margin: \"0 0.5em\" }}\r\n                      onClick={() => {\r\n                        this.setState({ display: key });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.params.color}\r\n                change={color => {\r\n                  this.setState({ params: { ...this.state.params, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}>Cancel</button>\r\n              </span>\r\n              &nbsp;\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator;\r\n      let color = \"transparent\";\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          color = DAY_COLOR;\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          color = TIME_COLOR;\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          color = PLACE_COLOR;\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          color = SUBJECT_COLOR;\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          color = BATCH_COLOR;\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          color = TEACHER_COLOR;\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n          >\r\n            Back\r\n          </button>\r\n          <div style={{ marginTop: \"1em\" }}>\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  creator({ name, color });\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                    {this.state.display} &nbsp;\r\n                  </label>\r\n                  <input type=\"text\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>\r\n              </form>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass AreaEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\" key=\"areacolor\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element.color}\r\n                  change={color => {\r\n                    this.setState({\r\n                      element: { ...this.state.element, color }\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\" key={\"area\" + e}>\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.element[e]}\r\n                  onChange={ex => {\r\n                    let element = { ...this.state.element };\r\n                    element[e] = ex.target.value;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            {this.props.delete !== null ? (\r\n              <button\r\n                onClick={() => {\r\n                  this.props.delete();\r\n                  this.props.unshowModal();\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : null}\r\n            &nbsp;\r\n            <input type=\"submit\" value=\"Update\" className=\"black-btn\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(AreaEditor);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass ObjectEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element[this.props.obj]).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\" key=\"areacolor\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element[this.props.obj].color}\r\n                  change={color => {\r\n                    let element = { ...this.state.element };\r\n                    element[this.props.obj].color = color;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\" key={\"area\" + e}>\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.element[this.props.obj][e]}\r\n                  onChange={ex => {\r\n                    let element = { ...this.state.element };\r\n                    element[this.props.obj][e] = ex.target.value;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            {this.props.delete !== null ? (\r\n              <button\r\n                onClick={() => {\r\n                  this.props.delete();\r\n                  this.props.unshowModal();\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : null}\r\n            &nbsp;\r\n            <input\r\n              type=\"submit\"\r\n              value={this.props.updateValue}\r\n              className=\"black-btn\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(ObjectEditor);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth + 600,\r\n          height: tableHeight + 600\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth + 30, tableHeight + 40], \"landscape\");\r\n          }\r\n          doc.addImage(\r\n            dataUrl,\r\n            \"PNG\",\r\n            30,\r\n            40,\r\n            doc.internal.pageSize.getWidth() - 60,\r\n            doc.internal.pageSize.getHeight() - 80\r\n          );\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nclass Exporter extends Component {\r\n  render() {\r\n    let screen = this.props.screen;\r\n    return (\r\n      <div>\r\n        <h1>Export As</h1>\r\n        <label htmlFor=\"\">Document Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"pdfrender render\",\r\n              downloader: downloadPDF,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PDF\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"\">Image Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadPNG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PNG\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadJPEG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          JPEG\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            screen.props.unshowModal();\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Exporter;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  updateTable,\r\n  updateLecture,\r\n  deleteLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapPlace,\r\n  swapTeacher,\r\n  swapSubject,\r\n  swapTime,\r\n  updateBatch,\r\n  updateDay,\r\n  updatePlace,\r\n  updateSubject,\r\n  updateTeacher,\r\n  updateTime,\r\n  deleteBatch,\r\n  deleteDay,\r\n  deletePlace,\r\n  deleteSubject,\r\n  deleteTeacher,\r\n  deleteTime\r\n} from \"../../actions\";\r\n\r\nimport { listKey, keyList, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../others/LectureModal\";\r\nimport AreaEditor from \"../others/AreaEditor\";\r\nimport ObjectEditor from \"../others/ObjectEditor\";\r\nimport Exporter from \"../others/Exporter\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  switcher(area, request) {\r\n    let req = this.props[\r\n      `${request}${area[0].toUpperCase()}${listKey(area).substr(\r\n        1,\r\n        listKey(area).length\r\n      )}`\r\n    ];\r\n    if (req == null) {\r\n      return null;\r\n    }\r\n    return req;\r\n  }\r\n  swapper(area, from, to) {\r\n    let swap = null;\r\n    swap = this.switcher(area, \"swap\");\r\n    if (swap != null) {\r\n      swap(from.id, to.id);\r\n    }\r\n  }\r\n  lectureSwap(from, to) {\r\n    let lectFind = this.props.lectures.filter(\r\n      l => l.day === to.day && l.time === to.time && l.place === to.place\r\n    );\r\n    if (lectFind.length > 0) {\r\n      let otherLecture = { ...lectFind[0] };\r\n      otherLecture = {\r\n        ...otherLecture,\r\n        day: from.day,\r\n        time: from.time,\r\n        place: from.place\r\n      };\r\n      let otherValidator = lectureValidator(\r\n        this.props.lectures,\r\n        otherLecture,\r\n        from\r\n      );\r\n      if (otherValidator.value) {\r\n        this.props.updateLecture(otherLecture.id, otherLecture);\r\n        let validator = lectureValidator(this.props.lectures, to, otherLecture);\r\n        if (validator.value) {\r\n          this.props.updateLecture(to.id, to);\r\n        } else {\r\n          this.props.showModal(\"message\", validator.message);\r\n        }\r\n      } else {\r\n        this.props.showModal(\r\n          \"message\",\r\n          \"2nd lecture error , \" + otherValidator.message\r\n        );\r\n      }\r\n    } else {\r\n      let validator = lectureValidator(this.props.lectures, to);\r\n      if (validator.value) {\r\n        this.props.updateLecture(to.id, to);\r\n      } else {\r\n        this.props.showModal(\"message\", validator.message);\r\n      }\r\n    }\r\n  }\r\n  AreaEdit(area, element) {\r\n    this.props.showModal(\r\n      \"content\",\r\n      <AreaEditor\r\n        element={element}\r\n        update={data => {\r\n          this.switcher(area, \"update\")(element.id, data);\r\n        }}\r\n        delete={() => {\r\n          this.switcher(area, \"delete\")(element.id);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  ObjectEdit(area, obj, element) {\r\n    this.props.showModal(\r\n      \"content\",\r\n      <ObjectEditor\r\n        element={element}\r\n        obj={obj}\r\n        update={data => {\r\n          this.switcher(keyList(area), \"update\")(element.id, data);\r\n        }}\r\n        delete={null}\r\n      />\r\n    );\r\n  }\r\n  deleter(area, element) {\r\n    let deletor = null;\r\n    deletor = this.switcher(area, \"delete\");\r\n    if (deletor != null) {\r\n      deletor(element.id);\r\n    } else {\r\n      console.log(deletor);\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\"content\", <Exporter screen={this} />);\r\n            }}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                    key={table.id + \"error\"}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    {table.header.text.length > 0 ? (\r\n                      <tr\r\n                        className=\"table-header\"\r\n                        style={{ background: table.header.color }}\r\n                      >\r\n                        <td colSpan={cols.length + 2}>\r\n                          <span>{table.header.text}</span>\r\n\r\n                          <div className=\"block-buttons\">\r\n                            <button\r\n                              className=\"edit\"\r\n                              onClick={() => {\r\n                                this.ObjectEdit(\"table\", \"header\", table);\r\n                              }}\r\n                            />\r\n                            <button\r\n                              className=\"delete\"\r\n                              onClick={() => {\r\n                                this.props.updateTable(table.id, {\r\n                                  ...table,\r\n                                  header: {\r\n                                    ...table.header,\r\n                                    text: \"\"\r\n                                  }\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr className=\"screen-element\">\r\n                        <td colSpan={cols.length + 2}>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.ObjectEdit(\"table\", \"header\", table);\r\n                            }}\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </thead>\r\n                  <tbody>\r\n                    {table.sidebar.text.length > 0 ? (\r\n                      <tr\r\n                        className=\"table-sidebar\"\r\n                        style={{ background: table.sidebar.color }}\r\n                      >\r\n                        <td rowSpan={rows.length + 2}>\r\n                          <div>\r\n                            <span>{table.sidebar.text}</span>\r\n                          </div>\r\n                          <div className=\"block-buttons\">\r\n                            <button\r\n                              className=\"edit\"\r\n                              onClick={() => {\r\n                                this.ObjectEdit(\"table\", \"sidebar\", table);\r\n                              }}\r\n                            />\r\n                            <button\r\n                              className=\"delete\"\r\n                              onClick={() => {\r\n                                this.props.updateTable(table.id, {\r\n                                  ...table,\r\n                                  sidebar: {\r\n                                    ...table.sidebar,\r\n                                    text: \"\"\r\n                                  }\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr className=\"table-sidebar\">\r\n                        <td rowSpan={rows.length + 2}>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.ObjectEdit(\"table\", \"sidebar\", table);\r\n                            }}\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                    <tr>\r\n                      <th\r\n                        className=\"main-block\"\r\n                        style={\r\n                          base.color != null || base.color !== \"transparent\"\r\n                            ? { background: base.color }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        {base != null ? (\r\n                          <div>\r\n                            <span>{base.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.AreaEdit(table.base, base);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        ) : null}\r\n                      </th>\r\n                      {cols.map((col, colIndex) => {\r\n                        return (\r\n                          <th\r\n                            key={\"c\" + col.id}\r\n                            className=\"col-block\"\r\n                            style={\r\n                              col.color != null || col.color !== \"transparent\"\r\n                                ? { background: col.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{col.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {colIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"left\"\r\n                                />\r\n                              )}\r\n                              {colIndex === cols.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"right\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.AreaEdit(table.cols, col);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </th>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n\r\n                    {rows.map((row, rowIndex) => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <th\r\n                            className=\"row-block\"\r\n                            style={\r\n                              row.color != null || row.color !== \"transparent\"\r\n                                ? { background: row.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{row.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {rowIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"above\"\r\n                                />\r\n                              )}\r\n                              {rowIndex === rows.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"bottom\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                onClick={() => {\r\n                                  this.AreaEdit(table.rows, row);\r\n                                }}\r\n                                style={{\r\n                                  width: \"60%\",\r\n                                  height: \"50%\",\r\n                                  top: \"25%\",\r\n                                  left: \"20%\"\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </th>\r\n                          {cols.map((col, colIndex) => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    let toEdit = [\r\n                                      \"day\",\r\n                                      \"time\",\r\n                                      \"place\",\r\n                                      \"batch\",\r\n                                      \"subject\",\r\n                                      \"teacher\"\r\n                                    ];\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={toEdit.filter(p => {\r\n                                          if (\r\n                                            Object.keys(params).indexOf(p) < 0\r\n                                          ) {\r\n                                            return p;\r\n                                          }\r\n                                          return null;\r\n                                        })}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block\"\r\n                                  style={{ background: lecture.color }}\r\n                                >\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Batch Error\r\n                                    </span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                  <div className=\"block-buttons\">\r\n                                    {rowIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"above\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i - 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {rowIndex === rows.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"bottom\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i + 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === cols.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"right\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i + 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"left\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i - 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    <button\r\n                                      className=\"edit\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"content\",\r\n                                          <LectureModal\r\n                                            id={lecture.id}\r\n                                            params={{ ...lecture }}\r\n                                            edit={[\r\n                                              \"subject\",\r\n                                              \"batch\",\r\n                                              \"teacher\"\r\n                                            ]}\r\n                                            mode=\"update\"\r\n                                          />\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"delete\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"confirm\",\r\n                                          \"Are you sure ?\",\r\n                                          [\r\n                                            () => {\r\n                                              this.props.deleteLecture(\r\n                                                lecture.id\r\n                                              );\r\n                                            }\r\n                                          ]\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    {table.footer.text.length > 0 ? (\r\n                      <tr\r\n                        className=\"table-footer\"\r\n                        style={{ background: table.footer.color }}\r\n                      >\r\n                        <td colSpan={cols.length + 2}>\r\n                          <span>{table.footer.text}</span>\r\n\r\n                          <div className=\"block-buttons\">\r\n                            <button\r\n                              className=\"edit\"\r\n                              onClick={() => {\r\n                                this.ObjectEdit(\"table\", \"footer\", table);\r\n                              }}\r\n                            />\r\n                            <button\r\n                              className=\"delete\"\r\n                              onClick={() => {\r\n                                this.props.updateTable(table.id, {\r\n                                  ...table,\r\n                                  footer: { ...table.footer, text: \"\" }\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr className=\"screen-element\">\r\n                        <td colSpan={cols.length + 2}>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.ObjectEdit(\"table\", \"footer\", table);\r\n                            }}\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tfoot>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    updateTable,\r\n    updateLecture,\r\n    deleteLecture,\r\n    swapBatch,\r\n    swapDay,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTeacher,\r\n    swapTime,\r\n    updateBatch,\r\n    updateDay,\r\n    updatePlace,\r\n    updateSubject,\r\n    updateTeacher,\r\n    updateTime,\r\n    deleteBatch,\r\n    deleteDay,\r\n    deletePlace,\r\n    deleteSubject,\r\n    deleteTeacher,\r\n    deleteTime\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  listKey,\r\n  TABLE_HEADER_COLOR,\r\n  TABLE_FOOTER_COLOR,\r\n  TABLE_SIDEBAR_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\",\r\n      header: { text: \"\", color: TABLE_HEADER_COLOR },\r\n      footer: { text: \"\", color: TABLE_FOOTER_COLOR },\r\n      sidebar: { text: \"\", color: TABLE_SIDEBAR_COLOR }\r\n    },\r\n    quicker: {\r\n      base: \"days\",\r\n      rows: \"places\",\r\n      cols: \"times\",\r\n      header: \"\",\r\n      footer: \"\",\r\n      sidebar: \"\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.createTable({\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let {\r\n                  id,\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.updateTable(id, {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.header.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: {\r\n                        ...this.state.creator.header,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.header.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: { ...this.state.creator.header, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.footer.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: {\r\n                        ...this.state.creator.footer,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.footer.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: { ...this.state.creator.footer, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Sidebar</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.sidebar.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      sidebar: {\r\n                        ...this.state.creator.sidebar,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.sidebar.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      sidebar: { ...this.state.creator.sidebar, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.header}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, header: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.footer}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, footer: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols,\r\n                    header: {\r\n                      text: this.state.quicker.header,\r\n                      color: \"transparent\"\r\n                    },\r\n                    footer: {\r\n                      text: this.state.quicker.footer,\r\n                      color: \"transparent\"\r\n                    },\r\n                    sidebar: {\r\n                      text: this.state.quicker.sidebar,\r\n                      color: \"transparent\"\r\n                    }\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  LECTURE_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: \"%batch%%subject%%teacher%\",\r\n  mode: \"create\"\r\n};\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture, {\r\n                  id: this.state.creator.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.creator.color}\r\n                change={color => {\r\n                  this.setState({ creator: { ...this.state.creator, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div\r\n          key={lecture.id}\r\n          className=\"block\"\r\n          style={{ background: lecture.color }}\r\n        >\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  ...DefaultCreator,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { BATCH_COLOR, batchValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: BATCH_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.createBatch(batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.updateBatch(this.state.creator.id, batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div\r\n                key={batch.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    batch.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : batch.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch,\r\n    showModal\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createDay,\r\n  updateDay,\r\n  swapDay,\r\n  deleteDay,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { DAY_COLOR, dayValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: DAY_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.createDay(day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.updateDay(this.state.creator.id, day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color</label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Days</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                let dayObj = { name: day, color: DAY_COLOR };\r\n                let validator = dayValidator(this.props.days, dayObj);\r\n                if (validator.value) {\r\n                  this.props.createDay(dayObj);\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div\r\n                key={day.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    day.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : day.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay,\r\n    showModal\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTime,\r\n  updateTime,\r\n  swapTime,\r\n  deleteTime,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { TIME_COLOR, timeValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TIME_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  fromTime: \"08\",\r\n  fromMeridian: \"AM\",\r\n  toTime: \"01\",\r\n  toMeridian: \"PM\",\r\n  lectureTime: \"60\",\r\n  color: TIME_COLOR\r\n};\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color</label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  let timeObj = { name: time, color: this.state.quicker.color };\r\n                  let validator = timeValidator(this.props.times, timeObj);\r\n                  if (validator.value) {\r\n                    this.props.createTime(timeObj);\r\n                  }\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.createTime(time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.updateTime(this.state.creator.id, time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"colorbtn\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Quick Times\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div\r\n                key={time.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    time.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : time.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime,\r\n    showModal\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { PLACE_COLOR, placeValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: PLACE_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  name: \"Room\",\r\n  from: \"1\",\r\n  to: \"10\",\r\n  color: PLACE_COLOR\r\n};\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  let placeObj = {\r\n                    name: place,\r\n                    color: this.state.quicker.color\r\n                  };\r\n                  let validator = placeValidator(this.props.places, placeObj);\r\n                  if (validator.value) {\r\n                    this.props.createPlace(placeObj);\r\n                  }\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.createPlace(place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.updatePlace(this.state.creator.id, place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div\r\n                key={place.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    place.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : place.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace,\r\n    showModal\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { SUBJECT_COLOR, subjectValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: SUBJECT_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.createSubject(subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.updateSubject(this.state.creator.id, subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Subjects</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div\r\n                key={subject.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    subject.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : subject.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject,\r\n    showModal\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { TEACHER_COLOR, teacherValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TEACHER_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(this.props.teachers, teacher);\r\n              if (validator.value) {\r\n                this.props.createTeacher(teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(this.props.teachers, teacher);\r\n              if (validator.value) {\r\n                this.props.updateTeacher(this.state.creator.id, teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Teachers</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div\r\n                key={teacher.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    teacher.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : teacher.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher,\r\n    showModal\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.2.7;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}