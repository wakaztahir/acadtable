{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","actions/downloader.js","components/others/LectureModal.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","filter","l","time","day","place","value","message","batch","id","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","createTime","createPlace","createBatch","createSubject","subject","createTeacher","teacher","DefaultSetupSettings","info","name","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","color","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","i","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","catch","ex","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","LectureModal","params","creator","toEdit","edit","mode","list","defaultValue","margin","marginTop","Lectures","Days","Times","Places","Batches","Subjects","Teachers","Screen","tableMode","downloader","refs","objector","flexDirection","minWidth","ref","marginBottom","col","row","block","others_LectureModal","st","bh","tr","effectedRow","r","effectedCol","c","User","Tables","action","quicker","_this2$state$creator","_this2$state$creator2","updateTable","marginRight","deleteTable","baseName","fontWeight","tableID","listshow","showitem","itemlist","lectCard","tm","pc","dy","marginLeft","paddingBottom","updateBatch","swapBatch","deleteBatch","batchID","withID","current","future","newBatches","setDataKey","updateDay","swapDay","deleteDay","dayID","newDays","updateTime","swapTime","deleteTime","timeID","newTimes","updatePlace","swapPlace","deletePlace","placeID","newPlaces","updateSubject","swapSubject","deleteSubject","subjectID","newSubjects","updateTeacher","swapTeacher","deleteTeacher","teacherID","newTeachers","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","Modal","modal","button","waiting","confirm","implement","System","App","position","components_Welcome","components_Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.44023eb8.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect) => {\r\n  let lectFind = lectures.filter(\r\n    l => l.time === lect.time && l.day === lect.day && l.place === lect.place\r\n  );\r\n  if (lectFind.length > 0) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0) {\r\n      return {\r\n        value: false,\r\n        message: \"This batch is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      return {\r\n        value: true,\r\n        message: \"\"\r\n      };\r\n    }\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth,\r\n          height: tableHeight\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth, tableHeight], \"landscape\");\r\n          }\r\n          doc.addImage(dataUrl, \"PNG\", 20, 20);\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\nimport { keyList, lectureValidator } from \"../../actions/helpers\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      batch: null,\r\n      subject: null,\r\n      teacher: null,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.props.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {toEdit.map(key => {\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {key} &nbsp;\r\n                    </label>\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    <button\r\n                      style={{ margin: \"0 0.5em\" }}\r\n                      onClick={() => {\r\n                        this.setState({ display: key });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}>Cancel</button>\r\n              </span>\r\n              &nbsp;\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator;\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n          >\r\n            Back\r\n          </button>\r\n          <div style={{ marginTop: \"1em\" }}>\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  creator({ name });\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                    {this.state.display} &nbsp;\r\n                  </label>\r\n                  <input type=\"text\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>\r\n              </form>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  updateLecture,\r\n  deleteLecture\r\n} from \"../../actions\";\r\n\r\nimport { listKey, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../others/LectureModal\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"pdfrender render\",\r\n                downloader: downloadPDF,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadJPEG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download JPEG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadPNG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PNG\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>{base != null ? base.name : null}</td>\r\n                      {cols.map(col => {\r\n                        return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows.map(row => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <td>{row.name}</td>\r\n                          {cols.map(col => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={[\"subject\", \"batch\", \"teacher\"]}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td key={\"b\" + col.id} className=\"table-block\">\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Batch Error\r\n                                    </span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                  <div className=\"block-buttons\">\r\n                                    <button\r\n                                      className=\"above\"\r\n                                      onClick={() => {\r\n                                        let effectedRow = null;\r\n                                        rows.filter((r, i) => {\r\n                                          if (r.id === row.id) {\r\n                                            effectedRow = rows[i - 1];\r\n                                          }\r\n                                          return r;\r\n                                        });\r\n                                        if (effectedRow != null) {\r\n                                          lecture[listKey(table.rows)] =\r\n                                            effectedRow.id;\r\n                                          let validator = lectureValidator(\r\n                                            this.props.lectures,\r\n                                            lecture\r\n                                          );\r\n                                          if (validator.value) {\r\n                                            this.props.updateLecture(\r\n                                              lecture.id,\r\n                                              lecture\r\n                                            );\r\n                                          } else {\r\n                                            this.props.showModal(\r\n                                              \"message\",\r\n                                              validator.message\r\n                                            );\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"bottom\"\r\n                                      onClick={() => {\r\n                                        let effectedRow = null;\r\n                                        rows.filter((r, i) => {\r\n                                          if (r.id === row.id) {\r\n                                            effectedRow = rows[i + 1];\r\n                                          }\r\n                                          return r;\r\n                                        });\r\n                                        if (effectedRow != null) {\r\n                                          lecture[listKey(table.rows)] =\r\n                                            effectedRow.id;\r\n                                          let validator = lectureValidator(\r\n                                            this.props.lectures,\r\n                                            lecture\r\n                                          );\r\n                                          if (validator.value) {\r\n                                            this.props.updateLecture(\r\n                                              lecture.id,\r\n                                              lecture\r\n                                            );\r\n                                          } else {\r\n                                            this.props.showModal(\r\n                                              \"message\",\r\n                                              validator.message\r\n                                            );\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"right\"\r\n                                      onClick={() => {\r\n                                        let effectedCol = null;\r\n                                        cols.filter((c, i) => {\r\n                                          if (c.id === col.id) {\r\n                                            effectedCol = cols[i + 1];\r\n                                          }\r\n                                          return c;\r\n                                        });\r\n                                        if (effectedCol != null) {\r\n                                          lecture[listKey(table.cols)] =\r\n                                            effectedCol.id;\r\n                                          let validator = lectureValidator(\r\n                                            this.props.lectures,\r\n                                            lecture\r\n                                          );\r\n                                          if (validator.value) {\r\n                                            this.props.updateLecture(\r\n                                              lecture.id,\r\n                                              lecture\r\n                                            );\r\n                                          } else {\r\n                                            this.props.showModal(\r\n                                              \"message\",\r\n                                              validator.message\r\n                                            );\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"left\"\r\n                                      onClick={() => {\r\n                                        let effectedCol = null;\r\n                                        cols.filter((c, i) => {\r\n                                          if (c.id === col.id) {\r\n                                            effectedCol = cols[i - 1];\r\n                                          }\r\n                                          return c;\r\n                                        });\r\n                                        if (effectedCol != null) {\r\n                                          lecture[listKey(table.cols)] =\r\n                                            effectedCol.id;\r\n                                          let validator = lectureValidator(\r\n                                            this.props.lectures,\r\n                                            lecture\r\n                                          );\r\n                                          if (validator.value) {\r\n                                            this.props.updateLecture(\r\n                                              lecture.id,\r\n                                              lecture\r\n                                            );\r\n                                          } else {\r\n                                            this.props.showModal(\r\n                                              \"message\",\r\n                                              validator.message\r\n                                            );\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"edit\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"content\",\r\n                                          <LectureModal\r\n                                            id={lecture.id}\r\n                                            params={{ ...lecture }}\r\n                                            edit={[\r\n                                              \"subject\",\r\n                                              \"batch\",\r\n                                              \"teacher\"\r\n                                            ]}\r\n                                            mode=\"update\"\r\n                                          />\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"delete\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"confirm\",\r\n                                          \"Are you sure ?\",\r\n                                          [\r\n                                            () => {\r\n                                              this.props.deleteLecture(\r\n                                                lecture.id\r\n                                              );\r\n                                            }\r\n                                          ]\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    },\r\n    quicker: {\r\n      base: \"days\",\r\n      rows: \"places\",\r\n      cols: \"times\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let { base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.createTable({ base, baseValue, rows, cols });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let { id, base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.updateTable(id, { base, baseValue, rows, cols });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { keyList, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div key={lecture.id} className=\"block\">\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch\r\n} from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: { id: null, name: null, mode: \"create\" }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createDay, updateDay, swapDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Days</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                this.props.createDay({ name: day });\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTime, updateTime, swapTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    },\r\n    quicker: {\r\n      fromTime: \"08\",\r\n      fromMeridian: \"AM\",\r\n      toTime: \"01\",\r\n      toMeridian: \"PM\",\r\n      lectureTime: \"60\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  this.props.createTime({ name: time });\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Quick Times\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace\r\n} from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    },\r\n    quicker: { name: \"Room\", from: \"1\", to: \"10\" }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  this.props.createPlace({ name: place });\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject\r\n} from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Subjects</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: {\r\n                id: null,\r\n                name: null,\r\n                mode: \"create\"\r\n              }\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Teachers</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.1;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}