{"version":3,"sources":["classes/engine.js","actions/CoreActions.js","components/TableList.js","actions/TableActions.js","components/UserMenu.js","components/DisplayTable.js","components/Modal.js","components/App.js","reducers/index.js","reducers/CoreReducer.js","reducers/TableReducer.js","index.js"],"names":["engine","name","data","Object","classCallCheck","this","_name","_id","Math","random","toString","substr","_data","save","id","JSON","stringify","object","tempData","getTables","deleted","undefined","setTables","newname","renamed","overwrite","arguments","length","saved","localStorage","getItem","parse","keys","map","key","tablesData","setItem","displayModal","show","content","type","payload","TableList","props","listTables","getTablesArray","_this","tables","table","react_default","a","createElement","className","onClick","displayTable","editTable","renameTable","deleteTable","exportTable","React","Component","connect","state","Tables","UserMenu","x","preventDefault","onSubmit","handleForm","createTableModal","DisplayTable","selectedTable","Modal","console","log","disabledClassName","display","concat","children","App","components_UserMenu","components_TableList","components_DisplayTable","components_Modal","ModalDisplay","ModalContent","combineReducers","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"4MAuGeA,aAtGb,SAAAA,EAAYC,EAAMC,GAOhB,OAPuBC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACvBK,KAAKC,MAAQL,EACbI,KAAKE,IAAMC,KAAKC,SACbC,SAAS,IACTC,OAAO,EAAG,GACbN,KAAKO,MAAQV,EACDG,KAAKQ,4DAOjB,MAAO,CACLZ,KAJSI,KAAKJ,KAKda,GAJOT,KAAKS,GAKZZ,KAJSG,KAAKH,yCAQhB,OAAOa,KAAKC,UAAUX,KAAKY,2CAG3B,IAAIC,EAAWlB,EAAOmB,YAClBC,GAAU,EAMd,YAL0BC,IAAtBH,EAASb,KAAKS,MAChBI,EAASb,KAAKS,SAAMO,EACpBD,GAAU,GAEZpB,EAAOsB,UAAUJ,GACVE,iCAEFG,GACL,IAAIL,EAAWlB,EAAOmB,YAClBK,GAAU,EAQd,YAP0BH,IAAtBH,EAASb,KAAKS,KACD,MAAXS,IACFL,EAASb,KAAKS,IAAIb,KAAOsB,EACzBC,GAAU,GAGdxB,EAAOsB,UAAUJ,GACVM,iCAEe,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAN,IAAAK,UAAA,IAAAA,UAAA,GAClBR,EAAWlB,EAAOmB,YAClBS,GAAQ,EAWZ,YAV0BP,IAAtBH,EAASb,KAAKS,KAChBI,EAASb,KAAKS,IAAMT,KAAKY,SACzBW,GAAQ,GAEJH,IACFP,EAASb,KAAKS,IAAMT,KAAKY,SACzBW,GAAQ,GAGZ5B,EAAOsB,UAAUJ,GACVU,6BAMP,OAAOvB,KAAKE,iCAGZ,OAAOF,KAAKC,mCAGZ,OAAOD,KAAKO,sCAIDE,GACX,IAAII,EAAWlB,EAAOmB,YACtB,OAAoB,MAAhBD,EAASJ,GACJI,EAASJ,GAET,yCAIT,IAAII,EAAW,GAIf,OAH0C,MAAtCW,aAAaC,QAAQ,gBACvBZ,EAAWH,KAAKgB,MAAMF,aAAaC,QAAQ,gBAEtCZ,2CAGP,IAAIA,EAAWlB,EAAOmB,YAItB,OAHchB,OAAO6B,KAAKd,GAAUe,IAAI,SAAAC,GACtC,OAAOhB,EAASgB,uCAIHC,GACG,MAAdA,GACFN,aAAaO,QAAQ,aAAcrB,KAAKC,UAAUmB,oBCvF3CE,EAAe,SAACC,EAAMC,GACjC,MAAO,CACLC,KAAM,gBACNC,QAAS,CACPH,OACAC,aCAAG,8LAEFrC,KAAKsC,MAAMC,WAAW5C,EAAO6C,mDAEtB,IAAAC,EAAAzC,KACP,OAAOA,KAAKsC,MAAMI,OAAOd,IAAI,SAAAe,GAC3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAalB,IAAKc,EAAMlC,IACrCmC,EAAAC,EAAAC,cAAA,YAAOH,EAAM/C,MACbgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEE,QAAS,WACPP,EAAKH,MAAMW,aAAaN,EAAMlC,MAFlC,QAOAmC,EAAAC,EAAAC,cAAA,UACEE,QAAS,WACPP,EAAKH,MAAMY,UAAUP,EAAMlC,MAF/B,QAOAmC,EAAAC,EAAAC,cAAA,UACEE,QAAS,WACPP,EAAKH,MAAMa,YAAYR,EAAMlC,MAFjC,UAOAmC,EAAAC,EAAAC,cAAA,UACEE,QAAS,WACPP,EAAKH,MAAMc,YAAYT,EAAMlC,MAFjC,UAOAmC,EAAAC,EAAAC,cAAA,UACEE,QAAS,WACPP,EAAKH,MAAMe,YAAYV,EAAMlC,MAFjC,qBAtCY6C,IAAMC,WA0DfC,cANS,SAAAC,GACtB,MAAO,CACLf,OAAQe,EAAMC,SAMhB,CACET,aC7CwB,SAAAxC,GAE1B,MAAO,CACL0B,KAAM,gBACNC,QAAS,CACPO,MAJQhD,EAAOgD,MAAMlC,MD6CvByC,UC5EqB,SAAAzC,GAEvB,MAAO,CACL0B,KAAM,aACNC,QAAS,CACPO,MAJQhD,EAAOgD,MAAMlC,MD4EvB0C,YCzDuB,SAAA1C,GAEzB,MAAO,CACL0B,KAAM,eACNC,QAAS,CACPO,MAJQhD,EAAOgD,MAAMlC,MDyDvB2C,YCpEuB,SAAA3C,GAEzB,MAAO,CACL0B,KAAM,eACNC,QAAS,CACPO,MAJQhD,EAAOgD,MAAMlC,MDoEvB4C,YCvCuB,SAAA5C,GAEzB,MAAO,CACL0B,KAAM,eACNC,QAAS,CACPO,MAJQhD,EAAOgD,MAAMlC,MDuCvB8B,WDlFsB,SAAAG,GAExB,OAAkB,MADDA,EAER,GAEF,CACLP,KAAM,cACNC,QANeM,KCyEJc,CAUbnB,GE9EIsB,qLACOC,GACTA,EAAEC,4DAGF,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMgB,SAAU9D,KAAK+D,YACnBnB,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOX,KAAK,SACZS,EAAAC,EAAAC,cAAA,SAAOX,KAAK,8CAKX,IAAAM,EAAAzC,KACP,OACE4C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UACEE,QAAS,WACPP,EAAKH,MAAMN,cAAa,EAAMS,EAAKuB,sBAFvC,gBAOApB,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,mCA5BaQ,IAAMC,WAyCdC,cANS,SAAAC,GACtB,MAAO,CACLf,OAAQe,EAAMpB,YAMhB,CACEL,gBAHWwB,CAKbG,GCjDIM,mLAEF,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZrC,KAAKC,UAAUX,KAAKsC,MAAM4B,uBAJRZ,IAAMC,WAgBlBC,cANS,SAAAC,GACtB,MAAO,CACLd,MAAOc,EAAMS,gBAIFV,CAAyBS,GCblCE,mLACK,IAAA1B,EAAAzC,KACPoE,QAAQC,IAAIrE,KAAKsC,OACjB,IAAIgC,EAAoB,WAIxB,OAH2B,IAAvBtE,KAAKsC,MAAMiC,UACbD,EAAoB,IAGpB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAS,mBAAAyB,OAAqBF,IACjC1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,QACEC,UAAU,SACVC,QAAS,WACPP,EAAKH,MAAMN,cAAa,EAAO,QAHnC,MASFY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB/C,KAAKsC,MAAMmC,mBApBjCnB,IAAMC,WA2BXC,cACb,KACA,CAAExB,gBAFWwB,CAGbW,GC5BIO,mLAEF,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC6B,EAAD,MACA/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,cACAH,EAAAC,EAAAC,cAAC8B,EAAD,OAEFhC,EAAAC,EAAAC,cAAC+B,EAAD,OAEFjC,EAAAC,EAAAC,cAACgC,EAAD,CAAOP,QAASvE,KAAKsC,MAAMyC,cACxB/E,KAAKsC,MAAM0C,sBAbJ1B,IAAMC,WA2BTC,cAPS,SAAAC,GACtB,MAAO,CACLsB,aAActB,EAAMU,MAAMI,QAC1BS,aAAcvB,EAAMU,MAAMjC,UAIfsB,CAAyBkB,UC5BzBO,cAAgB,CAC7BvB,OCRoB,WAAuB,IAAtB7D,EAAsBwB,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GAAf,GAAI6D,EAAW7D,UAAAC,OAAA,EAAAD,UAAA,QAAAL,EAC3C,MAAoB,gBAAhBkE,EAAO/C,KACF+C,EAAO9C,QAETvC,GDKPsE,MCFmB,WAAuB,IAAtBtE,EAAsBwB,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GAAf,GAAI6D,EAAW7D,UAAAC,OAAA,EAAAD,UAAA,QAAAL,EAC1C,MAAoB,kBAAhBkE,EAAO/C,KACF,CACLoC,QAASW,EAAO9C,QAAQH,KACxBC,QAASgD,EAAO9C,QAAQF,SAGrBrC,GDJPqE,cEV2B,WAAyB,IAAxBrE,EAAwBwB,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GAAjB,KAAM6D,EAAW7D,UAAAC,OAAA,EAAAD,UAAA,QAAAL,EACpD,MAAoB,kBAAhBkE,EAAO/C,KACF+C,EAAO9C,QAAQO,MAEjB9C,KCKTsF,IAASC,OACPxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IAC3B5C,EAAAC,EAAAC,cAAC2C,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.c45e8f1c.chunk.js","sourcesContent":["class engine {\r\n  constructor(name, data) {\r\n    this._name = name;\r\n    this._id = Math.random()\r\n      .toString(36)\r\n      .substr(2, 9);\r\n    this._data = data;\r\n    let saved = this.save();\r\n    return saved;\r\n  }\r\n  object() {\r\n    let name = this.name;\r\n    let id = this.id;\r\n    let data = this.data;\r\n    return {\r\n      name,\r\n      id,\r\n      data\r\n    };\r\n  }\r\n  toString() {\r\n    return JSON.stringify(this.object());\r\n  }\r\n  delete() {\r\n    let tempData = engine.getTables();\r\n    let deleted = false;\r\n    if (tempData[this.id] !== undefined) {\r\n      tempData[this.id] = undefined;\r\n      deleted = true;\r\n    }\r\n    engine.setTables(tempData);\r\n    return deleted;\r\n  }\r\n  rename(newname) {\r\n    let tempData = engine.getTables();\r\n    let renamed = false;\r\n    if (tempData[this.id] !== undefined) {\r\n      if (newname != null) {\r\n        tempData[this.id].name = newname;\r\n        renamed = true;\r\n      }\r\n    }\r\n    engine.setTables(tempData);\r\n    return renamed;\r\n  }\r\n  save(overwrite = false) {\r\n    let tempData = engine.getTables();\r\n    let saved = false;\r\n    if (tempData[this.id] === undefined) {\r\n      tempData[this.id] = this.object();\r\n      saved = true;\r\n    } else {\r\n      if (overwrite) {\r\n        tempData[this.id] = this.object();\r\n        saved = true;\r\n      }\r\n    }\r\n    engine.setTables(tempData);\r\n    return saved;\r\n  }\r\n\r\n  //Getters & Setters\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  get name() {\r\n    return this._name;\r\n  }\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  //Static Functions\r\n  static table(id) {\r\n    let tempData = engine.getTables();\r\n    if (tempData[id] != null) {\r\n      return tempData[id];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  static getTables() {\r\n    let tempData = {};\r\n    if (localStorage.getItem(\"tablesData\") != null) {\r\n      tempData = JSON.parse(localStorage.getItem(\"tablesData\"));\r\n    }\r\n    return tempData;\r\n  }\r\n  static getTablesArray() {\r\n    let tempData = engine.getTables();\r\n    let newdata = Object.keys(tempData).map(key => {\r\n      return tempData[key];\r\n    });\r\n    return newdata;\r\n  }\r\n  static setTables(tablesData) {\r\n    if (tablesData != null) {\r\n      localStorage.setItem(\"tablesData\", JSON.stringify(tablesData));\r\n    }\r\n  }\r\n}\r\n\r\nexport default engine;\r\n","export const listTables = tables => {\r\n  let tablesData = tables;\r\n  if (tablesData == null) {\r\n    return [];\r\n  }\r\n  return {\r\n    type: \"LIST_TABLES\",\r\n    payload: tablesData\r\n  };\r\n};\r\n\r\nexport const displayModal = (show, content) => {\r\n  return {\r\n    type: \"DISPLAY_MODAL\",\r\n    payload: {\r\n      show,\r\n      content\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport engine from \"../classes/engine\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listTables } from \"../actions/CoreActions\";\r\n\r\nimport {\r\n  displayTable,\r\n  editTable,\r\n  renameTable,\r\n  exportTable,\r\n  deleteTable\r\n} from \"../actions/TableActions\";\r\n\r\nclass TableList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.listTables(engine.getTablesArray());\r\n  }\r\n  render() {\r\n    return this.props.tables.map(table => {\r\n      return (\r\n        <div className=\"table-item\" key={table.id}>\r\n          <span>{table.name}</span>\r\n          <div className=\"table-item-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.displayTable(table.id);\r\n              }}\r\n            >\r\n              show\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.editTable(table.id);\r\n              }}\r\n            >\r\n              edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.renameTable(table.id);\r\n              }}\r\n            >\r\n              rename\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteTable(table.id);\r\n              }}\r\n            >\r\n              delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.exportTable(table.id);\r\n              }}\r\n            >\r\n              export\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    displayTable,\r\n    editTable,\r\n    renameTable,\r\n    deleteTable,\r\n    exportTable,\r\n    listTables\r\n  }\r\n)(TableList);\r\n","import engine from \"../classes/engine\";\r\n\r\nexport const editTable = id => {\r\n  let table = engine.table(id);\r\n  return {\r\n    type: \"EDIT_TABLE\",\r\n    payload: {\r\n      table\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteTable = id => {\r\n  let table = engine.table(id);\r\n  return {\r\n    type: \"DELETE_TABLE\",\r\n    payload: {\r\n      table\r\n    }\r\n  };\r\n};\r\n\r\nexport const renameTable = id => {\r\n  let table = engine.table(id);\r\n  return {\r\n    type: \"RENAME_TABLE\",\r\n    payload: {\r\n      table\r\n    }\r\n  };\r\n};\r\n\r\nexport const displayTable = id => {\r\n  let table = engine.table(id);\r\n  return {\r\n    type: \"DISPLAY_TABLE\",\r\n    payload: {\r\n      table\r\n    }\r\n  };\r\n};\r\n\r\nexport const exportTable = id => {\r\n  let table = engine.table(id);\r\n  return {\r\n    type: \"EXPORT_TABLE\",\r\n    payload: {\r\n      table\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { displayModal } from \"../actions/CoreActions\";\r\n\r\nclass UserMenu extends React.Component {\r\n  handleForm(x) {\r\n    x.preventDefault();\r\n  }\r\n  createTableModal() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleForm}>\r\n          <label>Name : </label>\r\n          <input type=\"text\" />\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"user-menu\">\r\n        <div className=\"user-menu-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.displayModal(true, this.createTableModal());\r\n            }}\r\n          >\r\n            Create Table\r\n          </button>\r\n          <button>Import Table</button>\r\n          <button>Table Options</button>\r\n          <button>Settings</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.TableList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    displayModal\r\n  }\r\n)(UserMenu);\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nclass DisplayTable extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"display-table\">\r\n        {JSON.stringify(this.props.selectedTable)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    table: state.selectedTable\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DisplayTable);\r\n","import React from \"react\";\r\n\r\nimport { displayModal } from \"../actions/CoreActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Modal extends React.Component {\r\n  render() {\r\n    console.log(this.props);\r\n    let disabledClassName = \"disabled\";\r\n    if (this.props.display === true) {\r\n      disabledClassName = \"\";\r\n    }\r\n    return (\r\n      <div className={`modal-container ${disabledClassName}`}>\r\n        <div className=\"modal\">\r\n          <div className=\"modal-close\">\r\n            <span\r\n              className=\"g-head\"\r\n              onClick={() => {\r\n                this.props.displayModal(false, null);\r\n              }}\r\n            >\r\n              X\r\n            </span>\r\n          </div>\r\n          <div className=\"modal-content\">{this.props.children}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { displayModal }\r\n)(Modal);\r\n","import React from \"react\";\r\nimport TableList from \"./TableList\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport DisplayTable from \"./DisplayTable\";\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <UserMenu />\r\n        <div className=\"horizontal-wrapper\">\r\n          <div className=\"table-list\">\r\n            <h1 className=\"g-head\">Table List</h1>\r\n            <TableList />\r\n          </div>\r\n          <DisplayTable />\r\n        </div>\r\n        <Modal display={this.props.ModalDisplay}>\r\n          {this.props.ModalContent}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ModalDisplay: state.Modal.display,\r\n    ModalContent: state.Modal.content\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { Tables, Modal } from \"./CoreReducer\";\r\nimport { selectedTable } from \"./TableReducer\";\r\n// import UserReducer from \"./UserReducer\";\r\n// import SettingsReducer from \"./SettingsReducer\";\r\n\r\nexport default combineReducers({\r\n  Tables,\r\n  Modal,\r\n  selectedTable\r\n});\r\n","export const Tables = (data = [], action) => {\r\n  if (action.type === \"LIST_TABLES\") {\r\n    return action.payload;\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const Modal = (data = {}, action) => {\r\n  if (action.type === \"DISPLAY_MODAL\") {\r\n    return {\r\n      display: action.payload.show,\r\n      content: action.payload.content\r\n    };\r\n  }\r\n  return data;\r\n};\r\n","export const selectedTable = (data = null, action) => {\r\n  if (action.type === \"DISPLAY_TABLE\") {\r\n    return action.payload.table;\r\n  }\r\n  return data;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}