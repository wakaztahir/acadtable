{"version":3,"sources":["components/Header.js","components/display/Welcome.js","components/display/Select.js","components/display/AddBatches.js","components/display/Screen.js","components/display/index.js","components/reusables/Former.js","storage/index.js","actions/index.js","actions/types.js","components/tables/Create.js","components/tables/Rename.js","components/tables/index.js","components/batches/Create.js","components/batches/Rename.js","components/batches/index.js","components/lectures/Create.js","components/lectures/Rename.js","components/lectures/index.js","components/App.js","reducers/TableList.js","reducers/BatchList.js","reducers/LectureList.js","reducers/index.js","reducers/SelectedTable.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","Select","AddBatches","this","props","batches","length","connect","state","BatchList","Screen","Display","display_Welcome","display_Select","display_AddBatches","display_Screen","list","welcomeMessage","selected","nothingSelected","addBatches","screen","TableList","SelectedTable","Input","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","name","value","change","event","setState","target","onChange","inherits","createClass","key","type","className","style","Former","values","Form","onSubmit","undefined","preventDefault","FormSubmit","children","formProps","storage","focus","data_prefix","sessionStorage","getItem","JSON","parse","ex","id","data","setItem","stringify","removeItem","getList","creation","push","saveList","saveData","newname","newlist","map","item","filter","deleteData","table","batch","lecture","renameTableById","rename","renameBatchById","renameLectureById","CreateTable","onFormSubmit","createTableByName","cancel","_Former","htmlFor","Former_Input","assign","onClick","Math","random","toString","split","substr","create","RenameTable","handleSubmit","_this2","Tables","showForm","renameId","showRenameForm","additional","SelectBtn","selectTableById","deleteTableById","_this3","Create","Rename","renderList","getData","delete","deleted","CreateBatch","createBatchByName","RenameBatch","Batch","Batchs","deleteBatchById","batches_Create","batches_Rename","SelectedBatch","CreateLecture","createLectureByName","console","log","RenameLecture","Lecture","Lectures","deleteLectureById","lectures_Create","lectures_Rename","LectureList","SelectedLecture","App","HashRouter","Route","path","component","exact","Batches","session","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.bc2fe872.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/tables\">\r\n            <button>Tables</button>\r\n          </Link>\r\n\r\n          <Link to=\"/batches\">\r\n            <button>Batches</button>\r\n          </Link>\r\n\r\n          <Link to=\"/lectures\">\r\n            <button>Lectures</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return <div>Welcome !!</div>;\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    return <div>Select a Table</div>;\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddBatches extends Component {\r\n  render() {\r\n    if (this.props.batches.length === 0) {\r\n      return (\r\n        <div>\r\n          You have't created any batches , Please create batches and add them to\r\n          the table of your choice.\r\n        </div>\r\n      );\r\n    }\r\n    return <div>You have no batches in the selected table</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.BatchList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddBatches);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    return <div>This is the actual Displayer</div>;\r\n  }\r\n}\r\n\r\nexport default Screen;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport Select from \"./Select\";\r\nimport AddBatches from \"./AddBatches\";\r\nimport Screen from \"./Screen\";\r\n\r\nclass Display extends Component {\r\n  welcomeMessage() {\r\n    return <Welcome />;\r\n  }\r\n  nothingSelected() {\r\n    return <Select />;\r\n  }\r\n  addBatches() {\r\n    return <AddBatches />;\r\n  }\r\n  screen() {\r\n    return <Screen />;\r\n  }\r\n  render() {\r\n    if (this.props.list.length === 0) {\r\n      return this.welcomeMessage();\r\n    } else if (this.props.selected === null) {\r\n      return this.nothingSelected();\r\n    } else if (this.props.selected !== null) {\r\n      if (this.props.selected.list.length === 0) {\r\n        return this.addBatches();\r\n      } else {\r\n        return this.screen();\r\n      }\r\n    } else {\r\n      return <div>We cannot figure out the display</div>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TableList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nfunction Former(name) {\r\n  const values = {};\r\n  const FormSubmit = (event, onSubmit = () => {}) => {\r\n    event.preventDefault();\r\n\r\n    onSubmit(values);\r\n  };\r\n  const Form = props => {\r\n    return (\r\n      <form\r\n        onSubmit={event => {\r\n          FormSubmit(event, props.onSubmit);\r\n        }}\r\n        style={props.style || null}\r\n        className={props.className || null}\r\n      >\r\n        {props.children}\r\n      </form>\r\n    );\r\n  };\r\n  const formProps = {\r\n    onChange: function(name, value) {\r\n      if (name !== undefined) {\r\n        values[name] = value;\r\n      }\r\n    }\r\n  };\r\n  return {\r\n    Form,\r\n    formProps\r\n  };\r\n}\r\n\r\nexport class Input extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n    value: this.props.value || \"\"\r\n  };\r\n  change = event => {\r\n    this.setState({\r\n      name: this.props.name,\r\n      value: event.target.value\r\n    });\r\n    this.props.onChange(this.props.name, event.target.value);\r\n  };\r\n  componentDidMount() {\r\n    this.props.onChange(this.state.name, this.state.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <input\r\n        type={this.props.type || \"text\"}\r\n        name={this.props.name}\r\n        onChange={this.change}\r\n        value={this.state.value}\r\n        className={this.props.className || null}\r\n        style={this.props.style || null}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Former;\r\n","class storage {\r\n  constructor(focus) {\r\n    switch (focus) {\r\n      case \"table\":\r\n      default:\r\n        this.list = \"tables-list\";\r\n        this.data_prefix = \"td-\";\r\n        break;\r\n      case \"batch\":\r\n        this.list = \"batches-list\";\r\n        this.data_prefix = \"bt-\";\r\n        break;\r\n      case \"lecture\":\r\n        this.list = \"lectures-list\";\r\n        this.data_prefix = \"lt-\";\r\n        break;\r\n    }\r\n  }\r\n  getList() {\r\n    let list = sessionStorage.getItem(this.list) || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  getData(id) {\r\n    let data = sessionStorage.getItem(this.data_prefix + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  saveList(list = []) {\r\n    sessionStorage.setItem(this.list, JSON.stringify(list));\r\n  }\r\n  saveData(id, data = {}) {\r\n    sessionStorage.setItem(this.data_prefix + id, JSON.stringify(data));\r\n  }\r\n  deleteData(id) {\r\n    sessionStorage.removeItem(this.data_prefix + id);\r\n  }\r\n  create(name, id) {\r\n    let list = this.getList();\r\n    let creation = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      list: []\r\n    };\r\n    list.push(creation);\r\n    this.saveList(list);\r\n    this.saveData(id, data);\r\n  }\r\n  rename(newname, id) {\r\n    let list = this.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    this.saveList(newlist);\r\n  }\r\n  delete(id) {\r\n    let list = this.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    this.saveList(newlist);\r\n    this.deleteData(id);\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../storage\";\r\nimport {\r\n  CREATE_TABLE,\r\n  SELECT_TABLE,\r\n  RENAME_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BATCH,\r\n  RENAME_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_LECTURE,\r\n  RENAME_LECTURE,\r\n  DELETE_LECTURE\r\n} from \"./types\";\r\n\r\nlet table = new storage(\"table\");\r\nlet batch = new storage(\"batch\");\r\nlet lecture = new storage(\"lecture\");\r\n\r\nexport const createTableByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(0, 5);\r\n  table.create(name, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: CREATE_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const selectTableById = id => {\r\n  let tableData = table.getData(id);\r\n  return {\r\n    type: SELECT_TABLE,\r\n    table: tableData\r\n  };\r\n};\r\nexport const renameTableById = (newname, id) => {\r\n  table.rename(newname, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: RENAME_TABLE,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteTableById = id => {\r\n  table.delete(id);\r\n  let list = table.getList();\r\n  return {\r\n    type: DELETE_TABLE,\r\n    deleted: id,\r\n    list\r\n  };\r\n};\r\n\r\nexport const createBatchByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(3, 8);\r\n  batch.create(name, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: CREATE_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const renameBatchById = (newname, id) => {\r\n  batch.rename(newname, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: RENAME_BATCH,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteBatchById = id => {\r\n  batch.delete(id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: DELETE_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const createLectureByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(4, 9);\r\n  lecture.create(name, id);\r\n  let list = lecture.getList();\r\n  console.log(list);\r\n  return {\r\n    type: CREATE_LECTURE,\r\n    list\r\n  };\r\n};\r\nexport const renameLectureById = (newname, id) => {\r\n  lecture.rename(newname, id);\r\n  let list = lecture.getList();\r\n  return {\r\n    type: RENAME_LECTURE,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteLectureById = id => {\r\n  lecture.delete(id);\r\n  let list = lecture.getList();\r\n  return {\r\n    type: DELETE_LECTURE,\r\n    list\r\n  };\r\n};\r\n","export const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const SELECT_TABLE = \"SELECT_TABLE\";\r\nexport const RENAME_TABLE = \"RENAME_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const RENAME_BATCH = \"RENAME_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_LECTURE = \"CREATE_LECTURE\";\r\nexport const RENAME_LECTURE = \"RENAME_LECTURE\";\r\nexport const DELETE_LECTURE = \"DELETE_LECTURE\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTableByName } from \"../../actions\";\r\n\r\nclass CreateTable extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createTableByName(values[\"name\"]);\r\n    this.props.cancel();\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit} className=\"row-block\">\r\n        <label htmlFor=\"name\" className=\"item\">\r\n          Table\r\n        </label>\r\n        <Input name=\"name\" className=\"item\" {...formProps} />\r\n        <Input\r\n          name=\"submit\"\r\n          className=\"item\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          {...formProps}\r\n        />\r\n        <button onClick={this.props.cancel} className=\"item\">\r\n          Cancel\r\n        </button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createTableByName\r\n  }\r\n)(CreateTable);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameTableById } from \"../../actions\";\r\n\r\nclass RenameTable extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameTableById(values.newname, this.props.id);\r\n    this.props.cancel();\r\n  };\r\n  render() {\r\n    let session = new storage(\"table\");\r\n    let table = session.getList().filter(item => item.id === this.props.id)[0];\r\n    if (table === undefined) {\r\n      return null;\r\n    }\r\n    const { Form, formProps } = Former(\"rename\");\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit} className=\"row-block\">\r\n          <label htmlFor=\"newname\" className=\"item\">\r\n            New Name\r\n          </label>\r\n          <Input\r\n            name=\"newname\"\r\n            className=\"item\"\r\n            value={table.name}\r\n            {...formProps}\r\n          />\r\n          <Input type=\"submit\" className=\"item\" value=\"Rename\" {...formProps} />\r\n          <button onClick={this.props.cancel} className=\"item\">\r\n            Cancel\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameTableById\r\n  }\r\n)(RenameTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Create from \"./Create\";\r\nimport Rename from \"./Rename\";\r\n\r\nimport {\r\n  selectTableById,\r\n  renameTableById,\r\n  deleteTableById\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    showForm: false,\r\n    renameId: null,\r\n    showRenameForm: false\r\n  };\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      let additional = \"\";\r\n      let SelectBtn = () => {\r\n        return null;\r\n      };\r\n      if (this.props.selected !== null && this.props.selected.id === item.id) {\r\n        additional = \"selected-table\";\r\n      } else {\r\n        SelectBtn = () => {\r\n          return (\r\n            <button onClick={() => this.props.selectTableById(item.id)}>\r\n              Select\r\n            </button>\r\n          );\r\n        };\r\n      }\r\n      return (\r\n        <div key={item.id} className={`table-card card-box ${additional}`}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <SelectBtn />\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteTableById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ renameId: item.id, showRenameForm: true });\r\n              }}\r\n            >\r\n              Rename\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    const CreateDialogue = () => {\r\n      if (this.state.showForm) {\r\n        return (\r\n          <Create\r\n            cancel={() => {\r\n              this.setState({ showForm: false });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ul className=\"buttons-list\">\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ showForm: true });\r\n                }}\r\n              >\r\n                Create A Table\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        );\r\n      }\r\n    };\r\n\r\n    const RenameDialogue = () => {\r\n      if (this.state.renameId != null && this.state.showRenameForm) {\r\n        return (\r\n          <Rename\r\n            id={this.state.renameId}\r\n            cancel={() => {\r\n              this.setState({ showRenameForm: false, renameId: null });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <CreateDialogue />\r\n        <RenameDialogue />\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TableList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectTableById,\r\n    renameTableById,\r\n    deleteTableById\r\n  }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createBatchByName } from \"../../actions\";\r\n\r\nclass CreateBatch extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createBatchByName(values[\"name\"]);\r\n    this.props.cancel();\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit} className=\"row-block\">\r\n        <label htmlFor=\"name\" className=\"item\">\r\n          Batch\r\n        </label>\r\n        <Input name=\"name\" className=\"item\" {...formProps} />\r\n        <Input\r\n          name=\"submit\"\r\n          className=\"item\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          {...formProps}\r\n        />\r\n        <button onClick={this.props.cancel} className=\"item\">\r\n          Cancel\r\n        </button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBatchByName\r\n  }\r\n)(CreateBatch);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameBatchById } from \"../../actions\";\r\n\r\nclass RenameBatch extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameBatchById(values.newname, this.props.id);\r\n    this.props.cancel();\r\n  };\r\n  render() {\r\n    let session = new storage(\"batch\");\r\n    let Batch = session.getList().filter(item => item.id === this.props.id)[0];\r\n    if (Batch === undefined) {\r\n      return null;\r\n    }\r\n    const { Form, formProps } = Former(\"rename\");\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit} className=\"row-block\">\r\n          <label htmlFor=\"newname\" className=\"item\">\r\n            New Name\r\n          </label>\r\n          <Input\r\n            name=\"newname\"\r\n            className=\"item\"\r\n            value={Batch.name}\r\n            {...formProps}\r\n          />\r\n          <Input type=\"submit\" className=\"item\" value=\"Rename\" {...formProps} />\r\n          <button onClick={this.props.cancel} className=\"item\">\r\n            Cancel\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameBatchById\r\n  }\r\n)(RenameBatch);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Create from \"./Create\";\r\nimport Rename from \"./Rename\";\r\n\r\nimport { renameBatchById, deleteBatchById } from \"../../actions\";\r\n\r\nclass Batchs extends Component {\r\n  state = {\r\n    showForm: false,\r\n    renameId: null,\r\n    showRenameForm: false\r\n  };\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      return (\r\n        <div key={item.id} className={`Batch-card card-box`}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteBatchById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ renameId: item.id, showRenameForm: true });\r\n              }}\r\n            >\r\n              Rename\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    const CreateDialogue = () => {\r\n      if (this.state.showForm) {\r\n        return (\r\n          <Create\r\n            cancel={() => {\r\n              this.setState({ showForm: false });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ul className=\"buttons-list\">\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ showForm: true });\r\n                }}\r\n              >\r\n                Create A Batch\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        );\r\n      }\r\n    };\r\n\r\n    const RenameDialogue = () => {\r\n      if (this.state.renameId != null && this.state.showRenameForm) {\r\n        return (\r\n          <Rename\r\n            id={this.state.renameId}\r\n            cancel={() => {\r\n              this.setState({ showRenameForm: false, renameId: null });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Batchs</h1>\r\n        <CreateDialogue />\r\n        <RenameDialogue />\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.BatchList,\r\n    selected: state.SelectedBatch\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    renameBatchById,\r\n    deleteBatchById\r\n  }\r\n)(Batchs);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createLectureByName } from \"../../actions\";\r\n\r\nclass CreateLecture extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createLectureByName(values[\"name\"]);\r\n    this.props.cancel();\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit} className=\"row-block\">\r\n        <label htmlFor=\"name\" className=\"item\">\r\n          Lecture\r\n        </label>\r\n        <Input name=\"name\" className=\"item\" {...formProps} />\r\n        <Input\r\n          name=\"submit\"\r\n          className=\"item\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          {...formProps}\r\n        />\r\n        <button onClick={this.props.cancel} className=\"item\">\r\n          Cancel\r\n        </button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createLectureByName\r\n  }\r\n)(CreateLecture);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameLectureById } from \"../../actions\";\r\n\r\nclass RenameLecture extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameLectureById(values.newname, this.props.id);\r\n    this.props.cancel();\r\n  };\r\n  render() {\r\n    let session = new storage(\"lecture\");\r\n    let Lecture = session\r\n      .getList()\r\n      .filter(item => item.id === this.props.id)[0];\r\n    if (Lecture === undefined) {\r\n      return null;\r\n    }\r\n    const { Form, formProps } = Former(\"rename\");\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit} className=\"row-block\">\r\n          <label htmlFor=\"newname\" className=\"item\">\r\n            New Name\r\n          </label>\r\n          <Input\r\n            name=\"newname\"\r\n            className=\"item\"\r\n            value={Lecture.name}\r\n            {...formProps}\r\n          />\r\n          <Input type=\"submit\" className=\"item\" value=\"Rename\" {...formProps} />\r\n          <button onClick={this.props.cancel} className=\"item\">\r\n            Cancel\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameLectureById\r\n  }\r\n)(RenameLecture);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Create from \"./Create\";\r\nimport Rename from \"./Rename\";\r\n\r\nimport { renameLectureById, deleteLectureById } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    showForm: false,\r\n    renameId: null,\r\n    showRenameForm: false\r\n  };\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      return (\r\n        <div key={item.id} className={`lecture-card card-box`}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLectureById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ renameId: item.id, showRenameForm: true });\r\n              }}\r\n            >\r\n              Rename\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    const CreateDialogue = () => {\r\n      if (this.state.showForm) {\r\n        return (\r\n          <Create\r\n            cancel={() => {\r\n              this.setState({ showForm: false });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ul className=\"buttons-list\">\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ showForm: true });\r\n                }}\r\n              >\r\n                Create A Lecture\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        );\r\n      }\r\n    };\r\n\r\n    const RenameDialogue = () => {\r\n      if (this.state.renameId != null && this.state.showRenameForm) {\r\n        return (\r\n          <Rename\r\n            id={this.state.renameId}\r\n            cancel={() => {\r\n              this.setState({ showRenameForm: false, renameId: null });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <CreateDialogue />\r\n        <RenameDialogue />\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.LectureList,\r\n    selected: state.SelectedLecture\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    renameLectureById,\r\n    deleteLectureById\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Tables from \"./tables\";\r\n//Batches Import\r\nimport Batches from \"./batches\";\r\n//Lectures Import\r\nimport Lectures from \"./lectures\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n\r\n            <Route path=\"/tables\" exact component={Tables} />\r\n\r\n            <Route path=\"/batches\" exact component={Batches} />\r\n\r\n            <Route path=\"/lectures\" exact component={Lectures} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { CREATE_TABLE, RENAME_TABLE, DELETE_TABLE } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"table\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_TABLE:\r\n    case RENAME_TABLE:\r\n    case DELETE_TABLE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CREATE_BATCH, RENAME_BATCH, DELETE_BATCH } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"batch\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_BATCH:\r\n    case RENAME_BATCH:\r\n    case DELETE_BATCH:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_LECTURE,\r\n  RENAME_LECTURE,\r\n  DELETE_LECTURE\r\n} from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"lecture\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_LECTURE:\r\n    case RENAME_LECTURE:\r\n    case DELETE_LECTURE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport SelectedTable from \"./SelectedTable\";\r\nimport TableList from \"./TableList\";\r\nimport BatchList from \"./BatchList\";\r\nimport LectureList from \"./LectureList\";\r\n\r\nexport default combineReducers({\r\n  SelectedTable,\r\n  TableList,\r\n  BatchList,\r\n  LectureList\r\n});\r\n","import { SELECT_TABLE, DELETE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let selected_table = action.table || null;\r\n      return selected_table;\r\n    case DELETE_TABLE:\r\n      if (state !== null && action.deleted === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}