{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","components/modals/ColorsPanel.js","components/modals/LectureModal.js","actions/downloader.js","components/modals/Exporter.js","components/modals/TableActions.js","components/display/Screen.js","components/display/others/Tables.js","components/display/others/Lectures.js","components/display/others/Batches.js","components/display/others/Days.js","components/display/others/Times.js","components/display/others/Places.js","components/display/others/Subjects.js","components/display/others/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","COLORS","TABLE_HEADER_COLOR","TABLE_FOOTER_COLOR","DEFAULT_LECTURE","id","day","time","place","subject","teacher","batch","color","display","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","ex","lectFind","filter","l","value","message","secLectFind","batchValidator","batches","batchFind","b","name","dayValidator","days","dayFind","d","timeValidator","times","timeFind","t","placeValidator","places","placeFind","p","subjectValidator","subjects","subjectFind","s","teacherValidator","teachers","teacherFind","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","collections","getDataItem","key","delDataItem","delData","values","forEach","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","unshowModal","createCollection","background","init","collection","set","selectCollection","getDataKey","deselectCollection","createTable","table","updateTable","tableID","deleteTable","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","updateDay","dayID","swapDay","withID","current","future","i","newDays","setDataKey","deleteDay","createTime","updateTime","timeID","swapTime","newTimes","deleteTime","createPlace","updatePlace","placeID","swapPlace","newPlaces","deletePlace","createBatch","updateBatch","batchID","swapBatch","newBatches","deleteBatch","createSubject","updateSubject","subjectID","swapSubject","newSubjects","deleteSubject","createTeacher","updateTeacher","teacherID","swapTeacher","newTeachers","deleteTeacher","DefaultSetupSettings","info","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","toLocaleDateString","toUpperCase","baseValue","header","text","footer","sidebar","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","ColorsPanel","addClass","change","LectureModal","params","toEdit","edit","mode","list","defaultValue","margin","modals_ColorsPanel","multiple","selectedOptions","_ref","selected","_ref2","size","creator","marginTop","validation","Lectures","Days","Times","Places","Batches","Subjects","Teachers","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","internal","pageSize","getWidth","getHeight","catch","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","Exporter","tableMode","downloader","TableActions","objector","_this2$state$creator","val1Table","val1Key","val2Table","val2Key","baseName","thing","fontStyle","rowtext","func","flexDirection","create","copy","addrowcol","Tables","Screen","refs","modals_TableActions","modals_Exporter","minWidth","ref","colSpan","col","row","block","modals_LectureModal","loot","th","User","DefaultCreator","action","DefaultQuicker","quicker","_this2$state$creator2","marginRight","fontWeight","listshow","showitem","itemlist","lectCard","st","bh","tr","tm","pc","dy","marginLeft","paddingBottom","dayObj","timeObj","placeObj","Display","changeDisplay","display_Screen","actor","others_Tables","others_Lectures","others_Batches","others_Days","others_Times","others_Places","others_Subjects","others_Teachers","btn","Modal","modal","button","waiting","confirm","implement","System","App","onerror","position","components_Welcome","components_Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2e3d4385.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const COLORS = [\r\n  \"transparent\",\r\n  \"#ff5e52\",\r\n  \"#fff60c\",\r\n  \"#a7e034\",\r\n  \"#e0dfc7\",\r\n  \"#6777eb\"\r\n];\r\n\r\nexport const LECTURE_COLOR = \"transparent\";\r\nexport const DAY_COLOR = \"transparent\";\r\nexport const TIME_COLOR = \"transparent\";\r\nexport const PLACE_COLOR = \"transparent\";\r\nexport const BATCH_COLOR = \"transparent\";\r\nexport const SUBJECT_COLOR = \"transparent\";\r\nexport const TEACHER_COLOR = \"transparent\";\r\nexport const TABLE_HEADER_COLOR = \"transparent\";\r\nexport const TABLE_FOOTER_COLOR = \"transparent\";\r\nexport const TABLE_SIDEBAR_COLOR = \"transparent\";\r\n\r\nexport const DEFAULT_LECTURE = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: [\"batch\", \"subject\", \"teacher\"]\r\n};\r\n\r\nexport const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"lecture\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect, ex = { id: \"exception\" }) => {\r\n  let lectFind = lectures.filter(\r\n    l =>\r\n      l.time === lect.time &&\r\n      l.day === lect.day &&\r\n      l.place === lect.place &&\r\n      l.id !== lect.id\r\n  );\r\n  if (lectFind.length > 0 && lectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n      return {\r\n        value: false,\r\n        message:\r\n          \"This batch/class is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      let secLectFind = lectures.filter(\r\n        l =>\r\n          l.teacher === lect.teacher &&\r\n          l.time === lect.time &&\r\n          l.day === lect.day &&\r\n          l.id !== lect.id\r\n      );\r\n      if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n        return {\r\n          value: false,\r\n          message:\r\n            \"One teacher cannot teach two batches/classes at the same time.\"\r\n        };\r\n      } else {\r\n        return {\r\n          value: true,\r\n          message: \"\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const batchValidator = (batches, batch, ex = { id: \"exception\" }) => {\r\n  let batchFind = batches.filter(\r\n    b => b.name === batch.name && b.id !== batch.id\r\n  );\r\n  if (batchFind.length > 0 && batchFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A batch with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const dayValidator = (days, day, ex = { id: \"exception\" }) => {\r\n  let dayFind = days.filter(d => d.name === day.name && d.id !== day.id);\r\n  if (dayFind.length > 0 && dayFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A day with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const timeValidator = (times, time, ex = { id: \"exception\" }) => {\r\n  let timeFind = times.filter(t => t.name === time.name && t.id !== time.id);\r\n  if (timeFind.length > 0 && timeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A time with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const placeValidator = (places, place, ex = { id: \"exception\" }) => {\r\n  let placeFind = places.filter(\r\n    p => p.name === place.name && p.id !== place.id\r\n  );\r\n  if (placeFind.length > 0 && placeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A place with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const subjectValidator = (\r\n  subjects,\r\n  subject,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let subjectFind = subjects.filter(\r\n    s => s.name === subject.name && s.id !== subject.id\r\n  );\r\n  if (subjectFind.length > 0 && subjectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A subject with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const teacherValidator = (\r\n  teachers,\r\n  teacher,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let teacherFind = teachers.filter(\r\n    t => t.name === teacher.name && t.id !== teacher.id\r\n  );\r\n  if (teacherFind.length > 0 && teacherFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A teacher with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols,\r\n        header: { text: \"Quick Table\", color: \"transparent\" },\r\n        footer: { text: \"Quick Table\", color: \"transparent\" },\r\n        sidebar: { text: \"Acadtable\", color: \"transparent\" }\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Start by creating a collection or loading an example.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { COLORS } from \"../../actions/helpers\";\r\n\r\nclass ColorsPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div style={this.props.style == null ? {} : this.props.style}>\r\n        {COLORS.map(color => {\r\n          let addClass = color === this.props.color ? \"selected\" : \"\";\r\n          return (\r\n            <span\r\n              className={\"color-btn \" + addClass}\r\n              style={{ background: color }}\r\n              key={\"color\" + color}\r\n              onClick={() => {\r\n                this.props.change(color);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorsPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  dayValidator,\r\n  timeValidator,\r\n  batchValidator,\r\n  placeValidator,\r\n  teacherValidator,\r\n  subjectValidator,\r\n  DAY_COLOR,\r\n  TIME_COLOR,\r\n  PLACE_COLOR,\r\n  BATCH_COLOR,\r\n  SUBJECT_COLOR,\r\n  TEACHER_COLOR,\r\n  DEFAULT_LECTURE\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"./ColorsPanel\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      ...DEFAULT_LECTURE,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              info.color = this.state.params.color;\r\n              info.display =\r\n                this.state.params.display !== undefined\r\n                  ? this.state.params.display\r\n                  : info.display;\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info, {\r\n                  id: this.state.params.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.props.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {toEdit.map(key => {\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{\r\n                        textTransform: \"capitalize\"\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {key} &nbsp;{\" \"}\r\n                    </label>{\" \"}\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {\" \"}\r\n                            {item.name}{\" \"}\r\n                          </option>\r\n                        );\r\n                      })}{\" \"}\r\n                    </select>{\" \"}\r\n                    <button\r\n                      style={{\r\n                        margin: \"0 0.5em\"\r\n                      }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          display: key\r\n                        });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>{\" \"}\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}{\" \"}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\"> Color </label>{\" \"}\r\n              <ColorsPanel\r\n                color={this.state.params.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    params: {\r\n                      ...this.state.params,\r\n                      color\r\n                    }\r\n                  });\r\n                }}\r\n              />{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\"> Display </label>{\" \"}\r\n              <select\r\n                name=\"\"\r\n                id=\"\"\r\n                multiple\r\n                value={info.display}\r\n                onChange={ex => {\r\n                  this.setState({\r\n                    params: {\r\n                      ...this.state.params,\r\n                      display: [...ex.target.selectedOptions]\r\n                        .filter(({ selected }) => selected)\r\n                        .map(({ value }) => value)\r\n                    }\r\n                  });\r\n                }}\r\n                size=\"6\"\r\n              >\r\n                <option value=\"batch\"> Batch </option>{\" \"}\r\n                <option value=\"teacher\"> Teacher </option>{\" \"}\r\n                <option value=\"subject\"> Subject </option>{\" \"}\r\n                <option value=\"place\"> Place </option>{\" \"}\r\n                <option value=\"day\"> Day </option>{\" \"}\r\n                <option value=\"time\"> Time </option>{\" \"}\r\n              </select>\r\n              <span\r\n                className=\"info\"\r\n                style={{\r\n                  display: \"inline\"\r\n                }}\r\n              >\r\n                <span>\r\n                  These things will be displayed in the table in the order of\r\n                  selection, Hold control to select multiple options{\" \"}\r\n                </span>{\" \"}\r\n              </span>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}> Cancel </button>{\" \"}\r\n              </span>{\" \"}\r\n              &nbsp;{\" \"}\r\n              <input\r\n                type=\"submit\"\r\n                style={{\r\n                  textTransform: \"capitalize\"\r\n                }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />{\" \"}\r\n            </div>{\" \"}\r\n          </form>{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator, validator;\r\n      let color = \"transparent\";\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          color = DAY_COLOR;\r\n          validator = data => {\r\n            return dayValidator(this.props.days, data);\r\n          };\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          color = TIME_COLOR;\r\n          validator = data => {\r\n            return timeValidator(this.props.times, data);\r\n          };\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          color = PLACE_COLOR;\r\n          validator = data => {\r\n            return placeValidator(this.props.places, data);\r\n          };\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          color = SUBJECT_COLOR;\r\n          validator = data => {\r\n            return subjectValidator(this.props.subjects, data);\r\n          };\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          color = BATCH_COLOR;\r\n          validator = data => {\r\n            return batchValidator(this.props.batches, data);\r\n          };\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          color = TEACHER_COLOR;\r\n          validator = data => {\r\n            return teacherValidator(this.props.teachers, data);\r\n          };\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"main\"\r\n              });\r\n            }}\r\n          >\r\n            Back{\" \"}\r\n          </button>{\" \"}\r\n          <div\r\n            style={{\r\n              marginTop: \"1em\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  let data = {\r\n                    name,\r\n                    color\r\n                  };\r\n                  let validation = validator(data);\r\n                  if (validation.value) {\r\n                    creator(data);\r\n                  } else {\r\n                    this.props.showModal(\"message\", validation.message);\r\n                  }\r\n                  this.setState({\r\n                    display: \"main\"\r\n                  });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label\r\n                    htmlFor=\"\"\r\n                    style={{\r\n                      textTransform: \"capitalize\"\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {this.state.display} &nbsp;{\" \"}\r\n                  </label>{\" \"}\r\n                  <input type=\"text\" />\r\n                </div>{\" \"}\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>{\" \"}\r\n              </form>\r\n            ) : null}{\" \"}\r\n          </div>{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth + tableWidth / 2,\r\n          height: tableHeight + tableHeight / 2\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth + 30, tableHeight + 40], \"landscape\");\r\n          }\r\n          doc.addImage(\r\n            dataUrl,\r\n            \"PNG\",\r\n            30,\r\n            40,\r\n            doc.internal.pageSize.getWidth() - 60,\r\n            doc.internal.pageSize.getHeight() - 80\r\n          );\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, {\r\n      bgcolor: \"#fff\",\r\n      width: screen.offsetWidth + 60,\r\n      height: screen.offsetHeight + 80\r\n    })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, {\r\n      bgcolor: \"#fff\",\r\n      width: screen.offsetWidth + 60,\r\n      height: screen.offsetHeight + 80\r\n    })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nclass Exporter extends Component {\r\n  render() {\r\n    let screen = this.props.screen;\r\n    return (\r\n      <div>\r\n        <h1>Export As</h1>\r\n        <label htmlFor=\"\">Document Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"pdfrender render\",\r\n              downloader: downloadPDF,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PDF\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"\">Image Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadPNG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PNG\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadJPEG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          JPEG\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            screen.props.unshowModal();\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Exporter;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createLecture,\r\n  deleteLecture,\r\n  unshowModal,\r\n  createTable,\r\n  deleteTable,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions\";\r\n\r\nimport ColorsPanel from \"./ColorsPanel\";\r\n\r\nimport {\r\n  listKey,\r\n  TABLE_HEADER_COLOR,\r\n  TABLE_FOOTER_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nclass TableActions extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\",\r\n      header: { text: \"\", color: TABLE_HEADER_COLOR },\r\n      footer: { text: \"\", color: TABLE_FOOTER_COLOR }\r\n    }\r\n  };\r\n  create() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n\r\n              let {\r\n                base,\r\n                baseValue,\r\n                rows,\r\n                cols,\r\n                header,\r\n                footer\r\n              } = this.state.creator;\r\n              this.props.createTable({\r\n                base,\r\n                baseValue,\r\n                rows,\r\n                cols,\r\n                header,\r\n                footer\r\n              });\r\n\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.header.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: {\r\n                        ...this.state.creator.header,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.header.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: { ...this.state.creator.header, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.footer.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: {\r\n                        ...this.state.creator.footer,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.footer.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: { ...this.state.creator.footer, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row submit-row\">\r\n              <div>\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value=\"Create Table\"\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  copy() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <form\r\n          className=\"form-table\"\r\n          onSubmit={ex => {\r\n            ex.preventDefault();\r\n            let from = ex.target[0].value;\r\n            let to = ex.target[1].value;\r\n            if (from !== to) {\r\n              let val1Table = this.props.tables.filter(\r\n                table => table.id === to\r\n              )[0];\r\n              let val1Key = listKey(val1Table.base);\r\n              let lectsDels = this.props.lectures.filter(\r\n                lecture => lecture[val1Key] === val1Table.baseValue\r\n              );\r\n              lectsDels.forEach(l => this.props.deleteLecture(l.id));\r\n\r\n              let val2Table = this.props.tables.filter(\r\n                table => table.id === from\r\n              )[0];\r\n              let val2Key = listKey(val2Table.base);\r\n              let lectsCret = this.props.lectures.filter(\r\n                lecture => lecture[val2Key] === val2Table.baseValue\r\n              );\r\n              lectsCret.forEach(l => {\r\n                let lecture = { ...l };\r\n                lecture[val2Key] = val1Table.baseValue;\r\n                this.props.createLecture(lecture);\r\n              });\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"fromtable\">From </label>&nbsp;\r\n            <select\r\n              name=\"from\"\r\n              id=\"fromtable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"totable\">To </label>&nbsp;\r\n            <select\r\n              name=\"to\"\r\n              id=\"totable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row submit-row\">\r\n            <span />\r\n            <input type=\"submit\" value=\"Copy Table\" />\r\n          </div>\r\n        </form>\r\n        <span style={{ color: \"rgba(222,55,33,.8)\", fontStyle: \"italic\" }}>\r\n          The other table will be overwritten\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  delete() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <form\r\n          className=\"form-table\"\r\n          onSubmit={ex => {\r\n            ex.preventDefault();\r\n            this.props.deleteTable(ex.target[0].value);\r\n            this.props.unshowModal();\r\n          }}\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"fromtable\">Select Table </label>&nbsp;\r\n            <select\r\n              name=\"tableid\"\r\n              id=\"fromtable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row submit-row\">\r\n            <span />\r\n            <input type=\"submit\" value=\"Delete\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  addrowcol(thing) {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <form\r\n          className=\"form-table\"\r\n          onSubmit={ex => {\r\n            ex.preventDefault();\r\n            let rows = ex.target[0].value;\r\n            let rowtext = ex.target[1].value;\r\n            let key = listKey(rows);\r\n            key = key[0].toUpperCase() + key.substr(1, key.length);\r\n            let func = this.props[\"create\" + key];\r\n            func({ name: rowtext });\r\n            this.props.unshowModal();\r\n          }}\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"fromtable\">Select Table </label>&nbsp;\r\n            <select\r\n              name=\"tableid\"\r\n              id=\"fromtable\"\r\n              defaultValue={this.props.tables[0]}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table[thing]} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rowtext\">\r\n              {thing === \"rows\" ? \"Row\" : \"Column\"} Text\r\n            </label>\r\n            <input type=\"text\" id=\"rowtext\" name=\"rowtext\" />\r\n          </div>\r\n          <div className=\"form-row submit-row\">\r\n            <span />\r\n            <input\r\n              type=\"submit\"\r\n              value={thing === \"rows\" ? \"Add Row\" : \"Add Column\"}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div>\r\n          <h1>What to do ?</h1>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"create\" });\r\n              }}\r\n            >\r\n              Create A Table\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"copy\" });\r\n              }}\r\n            >\r\n              Copy A Table\r\n            </button>\r\n            <br />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"delete\" });\r\n              }}\r\n            >\r\n              Delete A Table\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"addrow\" });\r\n              }}\r\n            >\r\n              Add Another Row\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"addcol\" });\r\n              }}\r\n            >\r\n              Add Another Column\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.props.unshowModal();\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      switch (this.state.display) {\r\n        case \"create\":\r\n        default:\r\n          return this.create();\r\n        case \"copy\":\r\n          return this.copy();\r\n        case \"delete\":\r\n          return this.delete();\r\n        case \"addrow\":\r\n          return this.addrowcol(\"rows\");\r\n        case \"addcol\":\r\n          return this.addrowcol(\"cols\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    deleteLecture,\r\n    unshowModal,\r\n    createTable,\r\n    deleteTable,\r\n    createPlace,\r\n    createBatch,\r\n    createDay,\r\n    createSubject,\r\n    createTeacher,\r\n    createTime\r\n  }\r\n)(TableActions);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  updateTable,\r\n  updateLecture,\r\n  deleteLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapPlace,\r\n  swapTeacher,\r\n  swapSubject,\r\n  swapTime,\r\n  updateBatch,\r\n  updateDay,\r\n  updatePlace,\r\n  updateSubject,\r\n  updateTeacher,\r\n  updateTime,\r\n  deleteBatch,\r\n  deleteDay,\r\n  deletePlace,\r\n  deleteSubject,\r\n  deleteTeacher,\r\n  deleteTime\r\n} from \"../../actions\";\r\n\r\nimport { listKey, keyList } from \"../../actions/helpers\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../modals/LectureModal\";\r\n\r\nimport Exporter from \"../modals/Exporter\";\r\nimport TableActions from \"../modals/TableActions\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    //ALL IMPLEMENTATION\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\"content\", <TableActions screen={this} />);\r\n            }}\r\n          >\r\n            Table Actions\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\"content\", <Exporter screen={this} />);\r\n            }}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr\r\n                      className=\"table-header\"\r\n                      style={{ background: table.header.color }}\r\n                    >\r\n                      <td colSpan={cols.length + 1}>\r\n                        <span>{table.header.text}</span>\r\n                      </td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th className=\"main-block\">\r\n                        {base != null ? (\r\n                          <div>\r\n                            <span>{base.name}</span>\r\n                          </div>\r\n                        ) : null}\r\n                      </th>\r\n\r\n                      {/* COLOUMNS HEADINGS */}\r\n\r\n                      {cols.map(col => {\r\n                        return (\r\n                          <th key={\"c\" + col.id} className=\"col-block\">\r\n                            <div>\r\n                              <span>{col.name}</span>\r\n                            </div>\r\n                          </th>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n\r\n                    {/* ROWS MAPPING */}\r\n\r\n                    {rows.map(row => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <th className=\"row-block\">\r\n                            <div>\r\n                              <span>{row.name}</span>\r\n                            </div>\r\n                          </th>\r\n\r\n                          {/* COLOUMNS MAPPING */}\r\n\r\n                          {cols.map(col => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    let toEdit = [\r\n                                      \"day\",\r\n                                      \"time\",\r\n                                      \"place\",\r\n                                      \"batch\",\r\n                                      \"subject\",\r\n                                      \"teacher\"\r\n                                    ];\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={toEdit.filter(p => {\r\n                                          if (\r\n                                            Object.keys(params).indexOf(p) < 0\r\n                                          ) {\r\n                                            return p;\r\n                                          }\r\n                                          return null;\r\n                                        })}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"emp\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              return (\r\n                                <td key={\"b\" + col.id} className=\"table-block\">\r\n                                  {lecture.display.map(thing => {\r\n                                    let loot = this.props[\r\n                                      keyList(thing)\r\n                                    ].filter(th => th.id === lecture[thing])[0];\r\n                                    return (\r\n                                      <span\r\n                                        key={loot.name + lecture.id + \"thing\"}\r\n                                      >\r\n                                        {loot.name}\r\n                                      </span>\r\n                                    );\r\n                                  })}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    <tr\r\n                      className=\"table-footer\"\r\n                      style={{ background: table.footer.color }}\r\n                    >\r\n                      <td colSpan={cols.length + 1}>\r\n                        <span>{table.footer.text}</span>\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    updateTable,\r\n    updateLecture,\r\n    deleteLecture,\r\n    swapBatch,\r\n    swapDay,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTeacher,\r\n    swapTime,\r\n    updateBatch,\r\n    updateDay,\r\n    updatePlace,\r\n    updateSubject,\r\n    updateTeacher,\r\n    updateTime,\r\n    deleteBatch,\r\n    deleteDay,\r\n    deletePlace,\r\n    deleteSubject,\r\n    deleteTeacher,\r\n    deleteTime\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  listKey,\r\n  TABLE_HEADER_COLOR,\r\n  TABLE_FOOTER_COLOR,\r\n} from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  action: \"create\",\r\n  id: null,\r\n  base: \"days\",\r\n  baseValue: null,\r\n  rows: \"times\",\r\n  cols: \"places\",\r\n  header: { text: \"\", color: TABLE_HEADER_COLOR },\r\n  footer: { text: \"\", color: TABLE_FOOTER_COLOR }\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  base: \"days\",\r\n  rows: \"places\",\r\n  cols: \"times\",\r\n  header: \"\",\r\n  footer: \"\"\r\n};\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.createTable({\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let {\r\n                  id,\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.updateTable(id, {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.header.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: {\r\n                        ...this.state.creator.header,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.header.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: { ...this.state.creator.header, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.footer.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: {\r\n                        ...this.state.creator.footer,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.footer.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: { ...this.state.creator.footer, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.header}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, header: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.footer}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, footer: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols,\r\n                    header: {\r\n                      text: this.state.quicker.header,\r\n                      color: \"transparent\"\r\n                    },\r\n                    footer: {\r\n                      text: this.state.quicker.footer,\r\n                      color: \"transparent\"\r\n                    },\r\n                    sidebar: {\r\n                      text: this.state.quicker.sidebar,\r\n                      color: \"transparent\"\r\n                    }\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\"\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\"\r\n              });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  LECTURE_COLOR\r\n} from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: [\"batch\", \"subject\", \"teacher\"],\r\n  mode: \"create\"\r\n};\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color,\r\n                  display: this.state.creator.display\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color,\r\n                  display: this.state.creator.display\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture, {\r\n                  id: this.state.creator.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.creator.color}\r\n                change={color => {\r\n                  this.setState({ creator: { ...this.state.creator, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Display </label>\r\n              <select\r\n                name=\"\"\r\n                id=\"\"\r\n                multiple\r\n                value={this.state.creator.display}\r\n                onChange={ex => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      display: [...ex.target.selectedOptions]\r\n                        .filter(({ selected }) => selected)\r\n                        .map(({ value }) => value)\r\n                    }\r\n                  });\r\n                }}\r\n                size=\"6\"\r\n              >\r\n                <option value=\"batch\">Batch</option>\r\n                <option value=\"teacher\">Teacher</option>\r\n                <option value=\"subject\">Subject</option>\r\n                <option value=\"place\">Place</option>\r\n                <option value=\"day\">Day</option>\r\n                <option value=\"time\">Time</option>\r\n              </select>\r\n\r\n              <span className=\"info\" style={{ display: \"inline\" }}>\r\n                <span>\r\n                  These things will be displayed in the table,Hold control to\r\n                  select multiple options\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div\r\n          key={lecture.id}\r\n          className=\"block\"\r\n          style={{\r\n            background:\r\n              lecture.color !== \"transparent\"\r\n                ? lecture.color\r\n                : \"rgb(179,178,178)\"\r\n          }}\r\n        >\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  ...DefaultCreator,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <p style={{ color: \"rgb(90, 90, 90)\" }}>\r\n          &nbsp;&nbsp; * Any lecture containing an error won't be displayed on\r\n          screen\r\n        </p>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { BATCH_COLOR, batchValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: BATCH_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch, batch);\r\n              if (validator.value) {\r\n                this.props.createBatch(batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.updateBatch(this.state.creator.id, batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\"> Batch Name &nbsp; </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    name: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\"> Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    color\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{\r\n                textTransform: \"capitalize\"\r\n              }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Create Batch</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Batches List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.batches.map((batch, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <span>{batch.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapBatch(\r\n                                batch.id,\r\n                                this.props.batches[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.batches.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapBatch(\r\n                                batch.id,\r\n                                this.props.batches[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...batch,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteBatch(batch.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch,\r\n    showModal\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createDay,\r\n  updateDay,\r\n  swapDay,\r\n  deleteDay,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { DAY_COLOR, dayValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: DAY_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day, day);\r\n              if (validator.value) {\r\n                this.props.createDay(day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.updateDay(this.state.creator.id, day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color</label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Create Day</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                let dayObj = { name: day, color: DAY_COLOR };\r\n                let validator = dayValidator(this.props.days, dayObj);\r\n                if (validator.value) {\r\n                  this.props.createDay(dayObj);\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Days List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.days.map((day, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <span>{day.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapDay(\r\n                                day.id,\r\n                                this.props.days[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.days.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapDay(\r\n                                day.id,\r\n                                this.props.days[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...day,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteDay(day.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay,\r\n    showModal\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTime,\r\n  updateTime,\r\n  swapTime,\r\n  deleteTime,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { TIME_COLOR, timeValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TIME_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  fromTime: \"08\",\r\n  fromMeridian: \"AM\",\r\n  toTime: \"01\",\r\n  toMeridian: \"PM\",\r\n  lectureTime: \"60\",\r\n  color: TIME_COLOR\r\n};\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color</label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  let timeObj = { name: time, color: this.state.quicker.color };\r\n                  let validator = timeValidator(this.props.times, timeObj);\r\n                  if (validator.value) {\r\n                    this.props.createTime(timeObj);\r\n                  }\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.createTime(time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time, time);\r\n              if (validator.value) {\r\n                this.props.updateTime(this.state.creator.id, time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"colorbtn\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Create Time</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({\r\n              display: \"quick\",\r\n              creator: { id: null, name: null, mode: \"create\" }\r\n            });\r\n          }}\r\n        >\r\n          Quick Times\r\n        </button>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Times List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.times.map((time, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <span>{time.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTime(\r\n                                time.id,\r\n                                this.props.times[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.times.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTime(\r\n                                time.id,\r\n                                this.props.times[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...time,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteTime(time.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime,\r\n    showModal\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { PLACE_COLOR, placeValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: PLACE_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  name: \"Room\",\r\n  from: \"1\",\r\n  to: \"10\",\r\n  color: PLACE_COLOR\r\n};\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  let placeObj = {\r\n                    name: place,\r\n                    color: this.state.quicker.color\r\n                  };\r\n                  let validator = placeValidator(\r\n                    this.props.places,\r\n                    placeObj,\r\n                    placeObj\r\n                  );\r\n                  if (validator.value) {\r\n                    this.props.createPlace(placeObj);\r\n                  }\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.createPlace(place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.updatePlace(this.state.creator.id, place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <h1>Create Place</h1>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n\r\n          <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n          <div className=\"table-list\">\r\n            <h1>Places List</h1>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <td>Name</td>\r\n                  <td>Move</td>\r\n                  <td>Actions</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.places.map((place, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <span>{place.name}</span>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"btn-container\">\r\n                          {index === 0 ? null : (\r\n                            <button\r\n                              onClick={() => {\r\n                                this.props.swapPlace(\r\n                                  place.id,\r\n                                  this.props.places[index - 1].id\r\n                                );\r\n                              }}\r\n                            >\r\n                              Up\r\n                            </button>\r\n                          )}\r\n                          {index === this.props.places.length - 1 ? null : (\r\n                            <button\r\n                              onClick={() => {\r\n                                this.props.swapPlace(\r\n                                  place.id,\r\n                                  this.props.places[index + 1].id\r\n                                );\r\n                              }}\r\n                            >\r\n                              Down\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"btn-container\">\r\n                          <button\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                creator: {\r\n                                  ...this.state.creator,\r\n                                  ...place,\r\n                                  mode: \"update\"\r\n                                }\r\n                              });\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.deletePlace(place.id);\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace,\r\n    showModal\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { SUBJECT_COLOR, subjectValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: SUBJECT_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.createSubject(subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(\r\n                this.props.subjects,\r\n                subject,\r\n                subject\r\n              );\r\n              if (validator.value) {\r\n                this.props.updateSubject(this.state.creator.id, subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Create Subject</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Subjects List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.subjects.map((subject, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <span>{subject.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapSubject(\r\n                                subject.id,\r\n                                this.props.subjects[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.subjects.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapSubject(\r\n                                subject.id,\r\n                                this.props.subjects[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...subject,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteSubject(subject.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject,\r\n    showModal\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { TEACHER_COLOR, teacherValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TEACHER_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(\r\n                this.props.teachers,\r\n                teacher,\r\n                teacher\r\n              );\r\n              if (validator.value) {\r\n                this.props.createTeacher(teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(\r\n                this.props.teachers,\r\n                teacher,\r\n                teacher\r\n              );\r\n              if (validator.value) {\r\n                this.props.updateTeacher(this.state.creator.id, teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Create Teacher</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Teachers List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.teachers.map((teacher, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <span>{teacher.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTeacher(\r\n                                teacher.id,\r\n                                this.props.teachers[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.teachers.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTeacher(\r\n                                teacher.id,\r\n                                this.props.teachers[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...teacher,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteTeacher(teacher.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher,\r\n    showModal\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./others/Tables\";\r\nimport Lectures from \"./others/Lectures\";\r\nimport Batches from \"./others/Batches\";\r\nimport Days from \"./others/Days\";\r\nimport Times from \"./others/Times\";\r\nimport Places from \"./others/Places\";\r\nimport Subjects from \"./others/Subjects\";\r\nimport Teachers from \"./others/Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={\r\n                    this.state.display === btn ? \"selected elebtn\" : \"elebtn\"\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../resources/app.css\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deselectCollection } from \"../actions\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    window.onerror = function(e) {\r\n      this.props.deselectCollection();\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    deselectCollection\r\n  }\r\n)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.2.9;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}