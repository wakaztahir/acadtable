{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/Welcome.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/App.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","id","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","log","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","selectCollection","init","type","payload","getDataKey","createLecture","lecture","Welcome","state","ftDisplay","collectionName","collectionDesc","_this2","react_default","a","createElement","onClick","setState","onSubmit","preventDefault","props","createCollection","name","desc","className","htmlFor","onChange","target","value","placeholder","required","_this3","displayCreate","disabled","exampleCollection","_this4","map","coll","copyCollection","deleteCollection","firstTime","screen","Component","connect","Collections","collection","set","newid","get","Example","deleted","delete","Screen","objector","table","base","filter","i","baseValue","rows","cols","col","row","block","params","displayAddModal","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","display","creator","action","_this2$state$creator","createTable","_this2$state$creator2","updateTable","defaultValue","style","textTransform","objectSpread","item","marginRight","deleteTable","quicker","margin","baseName","fontWeight","tableID","mode","updateLecture","x","deleteLecture","lectureID","createBatch","updateBatch","batch","deleteBatch","batchID","createDay","updateDay","day","deleteDay","dayID","createTime","updateTime","time","deleteTime","timeID","createPlace","updatePlace","place","deletePlace","placeID","createSubject","updateSubject","subject","deleteSubject","subjectID","createTeacher","updateTeacher","teacher","deleteTeacher","teacherID","Display","display_Screen","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","ref","actor","User","App","components_Welcome","combineReducers","list","concat","toConsumableArray","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.f0d22778.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n      console.log(\"Data saved into localStorage.\");\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    id: \"example\",\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = data => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = data => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = data => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = data => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = data => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = data => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = data => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection\r\n} from \"../actions\";\r\n\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return objector.tables.map(table => {\r\n      let base = objector[table.base].filter(i => i.id === table.baseValue)[0];\r\n      let rows = objector[table.rows];\r\n      let cols = objector[table.cols];\r\n      return (\r\n        <div key={table.id}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>{base != null ? base.name : null}</td>\r\n                {cols.map(col => {\r\n                  return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map(row => {\r\n                return (\r\n                  <tr key={\"r\" + row.id}>\r\n                    <td>{row.name}</td>\r\n                    {cols.map(col => {\r\n                      let block = objector[\"lectures\"].filter(\r\n                        block =>\r\n                          block[listKey(table.base)] === base.id &&\r\n                          block[listKey(table.rows)] === row.id &&\r\n                          block[listKey(table.cols)] === col.id\r\n                      );\r\n                      if (block.length === 0) {\r\n                        // if (this.state.mode === \"print\") {\r\n                        //   return <td key={\"emp\" + col.id} />;\r\n                        // }\r\n                        return (\r\n                          <td\r\n                            onClick={() => {\r\n                              let params = {};\r\n                              params[listKey(table.base)] = base.id;\r\n                              params[listKey(table.rows)] = row.id;\r\n                              params[listKey(table.cols)] = col.id;\r\n                              this.props.displayAddModal(params);\r\n                            }}\r\n                            key={\"b\" + col.id}\r\n                          >\r\n                            <button>+</button>\r\n                          </td>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <td key={\"b\" + col.id} className=\"table-block\">\r\n                            {block[0].name}\r\n                          </td>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\n// downloadPDF() {\r\n//   let screen = this.refs.screen;\r\n//   let doc = new jsPDF({ orientation: \"landscape\" });\r\n//   doc.fromHTML(screen);\r\n//   doc.save(\"file.pdf\");\r\n// }\r\n// downloadPNG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toPng(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.href = dataUrl;\r\n//       link.download = \"file.png\";\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to PNG Image\");\r\n//     });\r\n// }\r\n// downloadJPEG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toJpeg(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.download = \"file.jpeg\";\r\n//       link.href = dataUrl;\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to JPEG Image\");\r\n//     });\r\n// }\r\n// componentDidUpdate() {\r\n//   if (this.state.download) {\r\n//     switch (this.state.downloadType) {\r\n//       case \"pdf\":\r\n//       default:\r\n//         this.downloadPDF();\r\n//         break;\r\n//       case \"png\":\r\n//         this.downloadPNG();\r\n//         break;\r\n//       case \"jpeg\":\r\n//         this.downloadJPEG();\r\n//         break;\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.rows &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                defaultValue={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {objector[this.state.creator.base].map(item => {\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              defaultValue={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              defaultValue={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              style={{ marginRight: \"1em\" }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.props.deleteTable(this.state.creator.id);\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            if (base.length === 0) {\r\n              console.warning(\"Table Base Not Found\", table);\r\n              return null;\r\n            }\r\n            let baseName = base[0].name;\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>{baseName}</strong> Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createLecture, updateLecture, deleteLecture } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createLecture({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateLecture(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Lecture Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.lectures.map(lecture => {\r\n            return (\r\n              <div key={lecture.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{lecture.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...lecture,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteLecture(lecture.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createBatch, updateBatch, deleteBatch } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Batch\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map(batch => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createDay, updateDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Day\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map(day => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTime, updateTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Time\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map(time => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createPlace, updatePlace, deletePlace } from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Place\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map(place => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createSubject, updateSubject, deleteSubject } from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Subject\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map(subject => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTeacher, updateTeacher, deleteTeacher } from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Teacher\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map(teacher => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\n// import Modal from \"../Modal\";\r\n// import FormEditor from \"../collections/areas/FormEditor\";\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import domtoimage from \"dom-to-image\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\"\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen />;\r\n      case \"tables\":\r\n        return <Tables />;\r\n      case \"lectures\":\r\n        return <Lectures />;\r\n      case \"batches\":\r\n        return <Batches />;\r\n      case \"days\":\r\n        return <Days />;\r\n      case \"times\":\r\n        return <Times />;\r\n      case \"places\":\r\n        return <Places />;\r\n      case \"subjects\":\r\n        return <Subjects />;\r\n      case \"teachers\":\r\n        return <Teachers />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div ref=\"screen\" className=\"full-wrapper flex-center\">\r\n          {this.actor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    if (this.props.user == null) {\r\n      return <Welcome />;\r\n    } else {\r\n      return <Display />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}