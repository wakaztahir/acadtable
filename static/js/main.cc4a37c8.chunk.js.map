{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","actions/downloader.js","components/others/ColorsPanel.js","components/others/LectureModal.js","components/others/AreaEditor.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","COLORS","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","ex","id","lectFind","filter","l","time","day","place","value","message","secLectFind","batch","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","updateDay","dayID","swapDay","withID","current","future","i","newDays","setDataKey","deleteDay","createTime","updateTime","timeID","swapTime","newTimes","deleteTime","createPlace","updatePlace","placeID","swapPlace","newPlaces","deletePlace","createBatch","updateBatch","batchID","swapBatch","newBatches","deleteBatch","createSubject","subject","updateSubject","subjectID","swapSubject","newSubjects","deleteSubject","createTeacher","teacher","updateTeacher","teacherID","swapTeacher","newTeachers","deleteTeacher","DefaultSetupSettings","info","name","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","color","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","catch","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","ColorsPanel","addClass","change","LectureModal","params","toEdit","edit","mode","list","defaultValue","margin","others_ColorsPanel","creator","marginTop","Lectures","Days","Times","Places","Batches","Subjects","Teachers","AreaEditor","element","update","Screen","tableMode","downloader","refs","area","request","req","swap","switcher","otherLecture","otherValidator","others_AreaEditor","deletor","objector","flexDirection","minWidth","ref","marginBottom","left","editor","col","colIndex","swapper","row","rowIndex","top","block","others_LectureModal","p","st","bh","tr","effectedRow","r","lectureSwap","effectedCol","c","User","Tables","action","quicker","_this2$state$creator","_this2$state$creator2","updateTable","marginRight","deleteTable","baseName","fontWeight","tableID","DefaultCreator","listshow","showitem","itemlist","lectCard","tm","pc","dy","marginLeft","paddingBottom","DefaultQuicker","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","Modal","modal","button","waiting","confirm","implement","System","App","position","components_Welcome","components_Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc4a37c8.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const COLORS = [\r\n  \"transparent\",\r\n  \"#ff5e52\",\r\n  \"#fff60c\",\r\n  \"#a7e034\",\r\n  \"#e0dfc7\",\r\n  \"#6777eb\"\r\n];\r\n\r\nexport const LECTURE_COLOR = \"transparent\";\r\nexport const DAY_COLOR = \"transparent\";\r\nexport const TIME_COLOR = \"transparent\";\r\nexport const PLACE_COLOR = \"transparent\";\r\nexport const BATCH_COLOR = \"transparent\";\r\nexport const SUBJECT_COLOR = \"transparent\";\r\nexport const TEACHER_COLOR = \"transparent\";\r\n\r\nexport const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect, ex = { id: \"exception\" }) => {\r\n  let lectFind = lectures.filter(\r\n    l => l.time === lect.time && l.day === lect.day && l.place === lect.place\r\n  );\r\n  if (lectFind.length > 0 && lectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n      return {\r\n        value: false,\r\n        message: \"This batch is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      return {\r\n        value: true,\r\n        message: \"\"\r\n      };\r\n    }\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth,\r\n          height: tableHeight\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth, tableHeight], \"landscape\");\r\n          }\r\n          doc.addImage(dataUrl, \"PNG\", 20, 20);\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { COLORS } from \"../../actions/helpers\";\r\n\r\nclass ColorsPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div style={this.props.style == null ? {} : this.props.style}>\r\n        {COLORS.map(color => {\r\n          let addClass = color === this.props.color ? \"selected\" : \"\";\r\n          return (\r\n            <span\r\n              className={\"color-btn \" + addClass}\r\n              style={{ background: color }}\r\n              key={\"color\" + color}\r\n              onClick={() => {\r\n                this.props.change(color);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorsPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  DAY_COLOR,\r\n  TIME_COLOR,\r\n  PLACE_COLOR,\r\n  BATCH_COLOR,\r\n  SUBJECT_COLOR,\r\n  TEACHER_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      batch: null,\r\n      subject: null,\r\n      color: null,\r\n      display: null,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              info.color = this.state.params.color;\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info, {\r\n                  id: this.state.params.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.props.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {toEdit.map(key => {\r\n              console.log(key);\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {key} &nbsp;\r\n                    </label>\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    <button\r\n                      style={{ margin: \"0 0.5em\" }}\r\n                      onClick={() => {\r\n                        this.setState({ display: key });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.params.color}\r\n                change={color => {\r\n                  this.setState({ params: { ...this.state.params, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}>Cancel</button>\r\n              </span>\r\n              &nbsp;\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator;\r\n      let color = \"transparent\";\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          color = DAY_COLOR;\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          color = TIME_COLOR;\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          color = PLACE_COLOR;\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          color = SUBJECT_COLOR;\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          color = BATCH_COLOR;\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          color = TEACHER_COLOR;\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n          >\r\n            Back\r\n          </button>\r\n          <div style={{ marginTop: \"1em\" }}>\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  creator({ name, color });\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                    {this.state.display} &nbsp;\r\n                  </label>\r\n                  <input type=\"text\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>\r\n              </form>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass AreaEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element.color}\r\n                  change={color => {\r\n                    this.setState({\r\n                      element: { ...this.state.element, color }\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\">\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.props.element[e]}\r\n                  onChange={e => {\r\n                    let element = { ...this.state.element };\r\n                    element[e] = e.target.value;\r\n                    this.setState({ element: element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.props.delete();\r\n                this.props.unshowModal();\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            &nbsp;\r\n            <input type=\"submit\" value=\"Update\" className=\"black-btn\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(AreaEditor);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  updateLecture,\r\n  deleteLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapPlace,\r\n  swapTeacher,\r\n  swapSubject,\r\n  swapTime,\r\n  updateBatch,\r\n  updateDay,\r\n  updatePlace,\r\n  updateSubject,\r\n  updateTeacher,\r\n  updateTime,\r\n  deleteBatch,\r\n  deleteDay,\r\n  deletePlace,\r\n  deleteSubject,\r\n  deleteTeacher,\r\n  deleteTime\r\n} from \"../../actions\";\r\n\r\nimport { listKey, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../others/LectureModal\";\r\nimport AreaEditor from \"../others/AreaEditor\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  switcher(area, request) {\r\n    let req = this.props[\r\n      `${request}${area[0].toUpperCase()}${listKey(area).substr(\r\n        1,\r\n        listKey(area).length\r\n      )}`\r\n    ];\r\n    if (req == null) {\r\n      return null;\r\n    }\r\n    return req;\r\n  }\r\n  swapper(area, from, to) {\r\n    let swap = null;\r\n    swap = this.switcher(area, \"swap\");\r\n    if (swap != null) {\r\n      swap(from.id, to.id);\r\n    }\r\n  }\r\n  lectureSwap(from, to) {\r\n    let lectFind = this.props.lectures.filter(\r\n      l => l.day === to.day && l.time === to.time && l.place === to.place\r\n    );\r\n    if (lectFind.length > 0) {\r\n      let otherLecture = lectFind[0];\r\n      otherLecture = {\r\n        ...otherLecture,\r\n        day: from.day,\r\n        time: from.time,\r\n        place: from.place\r\n      };\r\n      let otherValidator = lectureValidator(\r\n        this.props.lectures,\r\n        otherLecture,\r\n        from\r\n      );\r\n      if (otherValidator.value) {\r\n        this.props.updateLecture(otherLecture.id, otherLecture);\r\n        let validator = lectureValidator(this.props.lectures, to, otherLecture);\r\n        if (validator.value) {\r\n          this.props.updateLecture(to.id, to);\r\n        } else {\r\n          this.props.showModal(\"message\", validator.message);\r\n        }\r\n      } else {\r\n        this.props.showModal(\r\n          \"message\",\r\n          \"2nd lecture error , \" + otherValidator.message\r\n        );\r\n      }\r\n    } else {\r\n      let validator = lectureValidator(this.props.lectures, to);\r\n      if (validator.value) {\r\n        this.props.updateLecture(to.id, to);\r\n      } else {\r\n        this.props.showModal(\"message\", validator.message);\r\n      }\r\n    }\r\n  }\r\n  editor(area, element) {\r\n    this.props.showModal(\r\n      \"content\",\r\n      <AreaEditor\r\n        element={element}\r\n        update={data => {\r\n          this.switcher(area, \"update\")(element.id, data);\r\n        }}\r\n        delete={() => {\r\n          this.switcher(area, \"delete\")(element.id);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  deleter(area, element) {\r\n    let deletor = null;\r\n    deletor = this.switcher(area, \"delete\");\r\n    if (deletor != null) {\r\n      deletor(element.id);\r\n    } else {\r\n      console.log(deletor);\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"pdfrender render\",\r\n                downloader: downloadPDF,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadJPEG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download JPEG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadPNG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PNG\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                    key={table.id + \"error\"}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td\r\n                        className=\"main-block\"\r\n                        style={\r\n                          base.color != null || base.color !== \"transparent\"\r\n                            ? { background: base.color }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        {base != null ? (\r\n                          <div>\r\n                            <span>{base.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.editor(table.base, base);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        ) : null}\r\n                      </td>\r\n                      {cols.map((col, colIndex) => {\r\n                        return (\r\n                          <td\r\n                            key={\"c\" + col.id}\r\n                            className=\"col-block\"\r\n                            style={\r\n                              col.color != null || col.color !== \"transparent\"\r\n                                ? { background: col.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{col.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {colIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"left\"\r\n                                />\r\n                              )}\r\n                              {colIndex === cols.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"right\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.editor(table.cols, col);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </td>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows.map((row, rowIndex) => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <td\r\n                            className=\"row-block\"\r\n                            style={\r\n                              row.color != null || row.color !== \"transparent\"\r\n                                ? { background: row.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{row.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {rowIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"above\"\r\n                                />\r\n                              )}\r\n                              {rowIndex === rows.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"bottom\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                onClick={() => {\r\n                                  this.editor(table.rows, row);\r\n                                }}\r\n                                style={{\r\n                                  width: \"60%\",\r\n                                  height: \"50%\",\r\n                                  top: \"25%\",\r\n                                  left: \"20%\"\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </td>\r\n                          {cols.map((col, colIndex) => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    let toEdit = [\r\n                                      \"day\",\r\n                                      \"time\",\r\n                                      \"place\",\r\n                                      \"batch\",\r\n                                      \"subject\",\r\n                                      \"teacher\"\r\n                                    ];\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={toEdit.filter(p => {\r\n                                          if (\r\n                                            Object.keys(params).indexOf(p) < 0\r\n                                          ) {\r\n                                            return p;\r\n                                          }\r\n                                          return null;\r\n                                        })}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block\"\r\n                                  style={{ background: lecture.color }}\r\n                                >\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Batch Error\r\n                                    </span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                  <div className=\"block-buttons\">\r\n                                    {rowIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"above\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i - 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            lecture[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], lecture);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {rowIndex === rows.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"bottom\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i + 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            lecture[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], lecture);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === cols.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"right\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i + 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            lecture[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], lecture);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"left\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i - 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            lecture[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], lecture);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    <button\r\n                                      className=\"edit\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"content\",\r\n                                          <LectureModal\r\n                                            id={lecture.id}\r\n                                            params={{ ...lecture }}\r\n                                            edit={[\r\n                                              \"subject\",\r\n                                              \"batch\",\r\n                                              \"teacher\"\r\n                                            ]}\r\n                                            mode=\"update\"\r\n                                          />\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"delete\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"confirm\",\r\n                                          \"Are you sure ?\",\r\n                                          [\r\n                                            () => {\r\n                                              this.props.deleteLecture(\r\n                                                lecture.id\r\n                                              );\r\n                                            }\r\n                                          ]\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    deleteLecture,\r\n    swapBatch,\r\n    swapDay,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTeacher,\r\n    swapTime,\r\n    updateBatch,\r\n    updateDay,\r\n    updatePlace,\r\n    updateSubject,\r\n    updateTeacher,\r\n    updateTime,\r\n    deleteBatch,\r\n    deleteDay,\r\n    deletePlace,\r\n    deleteSubject,\r\n    deleteTeacher,\r\n    deleteTime\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    },\r\n    quicker: {\r\n      base: \"days\",\r\n      rows: \"places\",\r\n      cols: \"times\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let { base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.createTable({ base, baseValue, rows, cols });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let { id, base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.updateTable(id, { base, baseValue, rows, cols });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  LECTURE_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: \"%batch%%subject%%teacher%\",\r\n  mode: \"create\"\r\n};\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture, {\r\n                  id: this.state.creator.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.creator.color}\r\n                change={color => {\r\n                  this.setState({ creator: { ...this.state.creator, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div\r\n          key={lecture.id}\r\n          className=\"block\"\r\n          style={{ background: lecture.color }}\r\n        >\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  ...DefaultCreator,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch\r\n} from \"../../actions\";\r\n\r\nimport { BATCH_COLOR } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: BATCH_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div\r\n                key={batch.id}\r\n                className=\"block\"\r\n                style={{ background: batch.color }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createDay, updateDay, swapDay, deleteDay } from \"../../actions\";\r\n\r\nimport { DAY_COLOR } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: DAY_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color</label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Days</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                this.props.createDay({ name: day, color: DAY_COLOR });\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div\r\n                key={day.id}\r\n                className=\"block\"\r\n                style={{ background: day.color }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTime, updateTime, swapTime, deleteTime } from \"../../actions\";\r\n\r\nimport { TIME_COLOR } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TIME_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  fromTime: \"08\",\r\n  fromMeridian: \"AM\",\r\n  toTime: \"01\",\r\n  toMeridian: \"PM\",\r\n  lectureTime: \"60\",\r\n  color: TIME_COLOR\r\n};\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color</label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  this.props.createTime({\r\n                    name: time,\r\n                    color: this.state.quicker.color\r\n                  });\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"colorbtn\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Quick Times\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div\r\n                key={time.id}\r\n                className=\"block\"\r\n                style={{ background: time.color }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace\r\n} from \"../../actions\";\r\n\r\nimport { PLACE_COLOR } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: PLACE_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  name: \"Room\",\r\n  from: \"1\",\r\n  to: \"10\",\r\n  color: PLACE_COLOR\r\n};\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  this.props.createPlace({\r\n                    name: place,\r\n                    color: this.state.quicker.color\r\n                  });\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div\r\n                key={place.id}\r\n                className=\"block\"\r\n                style={{ background: place.color }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject\r\n} from \"../../actions\";\r\n\r\nimport { SUBJECT_COLOR } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: SUBJECT_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Subjects</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div\r\n                key={subject.id}\r\n                className=\"block\"\r\n                style={{ background: subject.color }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nimport { TEACHER_COLOR } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TEACHER_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              });\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Teachers</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div\r\n                key={teacher.id}\r\n                className=\"block\"\r\n                style={{ background: teacher.color }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.2.5;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}