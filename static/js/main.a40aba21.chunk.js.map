{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/Welcome.js","components/display/Screen.js","components/display/Tables.js","components/display/index.js","components/App.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","removeItem","id","userdata","assign","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","console","log","collections","getDataItem","forEach","key","dm","delDataItem","delData","values","s","warning","window","onbeforeunload","onunload","selectCollection","init","type","payload","getDataKey","Welcome","state","ftDisplay","collectionName","collectionDesc","_this2","react_default","a","createElement","onClick","setState","onSubmit","preventDefault","props","createCollection","name","desc","className","htmlFor","onChange","target","value","placeholder","required","_this3","displayCreate","disabled","exampleCollection","_this4","map","coll","copyCollection","deleteCollection","firstTime","screen","Component","connect","Collections","collection","set","get","Example","deleted","delete","Screen","objector","table","base","filter","i","baseValue","rows","cols","col","row","block","params","displayAddModal","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","display","creator","action","_this2$state$creator","createTable","_this2$state$creator2","updateTable","defaultValue","style","textTransform","objectSpread","item","marginRight","quicker","margin","baseName","edit","fontWeight","tableID","deleteTable","Display","display_Screen","display_Tables","deselectCollection","btn","ref","actor","User","createLecture","lecture","App","components_Welcome","combineReducers","list","concat","toConsumableArray","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.a40aba21.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    let data = this.getData();\r\n    if (data[id] != null) {\r\n      data[id] = Object.assign(data[id], this.validator(userdata));\r\n    } else {\r\n      data[id] = this.validator(userdata);\r\n    }\r\n    this.setData(data);\r\n    return this.validator(userdata);\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let data = {};\r\n    Object.keys(this.session).forEach(key => {\r\n      let dm = new datamanager(\"session\", key);\r\n      data[key] = dm.getData();\r\n    });\r\n    return data;\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables);\r\n      this.local.setDataItem(\"batches\", this.session.batches);\r\n      this.local.setDataItem(\"days\", this.session.days);\r\n      this.local.setDataItem(\"times\", this.session.times);\r\n      this.local.setDataItem(\"places\", this.session.places);\r\n      this.local.setDataItem(\"lectures\", this.session.lectures);\r\n      this.local.setDataItem(\"subjects\", this.session.subjects);\r\n      this.local.setDataItem(\"teachers\", this.session.teachers);\r\n      console.log(\"Data saved into localStorage.\");\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    id: \"example\",\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = data => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  console.log(table);\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  data.id = tableID;\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  console.log(table);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  console.log(table);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = data => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = data => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = data => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = data => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = data => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = data => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection\r\n} from \"../actions\";\r\n\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return objector.tables.map(table => {\r\n      let base = objector[table.base].filter(i => i.id === table.baseValue)[0];\r\n      let rows = objector[table.rows];\r\n      let cols = objector[table.cols];\r\n      return (\r\n        <div key={table.id}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>{base != null ? base.name : null}</td>\r\n                {cols.map(col => {\r\n                  return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map(row => {\r\n                return (\r\n                  <tr key={\"r\" + row.id}>\r\n                    <td>{row.name}</td>\r\n                    {cols.map(col => {\r\n                      let block = objector[\"lectures\"].filter(\r\n                        block =>\r\n                          block[listKey(table.base)] === base.id &&\r\n                          block[listKey(table.rows)] === row.id &&\r\n                          block[listKey(table.cols)] === col.id\r\n                      );\r\n                      if (block.length === 0) {\r\n                        // if (this.state.mode === \"print\") {\r\n                        //   return <td key={\"emp\" + col.id} />;\r\n                        // }\r\n                        return (\r\n                          <td\r\n                            onClick={() => {\r\n                              let params = {};\r\n                              params[listKey(table.base)] = base.id;\r\n                              params[listKey(table.rows)] = row.id;\r\n                              params[listKey(table.cols)] = col.id;\r\n                              this.props.displayAddModal(params);\r\n                            }}\r\n                            key={\"b\" + col.id}\r\n                          >\r\n                            <button>+</button>\r\n                          </td>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <td key={\"b\" + col.id} className=\"table-block\">\r\n                            {block[0].name}\r\n                          </td>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.rows &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                defaultValue={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {objector[this.state.creator.base].map(item => {\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              defaultValue={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              defaultValue={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  edit(table) {\r\n    this.setState({\r\n      display: \"create\",\r\n      creator: { ...table, action: \"update\" }\r\n    });\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            if (base.length === 0) {\r\n              console.warning(\"Table Base Not Found\", table);\r\n              return null;\r\n            }\r\n            let baseName = base[0].name;\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.edit(table);\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>{baseName}</strong> Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\n\r\n// import Modal from \"../Modal\";\r\n// import FormEditor from \"../collections/areas/FormEditor\";\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import domtoimage from \"dom-to-image\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\"\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen />;\r\n      case \"tables\":\r\n        return <Tables />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div ref=\"screen\" className=\"full-wrapper flex-center\">\r\n          {this.actor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    if (this.props.user == null) {\r\n      return <Welcome />;\r\n    } else {\r\n      return <Display />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.tables;\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.places;\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.batches;\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.days;\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.places;\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.lectures;\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.subjects;\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.teachers;\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id === action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}