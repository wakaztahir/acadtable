{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","actions/downloader.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","id","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","message","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","createLecture","lecture","createDay","day","createTime","time","createPlace","place","DefaultSetupSettings","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","name","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","value","onChange","x","setState","objectSpread","target","onClick","_this3","className","htmlFor","placeholder","_this4","style","color","_this5","objects","textTransform","map","obj","finish","title","_this6","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","concat","getMinutes","getTime","setMinutes","push","i","desc","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","collectionName","collectionDesc","onSubmit","preventDefault","required","displayCreate","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","catch","ex","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","Screen","tableMode","downloader","refs","objector","ref","filter","col","row","block","params","subject","st","batch","bh","teacher","tr","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","creator","action","_this2$state$creator","_this2$state$creator2","updateTable","defaultValue","item","marginRight","deleteTable","quicker","margin","disabled","baseName","fontWeight","tableID","mode","updateLecture","list","y","tm","pc","dy","deleteLecture","lectureID","createBatch","updateBatch","deleteBatch","batchID","updateDay","deleteDay","dayID","updateTime","deleteTime","timeID","updatePlace","deletePlace","placeID","createSubject","updateSubject","deleteSubject","subjectID","createTeacher","updateTeacher","deleteTeacher","teacherID","Display","display_Screen","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","actor","User","Modal","modal","button","waiting","confirm","implement","System","App","components_Welcome","components_Modal","initial_state","combineReducers","toConsumableArray","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.4b15e7d5.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    id: \"example\",\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = data => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = data => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = data => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08:00\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01:00\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <span>Monday to </span>&nbsp;&nbsp;\r\n          <select\r\n            name=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ stage: \"times\" });\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\"\r\n      //   \"batches\",\r\n      //   \"subjects\",\r\n      //   \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name: \"Quick Collection\",\r\n        desc: `Collection created on ${new Date().toLocaleDateString()} , Created with love.`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place\r\n        },\r\n        true\r\n      );\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case null:\r\n      case \"days\":\r\n      default:\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth,\r\n          height: tableHeight\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth, tableHeight], \"landscape\");\r\n          }\r\n          doc.addImage(dataUrl, \"PNG\", 0, 0);\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { showModal, unshowModal } from \"../../actions\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"pdfrender render\",\r\n                downloader: downloadPDF,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadJPEG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download JPEG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadPNG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PNG\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div className=\"warning screen-element\">\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>{base != null ? base.name : null}</td>\r\n                      {cols.map(col => {\r\n                        return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows.map(row => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <td>{row.name}</td>\r\n                          {cols.map(col => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    //this.props.displayAddModal(params);\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = block[0];\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td key={\"b\" + col.id} className=\"table-block\">\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning\">Batch Error</span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.rows &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                defaultValue={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {objector[this.state.creator.base].map(item => {\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              defaultValue={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              defaultValue={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              style={{ marginRight: \"1em\" }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.props.deleteTable(this.state.creator.id);\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            if (base.length === 0) {\r\n              console.warning(\"Table Base Not Found\", table);\r\n              return null;\r\n            }\r\n            let baseName = base[0].name;\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>{baseName}</strong> Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createLecture, updateLecture, deleteLecture } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let {\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.createLecture({\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            } else {\r\n              let {\r\n                id,\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.updateLecture(id, {\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          {Object.keys(objector).map(key => {\r\n            let list = objector[key];\r\n            return (\r\n              <div className=\"form-row\" key={key}>\r\n                <label\r\n                  htmlFor={key + \"sct\"}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {key}\r\n                </label>\r\n                <select\r\n                  name={key}\r\n                  id={key + \"sct\"}\r\n                  value={this.state.creator[key]}\r\n                  required={true}\r\n                  onChange={x => {\r\n                    let y = {};\r\n                    y[key] = x.target.value;\r\n                    this.setState({ creator: { ...this.state.creator, ...y } });\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.lectures.map(lecture => {\r\n            let subject = this.props.subjects.filter(\r\n              st => st.id === lecture.subject\r\n            )[0];\r\n            let batch = this.props.batches.filter(\r\n              bh => bh.id === lecture.batch\r\n            )[0];\r\n            let teacher = this.props.teachers.filter(\r\n              tr => tr.id === lecture.teacher\r\n            )[0];\r\n            let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n            let place = this.props.places.filter(\r\n              pc => pc.id === lecture.place\r\n            )[0];\r\n            let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n            return (\r\n              <div key={lecture.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  {subject != null ? (\r\n                    <span>{subject.name}</span>\r\n                  ) : (\r\n                    <span className=\"warning\">Subject Error </span>\r\n                  )}\r\n                  {batch != null ? (\r\n                    <span>{batch.name}</span>\r\n                  ) : (\r\n                    <span className=\"warning\">Batch Error </span>\r\n                  )}\r\n                  {teacher != null ? (\r\n                    <span>{teacher.name}</span>\r\n                  ) : (\r\n                    <span className=\"warning\">Teacher Error </span>\r\n                  )}\r\n                  {time != null ? (\r\n                    <span>{time.name}</span>\r\n                  ) : (\r\n                    <span className=\"warning\">Time Error </span>\r\n                  )}\r\n                  {place != null ? (\r\n                    <span>{place.name}</span>\r\n                  ) : (\r\n                    <span className=\"warning\">Place Error </span>\r\n                  )}\r\n                  {day != null ? (\r\n                    <span>{day.name}</span>\r\n                  ) : (\r\n                    <span className=\"warning\">Day Error </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...lecture,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteLecture(lecture.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createBatch, updateBatch, deleteBatch } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Batch\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map(batch => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createDay, updateDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                this.props.createDay({ name: day });\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Day\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map(day => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTime, updateTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Time\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map(time => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createPlace, updatePlace, deletePlace } from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Place\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map(place => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createSubject, updateSubject, deleteSubject } from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Subject\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map(subject => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTeacher, updateTeacher, deleteTeacher } from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Teacher\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map(teacher => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\n// import Modal from \"../Modal\";\r\n// import FormEditor from \"../collections/areas/FormEditor\";\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import domtoimage from \"dom-to-image\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\"\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen />;\r\n      case \"tables\":\r\n        return <Tables />;\r\n      case \"lectures\":\r\n        return <Lectures />;\r\n      case \"batches\":\r\n        return <Batches />;\r\n      case \"days\":\r\n        return <Days />;\r\n      case \"times\":\r\n        return <Times />;\r\n      case \"places\":\r\n        return <Places />;\r\n      case \"subjects\":\r\n        return <Subjects />;\r\n      case \"teachers\":\r\n        return <Teachers />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div ref=\"screen\" className=\"full-wrapper flex-center\">\r\n          {this.actor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return this.content(<div className=\"modal-loader\" />);\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}