{"version":3,"sources":["components/Header.js","components/display/Welcome.js","components/display/index.js","engine/storage.js","actions/index.js","components/tables/List.js","actions/types.js","components/tables/Create.js","components/tables/Edit.js","components/tables/index.js","components/App.js","reducers/index.js","reducers/TablesList.js","reducers/SelectedTable.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","Display","display_Welcome","this","props","list","length","welcomeMessage","selected","nothingSelected","screen","connect","state","TablesList","SelectedTable","storage","id","arguments","undefined","Object","classCallCheck","init","name","console","log","batchID","newname","lectureID","getList","creation","data","blockList","batchesList","lecturesList","push","saveList","saveData","sessionStorage","getItem","JSON","parse","ex","setItem","stringify","newlist","map","item","filter","removeItem","session","List","_this","addit_class","key","className","concat","onClick","select","edit","delete","type","table","getData","deleted","CreateTable","form","handleSubmit","event","preventDefault","action","_this2","onSubmit","htmlFor","value","onChange","e","setState","target","cancel","EditTable","Tables","showCreateForm","editTable","showEditForm","Create","values","create","Edit","rename","tables_List","Math","random","toString","split","substr","App","HashRouter","Route","path","component","exact","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.4b63a8d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/tables\">\r\n            <button>Tables</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Welcome !</span>\r\n        <p>\r\n          You have't created any tables\r\n          <br />\r\n          <Link to=\"/tables\">Click Here</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nclass Display extends Component {\r\n  welcomeMessage() {\r\n    return <Welcome />;\r\n  }\r\n  nothingSelected() {\r\n    return (\r\n      <div>\r\n        <span>You have't selected a table</span>\r\n        <br />\r\n        <Link to=\"/tables\">Click Here</Link>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    return <div>This is the screen</div>;\r\n  }\r\n  render() {\r\n    if (this.props.list.length === 0) {\r\n      return this.welcomeMessage();\r\n    } else if (this.props.selected === null) {\r\n      return this.nothingSelected();\r\n    }\r\n\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TablesList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Display);\r\n","class storage {\r\n  constructor(id = null) {\r\n    this.init(id);\r\n  }\r\n  init(id) {\r\n    if (id != null) {\r\n      this.id = id;\r\n    }\r\n  }\r\n  static create(name, id) {\r\n    let list = storage.getList();\r\n    let creation = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      blockList: [],\r\n      batchesList: [],\r\n      lecturesList: []\r\n    };\r\n    list.push(creation);\r\n    storage.saveList(list);\r\n    storage.saveData(id, data);\r\n  }\r\n  static getList() {\r\n    let list = sessionStorage.getItem(\"tables-list\") || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  static saveList(list = []) {\r\n    sessionStorage.setItem(\"tables-list\", JSON.stringify(list));\r\n  }\r\n\r\n  static getData(id) {\r\n    let data = sessionStorage.getItem(\"td-\" + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  static saveData(id, data = {}) {\r\n    sessionStorage.setItem(\"td-\" + id, JSON.stringify(data));\r\n  }\r\n  static rename(id, newname) {\r\n    let list = storage.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    storage.saveList(newlist);\r\n  }\r\n  static delete(id) {\r\n    let list = storage.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    storage.saveList(newlist);\r\n    sessionStorage.removeItem(\"td-\" + id);\r\n  }\r\n\r\n  //Main User Functions\r\n\r\n  getBatchList() {}\r\n  createBatch(name) {\r\n    console.log(\"batch\", \"create\", name);\r\n  }\r\n  renameBatch(batchID, newname) {\r\n    console.log(\"batch\", \"rename\", batchID, newname);\r\n  }\r\n  deleteBatch(batchID) {\r\n    console.log(\"batch\", \"delete\", batchID);\r\n  }\r\n\r\n  getLectureList() {}\r\n  createLecture(name) {\r\n    console.log(\"lecture\", \"create\", name);\r\n  }\r\n  renameLecture(lectureID, newname) {\r\n    console.log(\"lecture\", \"rename\", lectureID, newname);\r\n  }\r\n  deleteLecture(lectureID) {\r\n    console.log(\"lecture\", \"delete\", lectureID);\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../engine/storage\";\r\nimport {\r\n  CREATE_TABLE,\r\n  SELECT_TABLE,\r\n  RENAME_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BATCH,\r\n  RENAME_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_LECTURE,\r\n  RENAME_LECTURE,\r\n  DELETE_LECTURE\r\n} from \"./types\";\r\n\r\nlet session = new storage();\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTableByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(0, 5);\r\n  storage.create(name, id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: CREATE_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const selectTableById = id => {\r\n  session.init(id);\r\n  return {\r\n    type: SELECT_TABLE,\r\n    table: storage.getData(id)\r\n  };\r\n};\r\nexport const renameTableById = (id, newname) => {\r\n  storage.rename(id, newname);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const deleteTableById = id => {\r\n  storage.delete(id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: DELETE_TABLE,\r\n    deleted: id,\r\n    list\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatchByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(3, 8);\r\n  session.create(name, id);\r\n  let list = session.getBatchList();\r\n  return {\r\n    type: CREATE_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const renameBatchById = (newname, id) => {\r\n  session.renameBatch(newname, id);\r\n  let list = session.getBatchList();\r\n  return {\r\n    type: RENAME_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const deleteBatchById = id => {\r\n  session.deleteBatch(id);\r\n  let list = session.getBatchList();\r\n  return {\r\n    type: DELETE_BATCH,\r\n    list\r\n  };\r\n};\r\n\r\n//LECTURE ACTIONS\r\n\r\nexport const createLectureByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(4, 9);\r\n  session.createLecture(name, id);\r\n  let list = session.getLectureList();\r\n  console.log(list);\r\n  return {\r\n    type: CREATE_LECTURE,\r\n    list\r\n  };\r\n};\r\nexport const renameLectureById = (newname, id) => {\r\n  session.renameLecture(newname, id);\r\n  let list = session.getLectureList();\r\n  return {\r\n    type: RENAME_LECTURE,\r\n    list\r\n  };\r\n};\r\nexport const deleteLectureById = id => {\r\n  session.deleteLecture(id);\r\n  let list = session.getLectureList();\r\n  return {\r\n    type: DELETE_LECTURE,\r\n    list\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectTableById, deleteTableById } from \"../../actions\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return this.props.list.map(item => {\r\n      let selected =\r\n        this.props.selected == null ? { id: \"\" } : this.props.selected;\r\n      let addit_class = item.id === selected.id ? \"selected-card\" : \"\";\r\n      return (\r\n        <div key={item.id} className={`table-card card-box ${addit_class}`}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.select(item.id);\r\n              }}\r\n              className=\"select-btn\"\r\n            >\r\n              Select\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.edit(item);\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.delete(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TablesList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    select: selectTableById,\r\n    delete: deleteTableById\r\n  }\r\n)(List);\r\n","export const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const SELECT_TABLE = \"SELECT_TABLE\";\r\nexport const RENAME_TABLE = \"RENAME_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const RENAME_BATCH = \"RENAME_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_LECTURE = \"CREATE_LECTURE\";\r\nexport const RENAME_LECTURE = \"RENAME_LECTURE\";\r\nexport const DELETE_LECTURE = \"DELETE_LECTURE\";\r\n","import React, { Component } from \"react\";\r\n\r\nclass CreateTable extends Component {\r\n  state = {\r\n    form: {\r\n      name: \"\"\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.action(this.state.form);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"row-block\">\r\n        <label htmlFor=\"name\" className=\"item\">\r\n          Table Name :\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"item\"\r\n          value={this.state.form.name}\r\n          onChange={e => {\r\n            this.setState({\r\n              form: {\r\n                name: e.target.value\r\n              }\r\n            });\r\n          }}\r\n        />\r\n        <input type=\"submit\" className=\"item\" />\r\n        <button onClick={this.props.cancel} className=\"item\">\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTable;\r\n","import React, { Component } from \"react\";\r\n\r\nclass EditTable extends Component {\r\n  state = {\r\n    form: {\r\n      newname: this.props.name\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.action(this.state.form);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"row-block\">\r\n        <label htmlFor=\"name\" className=\"item\">\r\n          Table Name :\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"item\"\r\n          value={this.state.form.newname}\r\n          onChange={e => {\r\n            this.setState({\r\n              form: {\r\n                newname: e.target.value\r\n              }\r\n            });\r\n          }}\r\n        />\r\n        <input type=\"submit\" className=\"item\" value=\"Save\" />\r\n        <button onClick={this.props.cancel} className=\"item\">\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTable;\r\n","import React, { Component } from \"react\";\r\n\r\nimport List from \"./List\";\r\nimport Create from \"./Create\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTableByName, renameTableById } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    showCreateForm: false,\r\n    editTable: null,\r\n    showEditForm: false\r\n  };\r\n  render() {\r\n    const CreateDialogue = () => {\r\n      if (this.state.showCreateForm) {\r\n        return (\r\n          <Create\r\n            cancel={() => {\r\n              this.setState({ showCreateForm: false });\r\n            }}\r\n            action={values => {\r\n              this.props.create(values.name);\r\n              this.setState({ showCreateForm: false });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ul className=\"buttons-list\">\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ showCreateForm: true });\r\n                }}\r\n              >\r\n                Create A Table\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        );\r\n      }\r\n    };\r\n\r\n    const EditDialogue = () => {\r\n      if (this.state.editTable != null && this.state.showEditForm) {\r\n        return (\r\n          <Edit\r\n            name={this.state.editTable.name}\r\n            action={values => {\r\n              this.props.rename(this.state.editTable.id, values.newname);\r\n              this.setState({\r\n                showEditForm: false,\r\n                editTable: null\r\n              });\r\n            }}\r\n            cancel={() => {\r\n              this.setState({\r\n                showEditForm: false,\r\n                editTable: null\r\n              });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    const RenderedList = () => {\r\n      return (\r\n        <div className=\"list-contaienr\">\r\n          <List\r\n            edit={item => {\r\n              this.setState({\r\n                showEditForm: true,\r\n                editTable: item\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <CreateDialogue />\r\n        <EditDialogue />\r\n        <RenderedList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TablesList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    create: createTableByName,\r\n    rename: renameTableById\r\n  }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n//Header Import\r\nimport Header from \"./Header\";\r\n\r\n//Display Import\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Tables from \"./tables\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n\r\n            <Route path=\"/tables\" exact component={Tables} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport TablesList from \"./TablesList\";\r\nimport SelectedTable from \"./SelectedTable\";\r\n\r\nexport default combineReducers({\r\n  TablesList,\r\n  SelectedTable\r\n});\r\n","import { CREATE_TABLE, RENAME_TABLE, DELETE_TABLE } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = storage.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_TABLE:\r\n    case RENAME_TABLE:\r\n    case DELETE_TABLE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE, DELETE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let selected_table = action.table || null;\r\n      return selected_table;\r\n    case DELETE_TABLE:\r\n      if (state !== null && action.deleted === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}