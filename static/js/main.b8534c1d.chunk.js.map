{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","actions/downloader.js","components/others/ColorsPanel.js","components/others/LectureModal.js","components/others/AreaEditor.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","COLORS","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","ex","id","lectFind","filter","l","time","day","place","value","message","secLectFind","batch","teacher","batchValidator","batches","batchFind","b","name","dayValidator","days","dayFind","d","timeValidator","times","timeFind","t","placeValidator","places","placeFind","p","subjectValidator","subjects","subject","subjectFind","s","teacherValidator","teachers","teacherFind","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","collections","getDataItem","key","delDataItem","delData","values","forEach","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","updateDay","dayID","swapDay","withID","current","future","i","newDays","setDataKey","deleteDay","createTime","updateTime","timeID","swapTime","newTimes","deleteTime","createPlace","updatePlace","placeID","swapPlace","newPlaces","deletePlace","createBatch","updateBatch","batchID","swapBatch","newBatches","deleteBatch","createSubject","updateSubject","subjectID","swapSubject","newSubjects","deleteSubject","createTeacher","updateTeacher","teacherID","swapTeacher","newTeachers","deleteTeacher","DefaultSetupSettings","info","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","color","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","catch","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","ColorsPanel","addClass","change","LectureModal","params","toEdit","edit","mode","list","defaultValue","margin","others_ColorsPanel","creator","marginTop","Lectures","Days","Times","Places","Batches","Subjects","Teachers","AreaEditor","element","update","Screen","tableMode","downloader","refs","area","request","req","swap","switcher","otherLecture","otherValidator","others_AreaEditor","deletor","objector","flexDirection","minWidth","ref","marginBottom","left","editor","col","colIndex","swapper","row","rowIndex","top","block","others_LectureModal","st","bh","tr","effectedRow","r","lectureSwap","effectedCol","c","User","Tables","action","quicker","_this2$state$creator","_this2$state$creator2","updateTable","marginRight","deleteTable","baseName","fontWeight","tableID","DefaultCreator","listshow","showitem","itemlist","lectCard","tm","pc","dy","marginLeft","paddingBottom","dayObj","DefaultQuicker","timeObj","placeObj","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","Modal","modal","button","waiting","confirm","implement","System","App","position","components_Welcome","components_Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b8534c1d.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const COLORS = [\r\n  \"transparent\",\r\n  \"#ff5e52\",\r\n  \"#fff60c\",\r\n  \"#a7e034\",\r\n  \"#e0dfc7\",\r\n  \"#6777eb\"\r\n];\r\n\r\nexport const LECTURE_COLOR = \"transparent\";\r\nexport const DAY_COLOR = \"transparent\";\r\nexport const TIME_COLOR = \"transparent\";\r\nexport const PLACE_COLOR = \"transparent\";\r\nexport const BATCH_COLOR = \"transparent\";\r\nexport const SUBJECT_COLOR = \"transparent\";\r\nexport const TEACHER_COLOR = \"transparent\";\r\n\r\nexport const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect, ex = { id: \"exception\" }) => {\r\n  let lectFind = lectures.filter(\r\n    l =>\r\n      l.time === lect.time &&\r\n      l.day === lect.day &&\r\n      l.place === lect.place &&\r\n      l.id !== lect.id\r\n  );\r\n  if (lectFind.length > 0 && lectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n      return {\r\n        value: false,\r\n        message:\r\n          \"This batch/class is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      let secLectFind = lectures.filter(\r\n        l =>\r\n          l.teacher === lect.teacher &&\r\n          l.time === lect.time &&\r\n          l.day === lect.day &&\r\n          l.id !== lect.id\r\n      );\r\n      if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n        return {\r\n          value: false,\r\n          message:\r\n            \"One teacher cannot teach two batches/classes at the same time.\"\r\n        };\r\n      } else {\r\n        return {\r\n          value: true,\r\n          message: \"\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const batchValidator = (batches, batch, ex = { id: \"exception\" }) => {\r\n  let batchFind = batches.filter(\r\n    b => b.name === batch.name && b.id !== batch.id\r\n  );\r\n  if (batchFind.length > 0 && batchFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A batch with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const dayValidator = (days, day, ex = { id: \"exception\" }) => {\r\n  let dayFind = days.filter(d => d.name === day.name && d.id !== day.id);\r\n  if (dayFind.length > 0 && dayFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A day with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const timeValidator = (times, time, ex = { id: \"exception\" }) => {\r\n  let timeFind = times.filter(t => t.name === time.name && t.id !== time.id);\r\n  if (timeFind.length > 0 && timeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A time with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const placeValidator = (places, place, ex = { id: \"exception\" }) => {\r\n  let placeFind = places.filter(\r\n    p => p.name === place.name && p.id !== place.id\r\n  );\r\n  if (placeFind.length > 0 && placeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A place with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const subjectValidator = (\r\n  subjects,\r\n  subject,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let subjectFind = subjects.filter(\r\n    s => s.name === subject.name && s.id !== subject.id\r\n  );\r\n  if (subjectFind.length > 0 && subjectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A subject with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const teacherValidator = (\r\n  teachers,\r\n  teacher,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let teacherFind = teachers.filter(\r\n    t => t.name === teacher.name && t.id !== teacher.id\r\n  );\r\n  if (teacherFind.length > 0 && teacherFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A teacher with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth,\r\n          height: tableHeight\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth, tableHeight], \"landscape\");\r\n          }\r\n          doc.addImage(dataUrl, \"PNG\", 20, 20);\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { COLORS } from \"../../actions/helpers\";\r\n\r\nclass ColorsPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div style={this.props.style == null ? {} : this.props.style}>\r\n        {COLORS.map(color => {\r\n          let addClass = color === this.props.color ? \"selected\" : \"\";\r\n          return (\r\n            <span\r\n              className={\"color-btn \" + addClass}\r\n              style={{ background: color }}\r\n              key={\"color\" + color}\r\n              onClick={() => {\r\n                this.props.change(color);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorsPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  DAY_COLOR,\r\n  TIME_COLOR,\r\n  PLACE_COLOR,\r\n  BATCH_COLOR,\r\n  SUBJECT_COLOR,\r\n  TEACHER_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      batch: null,\r\n      subject: null,\r\n      color: null,\r\n      display: null,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              info.color = this.state.params.color;\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info, {\r\n                  id: this.state.params.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.props.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {toEdit.map(key => {\r\n              console.log(key);\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {key} &nbsp;\r\n                    </label>\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    <button\r\n                      style={{ margin: \"0 0.5em\" }}\r\n                      onClick={() => {\r\n                        this.setState({ display: key });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.params.color}\r\n                change={color => {\r\n                  this.setState({ params: { ...this.state.params, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}>Cancel</button>\r\n              </span>\r\n              &nbsp;\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator;\r\n      let color = \"transparent\";\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          color = DAY_COLOR;\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          color = TIME_COLOR;\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          color = PLACE_COLOR;\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          color = SUBJECT_COLOR;\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          color = BATCH_COLOR;\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          color = TEACHER_COLOR;\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n          >\r\n            Back\r\n          </button>\r\n          <div style={{ marginTop: \"1em\" }}>\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  creator({ name, color });\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                    {this.state.display} &nbsp;\r\n                  </label>\r\n                  <input type=\"text\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>\r\n              </form>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass AreaEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element.color}\r\n                  change={color => {\r\n                    this.setState({\r\n                      element: { ...this.state.element, color }\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\">\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.props.element[e]}\r\n                  onChange={e => {\r\n                    let element = { ...this.state.element };\r\n                    element[e] = e.target.value;\r\n                    this.setState({ element: element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.props.delete();\r\n                this.props.unshowModal();\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            &nbsp;\r\n            <input type=\"submit\" value=\"Update\" className=\"black-btn\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(AreaEditor);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  updateLecture,\r\n  deleteLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapPlace,\r\n  swapTeacher,\r\n  swapSubject,\r\n  swapTime,\r\n  updateBatch,\r\n  updateDay,\r\n  updatePlace,\r\n  updateSubject,\r\n  updateTeacher,\r\n  updateTime,\r\n  deleteBatch,\r\n  deleteDay,\r\n  deletePlace,\r\n  deleteSubject,\r\n  deleteTeacher,\r\n  deleteTime\r\n} from \"../../actions\";\r\n\r\nimport { listKey, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../others/LectureModal\";\r\nimport AreaEditor from \"../others/AreaEditor\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  switcher(area, request) {\r\n    let req = this.props[\r\n      `${request}${area[0].toUpperCase()}${listKey(area).substr(\r\n        1,\r\n        listKey(area).length\r\n      )}`\r\n    ];\r\n    if (req == null) {\r\n      return null;\r\n    }\r\n    return req;\r\n  }\r\n  swapper(area, from, to) {\r\n    let swap = null;\r\n    swap = this.switcher(area, \"swap\");\r\n    if (swap != null) {\r\n      swap(from.id, to.id);\r\n    }\r\n  }\r\n  lectureSwap(from, to) {\r\n    let lectFind = this.props.lectures.filter(\r\n      l => l.day === to.day && l.time === to.time && l.place === to.place\r\n    );\r\n    if (lectFind.length > 0) {\r\n      let otherLecture = { ...lectFind[0] };\r\n      otherLecture = {\r\n        ...otherLecture,\r\n        day: from.day,\r\n        time: from.time,\r\n        place: from.place\r\n      };\r\n      let otherValidator = lectureValidator(\r\n        this.props.lectures,\r\n        otherLecture,\r\n        from\r\n      );\r\n      if (otherValidator.value) {\r\n        this.props.updateLecture(otherLecture.id, otherLecture);\r\n        let validator = lectureValidator(this.props.lectures, to, otherLecture);\r\n        if (validator.value) {\r\n          this.props.updateLecture(to.id, to);\r\n        } else {\r\n          this.props.showModal(\"message\", validator.message);\r\n        }\r\n      } else {\r\n        this.props.showModal(\r\n          \"message\",\r\n          \"2nd lecture error , \" + otherValidator.message\r\n        );\r\n      }\r\n    } else {\r\n      let validator = lectureValidator(this.props.lectures, to);\r\n      if (validator.value) {\r\n        this.props.updateLecture(to.id, to);\r\n      } else {\r\n        this.props.showModal(\"message\", validator.message);\r\n      }\r\n    }\r\n  }\r\n  editor(area, element) {\r\n    this.props.showModal(\r\n      \"content\",\r\n      <AreaEditor\r\n        element={element}\r\n        update={data => {\r\n          this.switcher(area, \"update\")(element.id, data);\r\n        }}\r\n        delete={() => {\r\n          this.switcher(area, \"delete\")(element.id);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  deleter(area, element) {\r\n    let deletor = null;\r\n    deletor = this.switcher(area, \"delete\");\r\n    if (deletor != null) {\r\n      deletor(element.id);\r\n    } else {\r\n      console.log(deletor);\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"pdfrender render\",\r\n                downloader: downloadPDF,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadJPEG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download JPEG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadPNG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PNG\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                    key={table.id + \"error\"}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td\r\n                        className=\"main-block\"\r\n                        style={\r\n                          base.color != null || base.color !== \"transparent\"\r\n                            ? { background: base.color }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        {base != null ? (\r\n                          <div>\r\n                            <span>{base.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.editor(table.base, base);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        ) : null}\r\n                      </td>\r\n                      {cols.map((col, colIndex) => {\r\n                        return (\r\n                          <td\r\n                            key={\"c\" + col.id}\r\n                            className=\"col-block\"\r\n                            style={\r\n                              col.color != null || col.color !== \"transparent\"\r\n                                ? { background: col.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{col.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {colIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"left\"\r\n                                />\r\n                              )}\r\n                              {colIndex === cols.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"right\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.editor(table.cols, col);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </td>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows.map((row, rowIndex) => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <td\r\n                            className=\"row-block\"\r\n                            style={\r\n                              row.color != null || row.color !== \"transparent\"\r\n                                ? { background: row.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{row.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {rowIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"above\"\r\n                                />\r\n                              )}\r\n                              {rowIndex === rows.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"bottom\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                onClick={() => {\r\n                                  this.editor(table.rows, row);\r\n                                }}\r\n                                style={{\r\n                                  width: \"60%\",\r\n                                  height: \"50%\",\r\n                                  top: \"25%\",\r\n                                  left: \"20%\"\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </td>\r\n                          {cols.map((col, colIndex) => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    let toEdit = [\r\n                                      \"day\",\r\n                                      \"time\",\r\n                                      \"place\",\r\n                                      \"batch\",\r\n                                      \"subject\",\r\n                                      \"teacher\"\r\n                                    ];\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={toEdit.filter(p => {\r\n                                          if (\r\n                                            Object.keys(params).indexOf(p) < 0\r\n                                          ) {\r\n                                            return p;\r\n                                          }\r\n                                          return null;\r\n                                        })}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block\"\r\n                                  style={{ background: lecture.color }}\r\n                                >\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Batch Error\r\n                                    </span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                  <div className=\"block-buttons\">\r\n                                    {rowIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"above\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i - 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {rowIndex === rows.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"bottom\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i + 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === cols.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"right\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i + 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"left\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i - 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    <button\r\n                                      className=\"edit\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"content\",\r\n                                          <LectureModal\r\n                                            id={lecture.id}\r\n                                            params={{ ...lecture }}\r\n                                            edit={[\r\n                                              \"subject\",\r\n                                              \"batch\",\r\n                                              \"teacher\"\r\n                                            ]}\r\n                                            mode=\"update\"\r\n                                          />\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"delete\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"confirm\",\r\n                                          \"Are you sure ?\",\r\n                                          [\r\n                                            () => {\r\n                                              this.props.deleteLecture(\r\n                                                lecture.id\r\n                                              );\r\n                                            }\r\n                                          ]\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    deleteLecture,\r\n    swapBatch,\r\n    swapDay,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTeacher,\r\n    swapTime,\r\n    updateBatch,\r\n    updateDay,\r\n    updatePlace,\r\n    updateSubject,\r\n    updateTeacher,\r\n    updateTime,\r\n    deleteBatch,\r\n    deleteDay,\r\n    deletePlace,\r\n    deleteSubject,\r\n    deleteTeacher,\r\n    deleteTime\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    },\r\n    quicker: {\r\n      base: \"days\",\r\n      rows: \"places\",\r\n      cols: \"times\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let { base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.createTable({ base, baseValue, rows, cols });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let { id, base, baseValue, rows, cols } = this.state.creator;\r\n                this.props.updateTable(id, { base, baseValue, rows, cols });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  LECTURE_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: \"%batch%%subject%%teacher%\",\r\n  mode: \"create\"\r\n};\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture, {\r\n                  id: this.state.creator.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.creator.color}\r\n                change={color => {\r\n                  this.setState({ creator: { ...this.state.creator, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div\r\n          key={lecture.id}\r\n          className=\"block\"\r\n          style={{ background: lecture.color }}\r\n        >\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  ...DefaultCreator,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { BATCH_COLOR, batchValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: BATCH_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.createBatch(batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.updateBatch(this.state.creator.id, batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div\r\n                key={batch.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    batch.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : batch.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch,\r\n    showModal\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createDay,\r\n  updateDay,\r\n  swapDay,\r\n  deleteDay,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { DAY_COLOR, dayValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: DAY_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.createDay(day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.updateDay(this.state.creator.id, day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color</label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Days</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                let dayObj = { name: day, color: DAY_COLOR };\r\n                let validator = dayValidator(this.props.days, dayObj);\r\n                if (validator.value) {\r\n                  this.props.createDay(dayObj);\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div\r\n                key={day.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    day.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : day.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay,\r\n    showModal\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTime,\r\n  updateTime,\r\n  swapTime,\r\n  deleteTime,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { TIME_COLOR, timeValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TIME_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  fromTime: \"08\",\r\n  fromMeridian: \"AM\",\r\n  toTime: \"01\",\r\n  toMeridian: \"PM\",\r\n  lectureTime: \"60\",\r\n  color: TIME_COLOR\r\n};\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color</label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  let timeObj = { name: time, color: this.state.quicker.color };\r\n                  let validator = timeValidator(this.props.times, timeObj);\r\n                  if (validator.value) {\r\n                    this.props.createTime(timeObj);\r\n                  }\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.createTime(time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.updateTime(this.state.creator.id, time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"colorbtn\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Quick Times\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div\r\n                key={time.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    time.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : time.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime,\r\n    showModal\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { PLACE_COLOR, placeValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: PLACE_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  name: \"Room\",\r\n  from: \"1\",\r\n  to: \"10\",\r\n  color: PLACE_COLOR\r\n};\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  let placeObj = {\r\n                    name: place,\r\n                    color: this.state.quicker.color\r\n                  };\r\n                  let validator = placeValidator(this.props.places, placeObj);\r\n                  if (validator.value) {\r\n                    this.props.createPlace(placeObj);\r\n                  }\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.createPlace(place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.updatePlace(this.state.creator.id, place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div\r\n                key={place.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    place.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : place.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace,\r\n    showModal\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { SUBJECT_COLOR, subjectValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: SUBJECT_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.createSubject(subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.updateSubject(this.state.creator.id, subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Subjects</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div\r\n                key={subject.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    subject.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : subject.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject,\r\n    showModal\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { TEACHER_COLOR, teacherValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TEACHER_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(this.props.teachers, teacher);\r\n              if (validator.value) {\r\n                this.props.createTeacher(teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(this.props.teachers, teacher);\r\n              if (validator.value) {\r\n                this.props.updateTeacher(this.state.creator.id, teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Teachers</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div\r\n                key={teacher.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    teacher.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : teacher.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher,\r\n    showModal\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.2.7;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}