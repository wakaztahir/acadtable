{"version":3,"sources":["components/Header.js","components/display/Welcome.js","engine/storage.js","actions/index.js","actions/types.js","components/display/index.js","components/collections/List.js","components/collections/Create.js","actions/helpers.js","components/collections/areas/FormEditor.js","components/collections/areas/BlockEditor.js","components/collections/areas/TableEditor.js","components/collections/areas/index.js","components/collections/Edit.js","components/collections/index.js","components/App.js","reducers/index.js","reducers/CollectionsList.js","reducers/SelectedCollection.js","reducers/TablesList.js","reducers/PlacesList.js","reducers/DaysList.js","reducers/TimesList.js","reducers/BlocksList.js","reducers/SubjectsList.js","reducers/TeachersList.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","storage","id","name","list","getList","collection","data","tables","blocks","days","times","places","batches","subjects","teachers","push","saveList","saveData","localStorage","getItem","JSON","parse","ex","arguments","length","undefined","setItem","stringify","newname","newlist","map","item","filter","removeItem","type","tableData","getData","ListFunctions","all","this","itemID","createItem","updateItem","deleteItem","selectCollection","payload","selectedCollection","createBlock","collectionID","createDay","createTime","createPlace","createBatch","createSubject","createTeacher","Display","_this","props","rows","cols","userCreate","x","userParams","params","batch","day","time","subject","teacher","text","Object","assign","selected","table","key","number","col","onClick","row","block","collections","display_Welcome","screen","connect","state","CollectionsList","SelectedCollection","TablesList","DaysList","PlacesList","TimesList","BlocksList","BatchesList","SubjectsList","TeachersList","List","className","selectClass","selectedItem","concat","buttons","button","action","CreateTable","form","handle","event","preventDefault","submit","_this2","display","onSubmit","htmlFor","value","onChange","e","setState","target","cancel","click","rand","operator","start","end","Math","random","toString","split","substr","FormEditor","property","keys","save","style","width","flexDirection","justifyContent","alignItems","show","keyType","newvalue","disabled","locked","required","defaultValue","field","BlockEditor","marginBottom","TableEditor","items","base","blist","i","baseList","rowsList","rowsValue","colsList","objectSpread","baseValue","marginTop","Area","array","heading","editor","showEditorFor","obj","areas_FormEditor","areas_TableEditor","areas_BlockEditor","deleteProperty","deleteActionCreator","console","log","updateActionCreator","default","toConsumableArray","createActionCreator","_this3","addProperty","padding","EditCollection","editArea","updateState","activeClass","textTransform","margin","areas","createTable","propID","updateTable","deleteTable","updateBlock","deleteBlock","updateDay","deleteDay","updateTime","deleteTime","updatePlace","deletePlace","updateBatch","deleteBatch","updateSubject","deleteSubject","updateTeacher","deleteTeacher","blockID","tableID","dayID","timeID","placeID","batchID","subjectID","teacherID","Collections","createForm","editCollection","copyCollection","deleteCollection","Edit","Create","values","createCollection","collections_List","create","newid","renameCollection","rename","deleted","delete","App","HashRouter","Route","path","component","exact","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.bcec3720.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/collections\">\r\n            <button>Collections</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Welcome !</span>\r\n        <p>\r\n          You have't created any collections\r\n          <br />\r\n          <Link to=\"/collections\">Click Here</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","class storage {\r\n  static create(id, name) {\r\n    let list = storage.getList();\r\n    let collection = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      tables: [],\r\n      blocks: [],\r\n      days: [],\r\n      times: [],\r\n      places: [],\r\n      batches: [],\r\n      subjects: [],\r\n      teachers: []\r\n    };\r\n    list.push(collection);\r\n    storage.saveList(list);\r\n    storage.saveData(id, data);\r\n  }\r\n  static getList() {\r\n    let list = localStorage.getItem(\"collections\") || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  static saveList(list = []) {\r\n    localStorage.setItem(\"collections\", JSON.stringify(list));\r\n  }\r\n\r\n  static getData(id) {\r\n    let data = localStorage.getItem(\"c-\" + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  static saveData(id, data = {}) {\r\n    localStorage.setItem(\"c-\" + id, JSON.stringify(data));\r\n  }\r\n  static rename(id, newname) {\r\n    let list = storage.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    storage.saveList(newlist);\r\n  }\r\n  static delete(id) {\r\n    let list = storage.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    storage.saveList(newlist);\r\n    localStorage.removeItem(\"c-\" + id);\r\n  }\r\n\r\n  //Main User Functions\r\n\r\n  static list(id, type) {\r\n    let tableData = storage.getData(id);\r\n    if (tableData) {\r\n      if (!tableData[type]) {\r\n        tableData[type] = [];\r\n        storage.saveData(id, tableData);\r\n      }\r\n      let ListFunctions = {\r\n        all: function() {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          return list;\r\n        },\r\n        getItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let items = list.filter(item => item.id === itemID);\r\n          return items[0];\r\n        },\r\n        createItem: function(data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list.push(data);\r\n          storage.saveData(this.id, tableData);\r\n          return data;\r\n        },\r\n        updateItem: function(itemID, data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list = list.map(item => {\r\n            if (item.id === itemID) {\r\n              return data;\r\n            }\r\n            return item;\r\n          });\r\n          tableData[this.type] = list;\r\n          storage.saveData(this.id, tableData);\r\n        },\r\n        deleteItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          tableData[this.type] = list.filter(item => item.id !== itemID);\r\n          storage.saveData(this.id, tableData);\r\n        }\r\n      };\r\n      ListFunctions.id = id;\r\n      ListFunctions.type = type;\r\n      return ListFunctions;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../engine/storage\";\r\nimport {\r\n  CREATE_COLLECTION,\r\n  SELECT_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION,\r\n  CREATE_TABLE,\r\n  UPDATE_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BLOCK,\r\n  UPDATE_BLOCK,\r\n  DELETE_BLOCK,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY,\r\n  CREATE_TIME,\r\n  UPDATE_TIME,\r\n  DELETE_TIME,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE,\r\n  CREATE_BATCH,\r\n  UPDATE_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT,\r\n  CREATE_TEACHER,\r\n  UPDATE_TEACHER,\r\n  DELETE_TEACHER\r\n} from \"./types\";\r\n\r\n//COLLECTION ACTIONS\r\n\r\nexport const createCollection = (id, name) => {\r\n  storage.create(id, name);\r\n  let list = storage.getList();\r\n  return {\r\n    type: CREATE_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  return {\r\n    type: SELECT_COLLECTION,\r\n    payload: {\r\n      selectedCollection: storage.getData(id),\r\n      tables: storage.list(id, \"tables\"),\r\n      days: storage.list(id, \"days\"),\r\n      places: storage.list(id, \"places\"),\r\n      times: storage.list(id, \"times\"),\r\n      blocks: storage.list(id, \"blocks\"),\r\n      batches: storage.list(id, \"batches\"),\r\n      subjects: storage.list(id, \"subjects\"),\r\n      teachers: storage.list(id, \"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const copyCollection = (id, newid) => {\r\n  let data = storage.getData(id);\r\n  data.id = newid;\r\n  data.name += \" Copy\";\r\n  storage.create(newid, data.name);\r\n  storage.saveData(newid, data);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  storage.rename(id, newname);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  let deleted = storage.getData(id);\r\n  storage.delete(id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: DELETE_COLLECTION,\r\n    payload: {\r\n      collections: list,\r\n      deleted\r\n    }\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.createItem(data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: CREATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const updateTable = (collectionID, tableID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.updateItem(tableID, data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: UPDATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const deleteTable = (collectionID, tableID) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.deleteItem(tableID);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: DELETE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.createItem(data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: CREATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const updateBlock = (collectionID, blockID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.updateItem(blockID, data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: UPDATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const deleteBlock = (collectionID, blockID) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.deleteItem(blockID);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: DELETE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.createItem(data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: CREATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const updateDay = (collectionID, dayID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.updateItem(dayID, data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: UPDATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = (collectionID, dayID) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.deleteItem(dayID);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: DELETE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.createItem(data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: CREATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const updateTime = (collectionID, timeID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.updateItem(timeID, data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: UPDATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = (collectionID, timeID) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.deleteItem(timeID);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: DELETE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.createItem(data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: CREATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const updatePlace = (collectionID, placeID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.updateItem(placeID, data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: UPDATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = (collectionID, placeID) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.deleteItem(placeID);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: DELETE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.createItem(data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: CREATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const updateBatch = (collectionID, batchID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.updateItem(batchID, data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: UPDATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = (collectionID, batchID) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.deleteItem(batchID);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: DELETE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.createItem(data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: CREATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const updateSubject = (collectionID, subjectID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.updateItem(subjectID, data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: UPDATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = (collectionID, subjectID) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.deleteItem(subjectID);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: DELETE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.createItem(data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: CREATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const updateTeacher = (collectionID, teacherID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.updateItem(teacherID, data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: UPDATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = (collectionID, teacherID) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.deleteItem(teacherID);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: DELETE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\n","export const CREATE_COLLECTION = \"CREATE_COLLECTION\";\r\nexport const SELECT_COLLECTION = \"SELECT_COLLECTION\";\r\nexport const COPY_COLLECTION = \"COPY_COLLECTION\";\r\nexport const RENAME_COLLECTION = \"RENAME_COLLECTION\";\r\nexport const DELETE_COLLECTION = \"DELETE_COLLECTION\";\r\n\r\nexport const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const UPDATE_TABLE = \"UPDATE_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BLOCK = \"CREATE_BLOCK\";\r\nexport const UPDATE_BLOCK = \"UPDATE_BLOCK\";\r\nexport const DELETE_BLOCK = \"DELETE_BLOCK\";\r\n\r\nexport const CREATE_DAY = \"CREATE_DAY\";\r\nexport const UPDATE_DAY = \"UPDATE_DAY\";\r\nexport const DELETE_DAY = \"DELETE_DAY\";\r\n\r\nexport const CREATE_TIME = \"CREATE_TIME\";\r\nexport const UPDATE_TIME = \"UPDATE_TIME\";\r\nexport const DELETE_TIME = \"DELETE_TIME\";\r\n\r\nexport const CREATE_PLACE = \"CREATE_PLACE\";\r\nexport const UPDATE_PLACE = \"UPDATE_PLACE\";\r\nexport const DELETE_PLACE = \"DELETE_PLACE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const UPDATE_BATCH = \"UPDATE_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\r\nexport const UPDATE_SUBJECT = \"UPDATE_SUBJECT\";\r\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\r\n\r\nexport const CREATE_TEACHER = \"CREATE_TEACHER\";\r\nexport const UPDATE_TEACHER = \"UPDATE_TEACHER\";\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport {\r\n  selectCollection,\r\n  createBlock,\r\n  createBatch,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  screen() {\r\n    //Tables , Rows , Columns : Table Items\r\n    let tables = this.props.days;\r\n    let rows = this.props.places;\r\n    let cols = this.props.times;\r\n    //Blocks , Subjects , Teachers : Info Containers\r\n    let blocks = this.props.blocks;\r\n    let subjects = this.props.subjects;\r\n    let teachers = this.props.teachers;\r\n    //Whats in the tables,rows,columns\r\n    let TablesBlockKey = \"day\";\r\n    let RowsBlockKey = \"place\";\r\n    let ColsBlockKey = \"time\";\r\n\r\n    // tables = [\r\n    //   { number: 1, text: \"Monday\" },\r\n    //   { number: 2, text: \"Tuesday\" },\r\n    //   { number: 3, text: \"Wednesday\" }\r\n    // ];\r\n    // rows = [\r\n    //   { number: 1, text: \"Room 1\" },\r\n    //   { number: 2, text: \"Room 2\" },\r\n    //   { number: 3, text: \"Room 3\" }\r\n    // ];\r\n    // cols = [\r\n    //   { number: 1, text: \"8:00\" },\r\n    //   { number: 2, text: \"9:00\" },\r\n    //   { number: 3, text: \"10:00\" }\r\n    // ];\r\n    // subjects = [\r\n    //   { number: 1, text: \"Functional English\" },\r\n    //   { number: 2, text: \"Basic Electronics\" },\r\n    //   { number: 3, text: \"Thomas Calculus\" }\r\n    // ];\r\n    // teachers = [\r\n    //   { number: 1, text: \"Mr Nadeed\" },\r\n    //   { number: 2, text: \"Mis Sabiha\" },\r\n    //   { number: 3, text: \"Thomas Himself\" }\r\n    // ];\r\n\r\n    //Default Display if there is no default display available\r\n    // if (tables.length === 0) {\r\n    //   tables[0] = {\r\n    //     number: 1,\r\n    //     text: TablesBlockKey + \"1\"\r\n    //   };\r\n    // }\r\n    // if (rows.length === 0) {\r\n    //   rows[0] = {\r\n    //     number: 1,\r\n    //     text: RowsBlockKey + \"1\"\r\n    //   };\r\n    // }\r\n    // if (cols.length === 0) {\r\n    //   cols[0] = {\r\n    //     number: 1,\r\n    //     text: ColsBlockKey + \"1\"\r\n    //   };\r\n    // }\r\n\r\n    const userCreate = (x, userParams) => {\r\n      switch (x) {\r\n        case \"block\":\r\n        default:\r\n          let params = {\r\n            batch: 0,\r\n            day: 0,\r\n            time: 0,\r\n            subject: 0,\r\n            teacher: 0,\r\n            text: \"block\"\r\n          };\r\n          Object.assign(params, userParams);\r\n          this.props.createBlock(this.props.selected.id, params);\r\n          break;\r\n        case \"batch\":\r\n          this.props.createBatch(this.props.selected.id, {\r\n            name: \"batch\"\r\n          });\r\n          break;\r\n        case \"day\":\r\n          this.props.createDay(this.props.selected.id, {\r\n            name: \"day\"\r\n          });\r\n          break;\r\n        case \"time\":\r\n          this.props.createTime(this.props.selected.id, {\r\n            name: \"time\"\r\n          });\r\n          break;\r\n        case \"place\":\r\n          this.props.createPlace(this.props.selected.id, {\r\n            name: \"place\"\r\n          });\r\n          break;\r\n        case \"subject\":\r\n          this.props.createSubject(this.props.selected.id, {\r\n            name: \"subject\"\r\n          });\r\n          break;\r\n        case \"teacher\":\r\n          this.props.createTeacher(this.props.selected.id, {\r\n            name: \"teacher\"\r\n          });\r\n          break;\r\n      }\r\n    };\r\n\r\n    const Tables = () => {\r\n      return tables.map(table => {\r\n        return (\r\n          <div key={\"t\" + table.number}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <td>{table.name}</td>\r\n                  {cols.map(col => {\r\n                    return <td key={\"c\" + col.number}>{col.name}</td>;\r\n                  })}\r\n                  <td\r\n                    onClick={() => {\r\n                      userCreate(ColsBlockKey);\r\n                    }}\r\n                  >\r\n                    +\r\n                  </td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rows.map(row => {\r\n                  return (\r\n                    <tr key={\"r\" + row.number}>\r\n                      <td>{row.name}</td>\r\n                      {cols.map(col => {\r\n                        let block = blocks.filter(\r\n                          block =>\r\n                            block[TablesBlockKey] === table.number &&\r\n                            block[RowsBlockKey] === row.number &&\r\n                            block[ColsBlockKey] === col.number\r\n                        );\r\n                        if (block.length === 0) {\r\n                          return (\r\n                            <td\r\n                              onClick={() => {\r\n                                let params = {};\r\n                                params[TablesBlockKey] = table.number;\r\n                                params[RowsBlockKey] = row.number;\r\n                                params[ColsBlockKey] = col.number;\r\n                                userCreate(\"block\", params);\r\n                              }}\r\n                              key={\"b\" + col.number}\r\n                            >\r\n                              +\r\n                            </td>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <td key={\"b\" + col.number}>{block[0].text}</td>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n                <tr>\r\n                  <td\r\n                    onClick={() => {\r\n                      userCreate(RowsBlockKey);\r\n                    }}\r\n                  >\r\n                    +\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <button\r\n              onClick={() => {\r\n                userCreate(TablesBlockKey);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Acadtable</h1>\r\n        <Tables />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.collections.length === 0) {\r\n      return <Welcome />;\r\n    } else if (this.props.selected === null) {\r\n      return (\r\n        <div>\r\n          <span>Please select a collection</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selected: state.SelectedCollection,\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    blocks: state.BlocksList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBlock,\r\n    createBatch,\r\n    createDay,\r\n    createTime,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject,\r\n    selectCollection\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-container\">\r\n        {this.props.list.map(item => {\r\n          let selectClass =\r\n            this.props.selected === item.id ? \"selected-card\" : \"\";\r\n          let selectedItem = this.props.selected === item.id ? true : false;\r\n          return (\r\n            <div key={item.id} className={`table-card card-box ${selectClass}`}>\r\n              <div className=\"card-title\">{item.name}</div>\r\n              <div className=\"buttons-list blue\">\r\n                {this.props.buttons.map(button => {\r\n                  let restrictSelected =\r\n                    button.selected == null ? false : button.selected;\r\n                  if (restrictSelected) {\r\n                    if (selectedItem) {\r\n                      return null;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <button\r\n                      onClick={() => {\r\n                        button.action(item.id);\r\n                      }}\r\n                      key={button.name}\r\n                    >\r\n                      {button.name}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CreateTable extends Component {\r\n  state = {\r\n    form: {\r\n      name: \"\"\r\n    }\r\n  };\r\n  handle = event => {\r\n    event.preventDefault();\r\n    this.props.submit(this.state.form);\r\n  };\r\n  render() {\r\n    if (this.props.display === \"form\") {\r\n      return (\r\n        <form onSubmit={this.handle} className=\"row-block\">\r\n          <label htmlFor=\"name\" className=\"item\">\r\n            {this.props.name} :\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"item\"\r\n            value={this.state.form.name}\r\n            onChange={e => {\r\n              this.setState({\r\n                form: {\r\n                  name: e.target.value\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          <input type=\"submit\" className=\"item\" />\r\n          <button\r\n            onClick={() => {\r\n              this.props.cancel();\r\n            }}\r\n            className=\"item\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <button onClick={this.props.click}>Create A Collection</button>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CreateTable;\r\n","export const rand = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.save(this.state.property);\r\n  }\r\n  render() {\r\n    const field = (keyType, key) => {\r\n      switch (keyType) {\r\n        case \"input\":\r\n        default:\r\n          return (\r\n            <input\r\n              key={key.name + \"inp\"}\r\n              type=\"text\"\r\n              onChange={x => {\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n              style={{ display: \"table-cell\" }}\r\n            />\r\n          );\r\n        case \"select\":\r\n          return (\r\n            <select\r\n              defaultValue={\r\n                this.state.property[key.name] != null\r\n                  ? this.state.property[key.name]\r\n                  : null\r\n              }\r\n              onChange={x => {\r\n                let property = this.state.property;\r\n                property[key.name] = x.target.value;\r\n                this.setState({ property });\r\n              }}\r\n            >\r\n              {key.list.map(item => {\r\n                return (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          );\r\n      }\r\n    };\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"table\" }}>\r\n          <form\r\n            onSubmit={x => {\r\n              x.preventDefault();\r\n              this.props.save(this.state.property);\r\n            }}\r\n          >\r\n            {this.state.keys.map(key => {\r\n              if (key.show != null && !key.show) {\r\n                return null;\r\n              }\r\n              let keyType = key.type != null ? key.type : \"input\";\r\n              return (\r\n                <div key={key.name + key.id} style={{ display: \"table-row\" }}>\r\n                  <label\r\n                    htmlFor={key.name + key.id + \"inp\"}\r\n                    style={{ display: \"table-cell\" }}\r\n                  >\r\n                    {key.name}\r\n                  </label>\r\n                  {field(keyType, key)}\r\n                </div>\r\n              );\r\n            })}\r\n            <div style={{ display: \"table-row\" }}>\r\n              <div style={{ display: \"table-cell\" }} />\r\n              <input\r\n                type=\"submit\"\r\n                style={{ display: \"table-cell\", width: \"100%\" }}\r\n                className=\"btn-red\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BlockEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.save(this.state.property);\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"table\" }}>\r\n          <form\r\n            onSubmit={x => {\r\n              x.preventDefault();\r\n              this.props.save(this.state.property);\r\n            }}\r\n          >\r\n            {this.state.keys.map(key => {\r\n              let show = key.show == null ? true : key.show;\r\n              if (!show) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div key={key.name + key.id} style={{ display: \"table-row\" }}>\r\n                  <label\r\n                    htmlFor={key.name + key.id + \"inp\"}\r\n                    style={{ display: \"table-cell\" }}\r\n                  >\r\n                    {key.name}\r\n                  </label>\r\n                  <input\r\n                    name={key.name + key.id + \"inp\"}\r\n                    type=\"text\"\r\n                    onChange={x => {\r\n                      let newvalue = x.target.value;\r\n                      let property = this.state.property;\r\n                      property[key.name] = newvalue;\r\n                      this.setState({ property });\r\n                    }}\r\n                    disabled={key.locked == null ? false : key.locked}\r\n                    required={key.required == null ? false : key.required}\r\n                    value={\r\n                      this.state.property[key.name] == null\r\n                        ? \"\"\r\n                        : this.state.property[key.name]\r\n                    }\r\n                    style={{ marginBottom: \"5px\", display: \"table-cell\" }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n            <div style={{ display: \"table-row\" }}>\r\n              <div style={{ display: \"table-cell\" }} />\r\n              <input\r\n                type=\"submit\"\r\n                style={{ display: \"table-cell\", width: \"100%\" }}\r\n                className=\"btn-red\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BlockEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.save(this.state.property);\r\n  }\r\n  render() {\r\n    let items = this.props.items;\r\n    let base =\r\n      this.state.property.base != null\r\n        ? this.state.property.base\r\n        : items[0].name;\r\n    let blist = items.filter(i => i.name === base)[0];\r\n    let baseList = blist != null ? blist.list : [];\r\n    let rowsList = items.filter(i => i.name !== base);\r\n    let rowsValue =\r\n      this.state.property.rows != null\r\n        ? this.state.property.rows\r\n        : items[1].name;\r\n    let colsList = rowsList.filter(i => i.name !== rowsValue);\r\n    let property = this.state.property;\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"table\" }}>\r\n          <form\r\n            onSubmit={x => {\r\n              x.preventDefault();\r\n              this.props.save(this.state.property);\r\n            }}\r\n          >\r\n            {this.state.keys.map(key => {\r\n              if (key.show !== undefined && !key.show) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div key={key.name + key.id} style={{ display: \"table-row\" }}>\r\n                  <label\r\n                    htmlFor={key.name + key.id + \"inp\"}\r\n                    style={{ display: \"table-cell\" }}\r\n                  >\r\n                    {key.name}\r\n                  </label>\r\n                  <input\r\n                    name={key.name + key.id + \"inp\"}\r\n                    type=\"text\"\r\n                    onChange={x => {\r\n                      let newvalue = x.target.value;\r\n                      let property = this.state.property;\r\n                      property[key.name] = newvalue;\r\n                      this.setState({ property });\r\n                    }}\r\n                    disabled={key.locked == null ? false : key.locked}\r\n                    required={key.required == null ? false : key.required}\r\n                    value={\r\n                      this.state.property[key.name] == null\r\n                        ? \"\"\r\n                        : this.state.property[key.name]\r\n                    }\r\n                    style={{ display: \"table-cell\" }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n            <div style={{ display: \"table-row\" }}>\r\n              <label htmlFor=\"base\" style={{ display: \"table-cell\" }}>\r\n                Base\r\n              </label>\r\n              <select\r\n                name=\"base\"\r\n                onChange={x => {\r\n                  this.setState({\r\n                    property: { ...property, base: x.target.value }\r\n                  });\r\n                }}\r\n                style={{ display: \"table-cell\" }}\r\n                defaultValue={\r\n                  this.state.property.base != null\r\n                    ? this.state.property.base\r\n                    : null\r\n                }\r\n              >\r\n                {items.map(item => {\r\n                  return (\r\n                    <option key={item.name} value={item.name}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n              <select\r\n                style={{ display: \"table-cell\" }}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    property: { ...property, baseValue: x.target.value }\r\n                  });\r\n                }}\r\n                defaultValue={\r\n                  this.state.property.baseValue != null\r\n                    ? this.state.property.baseValue\r\n                    : null\r\n                }\r\n              >\r\n                {baseList.map(item => {\r\n                  return (\r\n                    <option key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div style={{ display: \"table-row\" }}>\r\n              <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n                Rows\r\n              </label>\r\n              <select\r\n                id=\"rows\"\r\n                style={{ display: \"table-cell\" }}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    property: { ...property, rows: x.target.value }\r\n                  });\r\n                }}\r\n                defaultValue={\r\n                  this.state.property.rows != null\r\n                    ? this.state.property.rows\r\n                    : null\r\n                }\r\n              >\r\n                {rowsList.map(item => {\r\n                  return (\r\n                    <option key={item.name} value={item.name}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div style={{ display: \"table-row\" }}>\r\n              <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n                Columns\r\n              </label>\r\n              <select\r\n                style={{ display: \"table-cell\" }}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    property: { ...property, cols: x.target.value }\r\n                  });\r\n                }}\r\n                defaultValue={\r\n                  this.state.property.cols != null\r\n                    ? this.state.property.cols\r\n                    : null\r\n                }\r\n              >\r\n                {colsList.map(item => {\r\n                  return (\r\n                    <option key={item.name} value={item.name}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div style={{ display: \"table-row\", marginTop: \"5px\" }}>\r\n              <div style={{ display: \"table-cell\" }} />\r\n              <input\r\n                type=\"submit\"\r\n                style={{ display: \"table-cell\", width: \"100%\" }}\r\n                className=\"btn-red\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { rand } from \"../../../actions/helpers\";\r\n\r\nimport FormEditor from \"./FormEditor\";\r\nimport BlockEditor from \"./BlockEditor\";\r\nimport TableEditor from \"./TableEditor\";\r\n\r\nclass Area extends Component {\r\n  state = {\r\n    array: this.props.array,\r\n    name: this.props.name,\r\n    heading: this.props.heading,\r\n    editor: this.props.editor || \"FormEditor\",\r\n    showEditorFor: null\r\n  };\r\n  addProperty() {\r\n    let property = {};\r\n    this.props.keys.map(key => {\r\n      if (key.name === \"name\") {\r\n        property[key.name] = this.state.name + this.state.array.length;\r\n      } else if (key.name === \"number\") {\r\n        property[key.name] = this.state.array.length;\r\n      } else {\r\n        property[key.name] = key.default == null ? null : key.default;\r\n      }\r\n      return null;\r\n    });\r\n    property.id = rand(this.state.name);\r\n    this.setState({ array: [...this.state.array, property] });\r\n    this.props.createActionCreator(property);\r\n  }\r\n  editor = obj => {\r\n    if (this.state.showEditorFor === obj) {\r\n      switch (this.state.editor) {\r\n        case \"FormEditor\":\r\n        default:\r\n          return (\r\n            <FormEditor\r\n              property={obj}\r\n              keys={this.props.keys}\r\n              save={this.save}\r\n            />\r\n          );\r\n        case \"TableEditor\":\r\n          return (\r\n            <TableEditor\r\n              property={obj}\r\n              items={this.props.items}\r\n              keys={this.props.keys}\r\n              save={this.save}\r\n            />\r\n          );\r\n        case \"BlockEditor\":\r\n          return (\r\n            <BlockEditor\r\n              property={obj}\r\n              keys={this.props.keys}\r\n              save={this.save}\r\n            />\r\n          );\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  deleteProperty = obj => {\r\n    this.props.deleteActionCreator(obj.id);\r\n    let array = this.state.array.filter(item => item.id !== obj.id);\r\n    this.setState({ array: array });\r\n  };\r\n  save = obj => {\r\n    console.log(\"Saving Changes into Storage\");\r\n    this.props.updateActionCreator(obj.id, obj);\r\n    if (this.state.showEditorFor === obj) {\r\n      this.setState({ showEditorFor: null });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>{this.state.heading}</h2>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.addProperty();\r\n              }}\r\n              className=\"btn-red\"\r\n            >\r\n              Add\r\n            </button>\r\n            <ul style={{ padding: \"0px\" }}>\r\n              {this.state.array.map(obj => {\r\n                return (\r\n                  <li\r\n                    key={obj.id}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        property: obj\r\n                      })\r\n                    }\r\n                    className=\"area-item\"\r\n                  >\r\n                    <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                      <div>\r\n                        <h3>{obj.name}</h3>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <div className=\"buttons-list\">\r\n                          <button\r\n                            onClick={() => {\r\n                              this.setState({ showEditorFor: obj });\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button onClick={() => this.deleteProperty(obj)}>\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {this.editor(obj)}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Area;\r\n","import React, { Component } from \"react\";\r\nimport storage from \"../../engine/storage\";\r\n\r\nimport Area from \"./areas\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBlock,\r\n  updateBlock,\r\n  deleteBlock,\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  createDay,\r\n  updateDay,\r\n  deleteDay,\r\n  createTime,\r\n  updateTime,\r\n  deleteTime,\r\n  createPlace,\r\n  updatePlace,\r\n  deletePlace,\r\n  createBatch,\r\n  updateBatch,\r\n  deleteBatch,\r\n  createSubject,\r\n  updateSubject,\r\n  deleteSubject,\r\n  createTeacher,\r\n  updateTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass EditCollection extends Component {\r\n  state = {\r\n    ...storage.getData(this.props.collectionID),\r\n    editArea: \"lectures\"\r\n  };\r\n  updateState = () => {\r\n    this.setState({ ...storage.getData(this.props.collectionID) });\r\n  };\r\n  render() {\r\n    const UserArea = () => {\r\n      switch (this.state.editArea) {\r\n        case \"tables\":\r\n          return (\r\n            <Area\r\n              array={this.state.tables}\r\n              createActionCreator={data => {\r\n                this.props.createTable(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTable(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTable(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"table\"\r\n              editor=\"TableEditor\"\r\n              heading=\"Tables\"\r\n              items={[\r\n                { name: \"days\", list: this.state.days },\r\n                { name: \"times\", list: this.state.times },\r\n                { name: \"batches\", list: this.state.batches },\r\n                { name: \"places\", list: this.state.places },\r\n                { name: \"subjects\", list: this.state.subjects },\r\n                { name: \"teachers\", list: this.state.teachers }\r\n              ]}\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n                // { name: \"options\" },\r\n                // { name: \"settings\" }\r\n              ]}\r\n            />\r\n          );\r\n        case \"lectures\":\r\n        default:\r\n          return (\r\n            <Area\r\n              array={this.state.blocks}\r\n              createActionCreator={data => {\r\n                this.props.createBlock(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBlock(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBlock(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"block\"\r\n              heading=\"Lectures\"\r\n              keys={[\r\n                {\r\n                  name: \"text\",\r\n                  required: true,\r\n                  locked: true,\r\n                  show: false\r\n                },\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                },\r\n                { name: \"customText\" },\r\n                { name: \"day\", type: \"select\", list: this.state.days },\r\n                { name: \"place\", type: \"select\", list: this.state.places },\r\n                { name: \"time\", type: \"select\", list: this.state.times },\r\n                { name: \"batch\", type: \"select\", list: this.state.batches },\r\n                { name: \"subject\", type: \"select\", list: this.state.subjects },\r\n                { name: \"teacher\", type: \"select\", list: this.state.teachers }\r\n              ]}\r\n            />\r\n          );\r\n        case \"days\":\r\n          return (\r\n            <Area\r\n              array={this.state.days}\r\n              createActionCreator={data => {\r\n                this.props.createDay(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateDay(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteDay(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"day\"\r\n              heading=\"Days\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"times\":\r\n          return (\r\n            <Area\r\n              array={this.state.times}\r\n              createActionCreator={data => {\r\n                this.props.createTime(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTime(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTime(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"time\"\r\n              heading=\"Times\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"places\":\r\n          return (\r\n            <Area\r\n              array={this.state.places}\r\n              createActionCreator={data => {\r\n                this.props.createPlace(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updatePlace(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deletePlace(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"place\"\r\n              heading=\"Places\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"batches\":\r\n          return (\r\n            <Area\r\n              array={this.state.batches}\r\n              createActionCreator={data => {\r\n                this.props.createBatch(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBatch(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBatch(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"batch\"\r\n              heading=\"Batches\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"subjects\":\r\n          return (\r\n            <Area\r\n              array={this.state.subjects}\r\n              createActionCreator={data => {\r\n                this.props.createSubject(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateSubject(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteSubject(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"subject\"\r\n              heading=\"Subjects\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"teachers\":\r\n          return (\r\n            <Area\r\n              array={this.state.teachers}\r\n              createActionCreator={data => {\r\n                this.props.createTeacher(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTeacher(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTeacher(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"teacher\"\r\n              heading=\"Teachers\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n      }\r\n    };\r\n    let MenuItems = [\r\n      \"lectures\",\r\n      \"tables\",\r\n      \"batches\",\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"buttons-list\">\r\n          <button onClick={this.props.cancel}>Back</button>\r\n        </div>\r\n        <h1>Collection : {this.state.name}</h1>\r\n        <div>\r\n          {MenuItems.map(item => {\r\n            let activeClass = \"\";\r\n            if (item === this.state.editArea) {\r\n              activeClass = \"btn-red\";\r\n            }\r\n            return (\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ editArea: item });\r\n                }}\r\n                style={{ textTransform: \"capitalize\", margin: \"2px\" }}\r\n                className={activeClass}\r\n                key={item}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <UserArea />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBlock,\r\n    updateBlock,\r\n    deleteBlock,\r\n    createTable,\r\n    updateTable,\r\n    deleteTable,\r\n    createDay,\r\n    updateDay,\r\n    deleteDay,\r\n    createTime,\r\n    updateTime,\r\n    deleteTime,\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace,\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch,\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject,\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(EditCollection);\r\n","import React, { Component } from \"react\";\r\n\r\nimport List from \"./List\";\r\nimport Create from \"./Create\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  copyCollection,\r\n  renameCollection,\r\n  deleteCollection\r\n} from \"../../actions\";\r\n\r\nimport { rand } from \"../../actions/helpers\";\r\n\r\nclass Collections extends Component {\r\n  state = {\r\n    createForm: false,\r\n    editCollection: null\r\n  };\r\n  render() {\r\n    let list = this.props.collections;\r\n\r\n    //Collection Buttons\r\n    let buttons = [];\r\n    buttons.push({\r\n      name: \"select\",\r\n      action: id => {\r\n        this.props.selectCollection(id);\r\n      },\r\n      selected: true\r\n    });\r\n    buttons.push({\r\n      name: \"copy\",\r\n      action: id => {\r\n        this.props.copyCollection(id, rand(\"collection\"));\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"edit\",\r\n      action: id => {\r\n        this.setState({\r\n          editCollection: id\r\n        });\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"delete\",\r\n      action: id => {\r\n        this.props.deleteCollection(id);\r\n      }\r\n    });\r\n\r\n    if (this.state.editCollection != null) {\r\n      return (\r\n        <Edit\r\n          collectionID={this.state.editCollection}\r\n          cancel={() => {\r\n            this.setState({ editCollection: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Collections</h1>\r\n        <Create\r\n          name=\"collection\"\r\n          display={this.state.createForm ? \"form\" : \"button\"}\r\n          click={() => {\r\n            this.setState({ createForm: true });\r\n          }}\r\n          submit={values => {\r\n            this.props.createCollection(rand(\"collection\"), values.name);\r\n            this.setState({ createForm: false });\r\n          }}\r\n          cancel={() => {\r\n            this.setState({ createForm: false });\r\n          }}\r\n        />\r\n        <List\r\n          selected={\r\n            this.props.selectedCollection != null\r\n              ? this.props.selectedCollection.id\r\n              : null\r\n          }\r\n          list={list}\r\n          buttons={buttons}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selectedCollection: state.SelectedCollection\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    renameCollection,\r\n    deleteCollection\r\n  }\r\n)(Collections);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n//Header Import\r\nimport Header from \"./Header\";\r\n\r\n//Display Import\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Collections from \"./collections\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n\r\n            <Route path=\"/collections\" exact component={Collections} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport CollectionsList from \"./CollectionsList\";\r\nimport SelectedCollection from \"./SelectedCollection\";\r\nimport TablesList from \"./TablesList\";\r\nimport PlacesList from \"./PlacesList\";\r\nimport DaysList from \"./DaysList\";\r\nimport TimesList from \"./TimesList\";\r\nimport BlocksList from \"./BlocksList\";\r\nimport SubjectsList from \"./SubjectsList\";\r\nimport TeachersList from \"./TeachersList\";\r\n\r\nexport default combineReducers({\r\n  CollectionsList,\r\n  SelectedCollection,\r\n  TablesList,\r\n  PlacesList,\r\n  DaysList,\r\n  TimesList,\r\n  BlocksList,\r\n  SubjectsList,\r\n  TeachersList\r\n});\r\n","import {\r\n  CREATE_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION\r\n} from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = storage.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_COLLECTION:\r\n    case RENAME_COLLECTION:\r\n    case DELETE_COLLECTION:\r\n      return action.payload.collections;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, DELETE_COLLECTION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n      return action.payload.selectedCollection || null;\r\n    case DELETE_COLLECTION:\r\n      if (state !== null && action.payload.deleted.id === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TABLE:\r\n      return action.payload.tables.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_PLACE:\r\n    case UPDATE_PLACE:\r\n    case DELETE_PLACE:\r\n      return action.payload.places.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_DAY:\r\n    case UPDATE_DAY:\r\n    case DELETE_DAY:\r\n      return action.payload.days.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TIME } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TIME:\r\n      return action.payload.times.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_BLOCK } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BLOCK:\r\n      return action.payload.blocks.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_SUBJECT:\r\n    case UPDATE_SUBJECT:\r\n    case DELETE_SUBJECT:\r\n      return action.payload.subjects.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TEACHER } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TEACHER:\r\n      return action.payload.teachers.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}