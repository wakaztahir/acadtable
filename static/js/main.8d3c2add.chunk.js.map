{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/Welcome.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/App.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","id","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","selectCollection","init","type","payload","getDataKey","createLecture","lecture","Welcome","state","ftDisplay","collectionName","collectionDesc","_this2","react_default","a","createElement","onClick","setState","onSubmit","preventDefault","props","createCollection","name","desc","className","htmlFor","onChange","target","value","placeholder","required","_this3","displayCreate","disabled","exampleCollection","_this4","map","coll","copyCollection","deleteCollection","firstTime","screen","Component","connect","Collections","collection","set","newid","get","Example","deleted","delete","Screen","objector","table","base","filter","i","baseValue","rows","cols","col","row","block","params","subject","st","batch","bh","teacher","tr","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","display","creator","action","_this2$state$creator","createTable","_this2$state$creator2","updateTable","defaultValue","style","textTransform","objectSpread","item","marginRight","deleteTable","quicker","margin","baseName","fontWeight","tableID","day","time","place","mode","updateLecture","list","x","y","tm","pc","dy","deleteLecture","lectureID","createBatch","updateBatch","deleteBatch","batchID","createDay","updateDay","deleteDay","dayID","createTime","updateTime","deleteTime","timeID","createPlace","updatePlace","deletePlace","placeID","createSubject","updateSubject","deleteSubject","subjectID","createTeacher","updateTeacher","deleteTeacher","teacherID","Display","display_Screen","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","ref","actor","User","App","components_Welcome","combineReducers","concat","toConsumableArray","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.8d3c2add.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    id: \"example\",\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = data => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = data => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = data => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = data => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = data => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = data => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = data => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection\r\n} from \"../actions\";\r\n\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return objector.tables.map(table => {\r\n      let base = objector[table.base].filter(i => i.id === table.baseValue)[0];\r\n      let rows = objector[table.rows];\r\n      let cols = objector[table.cols];\r\n      return (\r\n        <div key={table.id}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>{base != null ? base.name : null}</td>\r\n                {cols.map(col => {\r\n                  return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map(row => {\r\n                return (\r\n                  <tr key={\"r\" + row.id}>\r\n                    <td>{row.name}</td>\r\n                    {cols.map(col => {\r\n                      let block = objector[\"lectures\"].filter(\r\n                        block =>\r\n                          block[listKey(table.base)] === base.id &&\r\n                          block[listKey(table.rows)] === row.id &&\r\n                          block[listKey(table.cols)] === col.id\r\n                      );\r\n                      if (block.length === 0) {\r\n                        // if (this.state.mode === \"print\") {\r\n                        //   return <td key={\"emp\" + col.id} />;\r\n                        // }\r\n                        return (\r\n                          <td\r\n                            onClick={() => {\r\n                              let params = {};\r\n                              params[listKey(table.base)] = base.id;\r\n                              params[listKey(table.rows)] = row.id;\r\n                              params[listKey(table.cols)] = col.id;\r\n                              //this.props.displayAddModal(params);\r\n                            }}\r\n                            key={\"b\" + col.id}\r\n                          >\r\n                            <button>+</button>\r\n                          </td>\r\n                        );\r\n                      } else {\r\n                        let lecture = block[0];\r\n                        let subject = this.props.subjects.filter(\r\n                          st => st.id === lecture.subject\r\n                        )[0].name;\r\n                        let batch = this.props.batches.filter(\r\n                          bh => bh.id === lecture.batch\r\n                        )[0].name;\r\n                        let teacher = this.props.teachers.filter(\r\n                          tr => tr.id === lecture.teacher\r\n                        )[0].name;\r\n                        return (\r\n                          <td key={\"b\" + col.id} className=\"table-block\">\r\n                            <span>{batch}</span>\r\n                            <span>{subject}</span>\r\n                            <span>{teacher}</span>\r\n                          </td>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\n// downloadPDF() {\r\n//   let screen = this.refs.screen;\r\n//   let doc = new jsPDF({ orientation: \"landscape\" });\r\n//   doc.fromHTML(screen);\r\n//   doc.save(\"file.pdf\");\r\n// }\r\n// downloadPNG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toPng(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.href = dataUrl;\r\n//       link.download = \"file.png\";\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to PNG Image\");\r\n//     });\r\n// }\r\n// downloadJPEG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toJpeg(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.download = \"file.jpeg\";\r\n//       link.href = dataUrl;\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to JPEG Image\");\r\n//     });\r\n// }\r\n// componentDidUpdate() {\r\n//   if (this.state.download) {\r\n//     switch (this.state.downloadType) {\r\n//       case \"pdf\":\r\n//       default:\r\n//         this.downloadPDF();\r\n//         break;\r\n//       case \"png\":\r\n//         this.downloadPNG();\r\n//         break;\r\n//       case \"jpeg\":\r\n//         this.downloadJPEG();\r\n//         break;\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.rows &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                defaultValue={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {objector[this.state.creator.base].map(item => {\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              defaultValue={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              defaultValue={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              style={{ marginRight: \"1em\" }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.props.deleteTable(this.state.creator.id);\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            if (base.length === 0) {\r\n              console.warning(\"Table Base Not Found\", table);\r\n              return null;\r\n            }\r\n            let baseName = base[0].name;\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>{baseName}</strong> Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createLecture, updateLecture, deleteLecture } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let {\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.createLecture({\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            } else {\r\n              let {\r\n                id,\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.updateLecture(id, {\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          {Object.keys(objector).map(key => {\r\n            let list = objector[key];\r\n            return (\r\n              <div className=\"form-row\" key={key}>\r\n                <label\r\n                  htmlFor={key + \"sct\"}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {key}\r\n                </label>\r\n                <select\r\n                  name={key}\r\n                  id={key + \"sct\"}\r\n                  value={this.state.creator[key]}\r\n                  required={true}\r\n                  onChange={x => {\r\n                    let y = {};\r\n                    y[key] = x.target.value;\r\n                    this.setState({ creator: { ...this.state.creator, ...y } });\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.lectures.map(lecture => {\r\n            let subject = this.props.subjects.filter(\r\n              st => st.id === lecture.subject\r\n            )[0].name;\r\n            let batch = this.props.batches.filter(\r\n              bh => bh.id === lecture.batch\r\n            )[0].name;\r\n            let teacher = this.props.teachers.filter(\r\n              tr => tr.id === lecture.teacher\r\n            )[0].name;\r\n            let time = this.props.times.filter(tm => tm.id === lecture.time)[0]\r\n              .name;\r\n            let place = this.props.places.filter(\r\n              pc => pc.id === lecture.place\r\n            )[0].name;\r\n            let day = this.props.days.filter(dy => dy.id === lecture.day)[0]\r\n              .name;\r\n            return (\r\n              <div key={lecture.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  {subject != null ? <span>{subject}</span> : null}\r\n                  {batch != null ? <span>{batch}</span> : null}\r\n                  {teacher != null ? <span>{teacher}</span> : null}\r\n                  {time != null ? <span>{time}</span> : null}\r\n                  {place != null ? <span>{place}</span> : null}\r\n                  {day != null ? <span>{day}</span> : null}\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...lecture,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteLecture(lecture.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createBatch, updateBatch, deleteBatch } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Batch\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map(batch => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createDay, updateDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Day\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map(day => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTime, updateTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Time\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map(time => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createPlace, updatePlace, deletePlace } from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Place\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map(place => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createSubject, updateSubject, deleteSubject } from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Subject\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map(subject => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTeacher, updateTeacher, deleteTeacher } from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Teacher\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map(teacher => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\n// import Modal from \"../Modal\";\r\n// import FormEditor from \"../collections/areas/FormEditor\";\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import domtoimage from \"dom-to-image\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\"\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen />;\r\n      case \"tables\":\r\n        return <Tables />;\r\n      case \"lectures\":\r\n        return <Lectures />;\r\n      case \"batches\":\r\n        return <Batches />;\r\n      case \"days\":\r\n        return <Days />;\r\n      case \"times\":\r\n        return <Times />;\r\n      case \"places\":\r\n        return <Places />;\r\n      case \"subjects\":\r\n        return <Subjects />;\r\n      case \"teachers\":\r\n        return <Teachers />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div ref=\"screen\" className=\"full-wrapper flex-center\">\r\n          {this.actor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    if (this.props.user == null) {\r\n      return <Welcome />;\r\n    } else {\r\n      return <Display />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}