{"version":3,"sources":["components/Header.js","components/display/Welcome.js","engine/storage.js","actions/index.js","actions/types.js","components/display/index.js","components/collections/List.js","components/collections/Create.js","components/collections/areas/index.js","components/collections/Edit.js","components/collections/index.js","components/App.js","reducers/index.js","reducers/CollectionsList.js","reducers/SelectedCollection.js","reducers/TablesList.js","reducers/PlacesList.js","reducers/DaysList.js","reducers/TimesList.js","reducers/BlocksList.js","reducers/SubjectsList.js","reducers/TeachersList.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","storage","id","name","list","getList","creation","data","push","saveList","saveData","sessionStorage","getItem","JSON","parse","ex","arguments","length","undefined","setItem","stringify","newname","newlist","map","item","filter","removeItem","type","tableData","getData","ListFunctions","all","this","itemID","createItem","Object","assign","deleteItem","rand","operator","start","end","Math","random","toString","split","substr","selectCollectionById","payload","selectedCollection","tables","days","places","times","blocks","batches","subjects","teachers","Display","_this","props","rows","cols","no","text","TablesBlockKey","RowsBlockKey","ColsBlockKey","userCreate","x","userParams","params","batch","day","time","subject","teacher","createBlock","selected","createBatch","createDay","createTime","createPlace","createSubject","createTeacher","table","key","col","onClick","row","block","collections","display_Welcome","screen","connect","state","CollectionsList","SelectedCollection","TablesList","DaysList","PlacesList","TimesList","BlocksList","BatchesList","SubjectsList","TeachersList","collectionID","blockID","select","List","className","selectClass","selectedItem","concat","buttons","button","action","CreateTable","form","handle","event","preventDefault","submit","_this2","display","onSubmit","htmlFor","value","onChange","e","setState","target","cancel","click","Area","array","keys","vals","obj","EditCollection","collection","objectSpread","areas","Collections","createForm","editCollection","delete","Edit","Create","values","create","collections_List","mapDispatchToProps","rename","deleted","App","HashRouter","Route","path","component","exact","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.ccf497ed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/collections\">\r\n            <button>Collections</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Welcome !</span>\r\n        <p>\r\n          You have't created any collections\r\n          <br />\r\n          <Link to=\"/collections\">Click Here</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","class storage {\r\n  static create(id, name) {\r\n    let list = storage.getList();\r\n    let creation = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id\r\n    };\r\n    list.push(creation);\r\n    storage.saveList(list);\r\n    storage.saveData(id, data);\r\n  }\r\n  static getList() {\r\n    let list = sessionStorage.getItem(\"collections\") || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  static saveList(list = []) {\r\n    sessionStorage.setItem(\"collections\", JSON.stringify(list));\r\n  }\r\n\r\n  static getData(id) {\r\n    let data = sessionStorage.getItem(\"c-\" + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  static saveData(id, data = {}) {\r\n    sessionStorage.setItem(\"c-\" + id, JSON.stringify(data));\r\n  }\r\n  static rename(id, newname) {\r\n    let list = storage.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    storage.saveList(newlist);\r\n  }\r\n  static delete(id) {\r\n    let list = storage.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    storage.saveList(newlist);\r\n    sessionStorage.removeItem(\"c-\" + id);\r\n  }\r\n\r\n  //Main User Functions\r\n\r\n  static list(id, type) {\r\n    let tableData = storage.getData(id);\r\n    if (tableData) {\r\n      if (!tableData[type]) {\r\n        tableData[type] = [];\r\n        storage.saveData(id, tableData);\r\n      }\r\n      let ListFunctions = {\r\n        all: function() {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          return list;\r\n        },\r\n        getItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let items = list.filter(item => item.id === itemID);\r\n          return items[0];\r\n        },\r\n        createItem: function(itemID, data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let item = {\r\n            id: itemID\r\n          };\r\n          Object.assign(item, data);\r\n          list.push(item);\r\n          storage.saveData(this.id, tableData);\r\n          return item;\r\n        },\r\n        deleteItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          tableData[this.type] = list.filter(item => item.id !== itemID);\r\n          storage.saveData(this.id, tableData);\r\n        }\r\n      };\r\n      ListFunctions.id = id;\r\n      ListFunctions.type = type;\r\n      return ListFunctions;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../engine/storage\";\r\nimport {\r\n  CREATE_COLLECTION,\r\n  SELECT_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION,\r\n  CREATE_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BLOCK,\r\n  DELETE_BLOCK,\r\n  CREATE_DAY,\r\n  DELETE_DAY,\r\n  CREATE_TIME,\r\n  DELETE_TIME,\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  CREATE_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_SUBJECT,\r\n  DELETE_SUBJECT,\r\n  CREATE_TEACHER,\r\n  DELETE_TEACHER\r\n} from \"./types\";\r\n\r\n//HELPER FUNCTIONS\r\n\r\nconst rand = (operator = \"x\", start = 0, end = 7) => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\n//COLLECTION ACTIONS\r\n\r\nexport const createCollectionByName = name => {\r\n  let id = rand(\"t\", 0, 5);\r\n  storage.create(id, name);\r\n  let list = storage.getList();\r\n  return {\r\n    type: CREATE_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const selectCollectionById = id => {\r\n  return {\r\n    type: SELECT_COLLECTION,\r\n    payload: {\r\n      selectedCollection: storage.getData(id),\r\n      tables: storage.list(id, \"tables\"),\r\n      days: storage.list(id, \"days\"),\r\n      places: storage.list(id, \"places\"),\r\n      times: storage.list(id, \"times\"),\r\n      blocks: storage.list(id, \"blocks\"),\r\n      batches: storage.list(id, \"batches\"),\r\n      subjects: storage.list(id, \"subjects\"),\r\n      teachers: storage.list(id, \"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const renameCollectionById = (id, newname) => {\r\n  storage.rename(id, newname);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const deleteCollectionById = id => {\r\n  let deleted = storage.getData(id);\r\n  storage.delete(id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: DELETE_COLLECTION,\r\n    payload: {\r\n      collections: list,\r\n      deleted\r\n    }\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  let tableID = rand(\"tl\", 1, 9);\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.createItem(tableID, data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: CREATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const deleteTableById = (collectionID, tableID) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.deleteItem(tableID);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: DELETE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  let blockID = rand(\"bk\", 1, 9);\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.createItem(blockID, data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: CREATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const deleteBlockById = (collectionID, blockID) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.deleteItem(blockID);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: DELETE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.createItem(rand(\"dy\"), Object.assign(data, { no: days.all().length }));\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: CREATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const deleteDayById = (collectionID, dayID) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.deleteItem(dayID);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: DELETE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.createItem(rand(\"tm\"), Object.assign(data, { no: times.all().length }));\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: CREATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const deleteTimeById = (collectionID, timeID) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.deleteItem(timeID);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: DELETE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.createItem(\r\n    rand(\"pl\"),\r\n    Object.assign(data, { no: places.all().length })\r\n  );\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: CREATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const deletePlaceById = (collectionID, placeID) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.deleteItem(placeID);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: DELETE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.createItem(\r\n    rand(\"bh\"),\r\n    Object.assign(data, { no: batches.all().length })\r\n  );\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: CREATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const deleteBatchById = (collectionID, batchID) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.deleteItem(batchID);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: DELETE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.createItem(\r\n    rand(\"st\"),\r\n    Object.assign(data, { no: subjects.all().length })\r\n  );\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: CREATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const deleteSubjectById = (collectionID, subjectID) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.deleteItem(subjectID);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: DELETE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.createItem(\r\n    rand(\"tr\"),\r\n    Object.assign(data, { no: teachers.all().length })\r\n  );\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: CREATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacherById = (collectionID, teacherID) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.deleteItem(teacherID);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: DELETE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\n","export const CREATE_COLLECTION = \"CREATE_COLLECTION\";\r\nexport const SELECT_COLLECTION = \"SELECT_COLLECTION\";\r\nexport const RENAME_COLLECTION = \"RENAME_COLLECTION\";\r\nexport const DELETE_COLLECTION = \"DELETE_COLLECTION\";\r\n\r\nexport const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BLOCK = \"CREATE_BLOCK\";\r\nexport const DELETE_BLOCK = \"DELETE_BLOCK\";\r\n\r\nexport const CREATE_DAY = \"CREATE_DAY\";\r\nexport const DELETE_DAY = \"DELETE_DAY\";\r\n\r\nexport const CREATE_TIME = \"CREATE_TIME\";\r\nexport const DELETE_TIME = \"DELETE_TIME\";\r\n\r\nexport const CREATE_PLACE = \"CREATE_PLACE\";\r\nexport const DELETE_PLACE = \"DELETE_PLACE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\r\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\r\n\r\nexport const CREATE_TEACHER = \"CREATE_TEACHER\";\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport {\r\n  selectCollectionById,\r\n  createBlock,\r\n  createBatch,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  screen() {\r\n    //Tables , Rows , Columns : Table Items\r\n    let tables = this.props.days;\r\n    let rows = this.props.places;\r\n    let cols = this.props.times;\r\n    //Blocks , Subjects , Teachers : Info Containers\r\n    let blocks = this.props.blocks;\r\n    let subjects = this.props.subjects;\r\n    let teachers = this.props.teachers;\r\n    //Whats in the tables,rows,columns\r\n    let TablesBlockKey = \"day\";\r\n    let RowsBlockKey = \"place\";\r\n    let ColsBlockKey = \"time\";\r\n\r\n    // tables = [\r\n    //   { no: 1, text: \"Monday\" },\r\n    //   { no: 2, text: \"Tuesday\" },\r\n    //   { no: 3, text: \"Wednesday\" }\r\n    // ];\r\n    // rows = [\r\n    //   { no: 1, text: \"Room 1\" },\r\n    //   { no: 2, text: \"Room 2\" },\r\n    //   { no: 3, text: \"Room 3\" }\r\n    // ];\r\n    // cols = [\r\n    //   { no: 1, text: \"8:00\" },\r\n    //   { no: 2, text: \"9:00\" },\r\n    //   { no: 3, text: \"10:00\" }\r\n    // ];\r\n    // subjects = [\r\n    //   { no: 1, text: \"Functional English\" },\r\n    //   { no: 2, text: \"Basic Electronics\" },\r\n    //   { no: 3, text: \"Thomas Calculus\" }\r\n    // ];\r\n    // teachers = [\r\n    //   { no: 1, text: \"Mr Nadeed\" },\r\n    //   { no: 2, text: \"Mis Sabiha\" },\r\n    //   { no: 3, text: \"Thomas Himself\" }\r\n    // ];\r\n\r\n    //Default Display if there is no default display available\r\n    if (tables.length === 0) {\r\n      tables[0] = {\r\n        no: 1,\r\n        text: TablesBlockKey + \"1\"\r\n      };\r\n    }\r\n    if (rows.length === 0) {\r\n      rows[0] = {\r\n        no: 1,\r\n        text: RowsBlockKey + \"1\"\r\n      };\r\n    }\r\n    if (cols.length === 0) {\r\n      cols[0] = {\r\n        no: 1,\r\n        text: ColsBlockKey + \"1\"\r\n      };\r\n    }\r\n\r\n    const userCreate = (x, userParams) => {\r\n      switch (x) {\r\n        case \"block\":\r\n        default:\r\n          let params = {\r\n            batch: 0,\r\n            day: 0,\r\n            time: 0,\r\n            subject: 0,\r\n            teacher: 0,\r\n            text: \"block\"\r\n          };\r\n          Object.assign(params, userParams);\r\n          this.props.createBlock(this.props.selected.id, params);\r\n          break;\r\n        case \"batch\":\r\n          this.props.createBatch(this.props.selected.id, {\r\n            text: \"batch\"\r\n          });\r\n          break;\r\n        case \"day\":\r\n          this.props.createDay(this.props.selected.id, {\r\n            text: \"day\"\r\n          });\r\n          break;\r\n        case \"time\":\r\n          this.props.createTime(this.props.selected.id, {\r\n            text: \"time\"\r\n          });\r\n          break;\r\n        case \"place\":\r\n          this.props.createPlace(this.props.selected.id, {\r\n            text: \"place\"\r\n          });\r\n          break;\r\n        case \"subject\":\r\n          this.props.createSubject(this.props.selected.id, {\r\n            text: \"subject\"\r\n          });\r\n          break;\r\n        case \"teacher\":\r\n          this.props.createTeacher(this.props.selected.id, {\r\n            text: \"teacher\"\r\n          });\r\n          break;\r\n      }\r\n    };\r\n\r\n    const Tables = () => {\r\n      return tables.map(table => {\r\n        return (\r\n          <div key={\"t\" + table.no}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <td>{table.text}</td>\r\n                  {cols.map(col => {\r\n                    return <td key={\"c\" + col.no}>{col.text}</td>;\r\n                  })}\r\n                  <td\r\n                    onClick={() => {\r\n                      userCreate(ColsBlockKey);\r\n                    }}\r\n                  >\r\n                    +\r\n                  </td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rows.map(row => {\r\n                  return (\r\n                    <tr key={\"r\" + row.no}>\r\n                      <td>{row.text}</td>\r\n                      {cols.map(col => {\r\n                        let block = blocks.filter(\r\n                          block =>\r\n                            block[TablesBlockKey] === table.no &&\r\n                            block[RowsBlockKey] === row.no &&\r\n                            block[ColsBlockKey] === col.no\r\n                        );\r\n                        if (block.length === 0) {\r\n                          return (\r\n                            <td\r\n                              onClick={() => {\r\n                                let params = {};\r\n                                params[TablesBlockKey] = table.no;\r\n                                params[RowsBlockKey] = row.no;\r\n                                params[ColsBlockKey] = col.no;\r\n                                userCreate(\"block\", params);\r\n                              }}\r\n                              key={\"b\" + col.no}\r\n                            >\r\n                              +\r\n                            </td>\r\n                          );\r\n                        } else {\r\n                          return <td key={\"b\" + col.no}>{block[0].text}</td>;\r\n                        }\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n                <tr>\r\n                  <td\r\n                    onClick={() => {\r\n                      userCreate(RowsBlockKey);\r\n                    }}\r\n                  >\r\n                    +\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <button\r\n              onClick={() => {\r\n                userCreate(TablesBlockKey);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Acadtable</h1>\r\n        <Tables />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.collections.length === 0) {\r\n      return <Welcome />;\r\n    } else if (this.props.selected === null) {\r\n      return (\r\n        <div>\r\n          <span>Please select a collection</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selected: state.SelectedCollection,\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    blocks: state.BlocksList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBlock,\r\n    createBatch,\r\n    createDay,\r\n    createTime,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject,\r\n    select: selectCollectionById\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-container\">\r\n        {this.props.list.map(item => {\r\n          let selectClass =\r\n            this.props.selected === item.id ? \"selected-card\" : \"\";\r\n          let selectedItem = this.props.selected === item.id ? true : false;\r\n          return (\r\n            <div key={item.id} className={`table-card card-box ${selectClass}`}>\r\n              <div className=\"card-title\">{item.name}</div>\r\n              <div className=\"buttons-list blue\">\r\n                {this.props.buttons.map(button => {\r\n                  let restrictSelected =\r\n                    button.selected == null ? false : button.selected;\r\n                  if (restrictSelected) {\r\n                    if (selectedItem) {\r\n                      return null;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <button\r\n                      onClick={() => {\r\n                        button.action(item.id);\r\n                      }}\r\n                      key={button.name}\r\n                    >\r\n                      {button.name}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CreateTable extends Component {\r\n  state = {\r\n    form: {\r\n      name: \"\"\r\n    }\r\n  };\r\n  handle = event => {\r\n    event.preventDefault();\r\n    this.props.submit(this.state.form);\r\n  };\r\n  render() {\r\n    if (this.props.display === \"form\") {\r\n      return (\r\n        <form onSubmit={this.handle} className=\"row-block\">\r\n          <label htmlFor=\"name\" className=\"item\">\r\n            {this.props.name} :\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"item\"\r\n            value={this.state.form.name}\r\n            onChange={e => {\r\n              this.setState({\r\n                form: {\r\n                  name: e.target.value\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          <input type=\"submit\" className=\"item\" />\r\n          <button\r\n            onClick={() => {\r\n              this.props.cancel();\r\n            }}\r\n            className=\"item\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <button onClick={this.props.click}>Create A Collection</button>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CreateTable;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Area extends Component {\r\n  state = {\r\n    array: this.props.array,\r\n    name: this.props.name,\r\n    keys: [],\r\n    vals: []\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.name}\r\n        <ul>\r\n          {this.state.array.map(obj => {\r\n            return (\r\n              <li\r\n                onClick={() => {\r\n                  this.setState({ keys: Object.keys(obj) });\r\n                }}\r\n              >\r\n                {obj.name}\r\n              </li>\r\n            );\r\n          })}\r\n          <li>+</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Area;\r\n","import React, { Component } from \"react\";\r\nimport storage from \"../../engine/storage\";\r\n\r\nimport Area from \"./areas\";\r\n\r\nclass EditCollection extends Component {\r\n  state = {\r\n    collection: storage.getData(this.props.collectionID),\r\n    id: this.props.collectionID,\r\n    name: null,\r\n    tables: [],\r\n    days: [],\r\n    places: [],\r\n    times: [],\r\n    blocks: [],\r\n    batches: [],\r\n    subjects: [],\r\n    teachers: []\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ ...this.state.collection });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"buttons-list\">\r\n          <button onClick={this.props.cancel}>Back</button>\r\n        </div>\r\n        <div>Name : {this.state.name}</div>\r\n        <div>{<Area array={this.state.blocks} name=\"block\" />}</div>\r\n        <div>{<Area array={this.state.tables} name=\"table\" />}</div>\r\n        <div>{<Area array={this.state.days} name=\"day\" />}</div>\r\n        <div>{<Area array={this.state.times} name=\"time\" />}</div>\r\n        <div>{<Area array={this.state.places} name=\"place\" />}</div>\r\n        <div>{<Area array={this.state.batches} name=\"batch\" />}</div>\r\n        <div>{<Area array={this.state.subjects} name=\"subject\" />}</div>\r\n        <div>{<Area array={this.state.teachers} name=\"teacher\" />}</div>\r\n        <div className=\"buttons-list\">\r\n          <button>Save</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCollection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport List from \"./List\";\r\nimport Create from \"./Create\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollectionByName,\r\n  selectCollectionById,\r\n  renameCollectionById,\r\n  deleteCollectionById\r\n} from \"../../actions\";\r\n\r\nclass Collections extends Component {\r\n  state = {\r\n    createForm: false,\r\n    editCollection: null\r\n  };\r\n  render() {\r\n    let list = this.props.collections;\r\n\r\n    //Collection Buttons\r\n    let buttons = [];\r\n    buttons.push({\r\n      name: \"select\",\r\n      action: id => {\r\n        this.props.select(id);\r\n      },\r\n      selected: true\r\n    });\r\n    buttons.push({\r\n      name: \"edit\",\r\n      action: id => {\r\n        this.setState({\r\n          editCollection: id\r\n        });\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"delete\",\r\n      action: id => {\r\n        this.props.delete(id);\r\n      }\r\n    });\r\n\r\n    if (this.state.editCollection != null) {\r\n      return (\r\n        <Edit\r\n          collectionID={this.state.editCollection}\r\n          cancel={() => {\r\n            this.setState({ editCollection: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Collections</h1>\r\n        <Create\r\n          name=\"collection\"\r\n          display={this.state.createForm ? \"form\" : \"button\"}\r\n          click={() => {\r\n            this.setState({ createForm: true });\r\n          }}\r\n          submit={values => {\r\n            this.props.create(values.name);\r\n            this.setState({ createForm: false });\r\n          }}\r\n          cancel={() => {\r\n            this.setState({ createForm: false });\r\n          }}\r\n        />\r\n        <List\r\n          selected={\r\n            this.props.selectedCollection != null\r\n              ? this.props.selectedCollection.id\r\n              : null\r\n          }\r\n          list={list}\r\n          buttons={buttons}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedCollection: state.SelectedCollection,\r\n    collections: state.CollectionsList,\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    blocks: state.BlocksList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  create: createCollectionByName,\r\n  select: selectCollectionById,\r\n  rename: renameCollectionById,\r\n  delete: deleteCollectionById\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Collections);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n//Header Import\r\nimport Header from \"./Header\";\r\n\r\n//Display Import\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Collections from \"./collections\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n\r\n            <Route path=\"/collections\" exact component={Collections} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport CollectionsList from \"./CollectionsList\";\r\nimport SelectedCollection from \"./SelectedCollection\";\r\nimport TablesList from \"./TablesList\";\r\nimport PlacesList from \"./PlacesList\";\r\nimport DaysList from \"./DaysList\";\r\nimport TimesList from \"./TimesList\";\r\nimport BlocksList from \"./BlocksList\";\r\nimport SubjectsList from \"./SubjectsList\";\r\nimport TeachersList from \"./TeachersList\";\r\n\r\nexport default combineReducers({\r\n  CollectionsList,\r\n  SelectedCollection,\r\n  TablesList,\r\n  PlacesList,\r\n  DaysList,\r\n  TimesList,\r\n  BlocksList,\r\n  SubjectsList,\r\n  TeachersList\r\n});\r\n","import {\r\n  CREATE_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION\r\n} from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = storage.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_COLLECTION:\r\n    case RENAME_COLLECTION:\r\n    case DELETE_COLLECTION:\r\n      return action.payload.collections;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, DELETE_COLLECTION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n      return action.payload.selectedCollection || null;\r\n    case DELETE_COLLECTION:\r\n      if (state !== null && action.payload.deleted.id === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TABLE:\r\n      return action.payload.tables.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_PLACE } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_PLACE:\r\n      return action.payload.places.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_DAY } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_DAY:\r\n      return action.payload.days.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TIME } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TIME:\r\n      return action.payload.times.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_BLOCK } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BLOCK:\r\n      return action.payload.blocks.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_SUBJECT } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_SUBJECT:\r\n      return action.payload.subjects.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TEACHER } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TEACHER:\r\n      return action.payload.teachers.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}