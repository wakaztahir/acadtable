{"version":3,"sources":["components/Header.js","engine/storage.js","actions/index.js","actions/types.js","components/display/Welcome.js","components/display/Block.js","components/display/Table.js","components/display/index.js","components/collections/List.js","components/collections/Create.js","actions/helpers.js","components/collections/areas/FormEditor.js","components/collections/areas/TableEditor.js","components/collections/areas/index.js","components/collections/user/Days.js","components/collections/Edit.js","components/Modal.js","components/collections/index.js","components/App.js","reducers/index.js","reducers/CollectionsList.js","reducers/SelectedCollection.js","reducers/TablesList.js","reducers/PlacesList.js","reducers/BatchesList.js","reducers/DaysList.js","reducers/TimesList.js","reducers/BlocksList.js","reducers/SubjectsList.js","reducers/TeachersList.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","storage","id","name","list","getList","collection","data","tables","blocks","days","times","places","batches","subjects","teachers","push","saveList","saveData","localStorage","getItem","JSON","parse","ex","arguments","length","undefined","setItem","stringify","newname","newlist","map","item","filter","removeItem","type","tableData","getData","ListFunctions","all","this","itemID","createItem","updateItem","deleteItem","selectCollection","payload","selectedCollection","Welcome","_this","onClick","console","log","props","exampleCollection","connect","create","Example","collections","Block","string","pattern","indexOf","words","match","replace","variable","block","b","batch","day","time","place","teacher","subject","display","className","p","key","getTextFor","state","TablesList","DaysList","PlacesList","TimesList","BatchesList","SubjectsList","TeachersList","Table","base","BaseBlockKey","baseBlockKey","rows","RowsBlockKey","rowsBlockKey","cols","ColsBlockKey","colsBlockKey","mode","col","row","params","display_Block","Display","_this2","_this$props","objector","getBlockKey","listName","substr","setState","table","i","baseValue","display_Table","display_Welcome","selected","screen","CollectionsList","SelectedCollection","BlocksList","List","selectClass","selectedItem","concat","buttons","button","action","CreateTable","form","handle","event","preventDefault","submit","onSubmit","htmlFor","value","onChange","e","target","cancel","click","rand","operator","start","end","Math","random","toString","split","FormEditor","property","keys","saveForm","k","default","save","nounmount","style","width","flexDirection","justifyContent","alignItems","x","show","keyType","newvalue","disabled","locked","required","defaultValue","field","children","TableEditor","saveTable","items","blist","baseList","rowsList","rowsValue","colsList","areas_FormEditor","Object","objectSpread","Area","array","heading","editor","showCreator","showEditorFor","obj","bypass","saveFunction","areas_TableEditor","deleteProperty","deleteActionCreator","createActionCreator","updateActionCreator","creator","padding","Days","forEach","prop","EditCollection","collectionID","editArea","updateState","activeClass","textTransform","margin","areas","createTable","propID","updateTable","deleteTable","createBlock","updateBlock","deleteBlock","createDay","updateDay","deleteDay","user_Days","createTime","updateTime","deleteTime","createPlace","updatePlace","deletePlace","createBatch","updateBatch","deleteBatch","createSubject","updateSubject","deleteSubject","createTeacher","updateTeacher","deleteTeacher","blockID","tableID","dayID","timeID","placeID","batchID","subjectID","teacherID","Modal","modalType","content","message","okFunction","contentModal","yesFunction","cancelFunction","messageModal","confirmModal","yes","Collections","createForm","editCollection","modalDisplay","deleteFunction","copyCollection","deleteCollection","Edit","Create","values","createCollection","collections_List","components_Modal","newid","renameCollection","rename","deleted","delete","App","HashRouter","components_Header","Route","path","exact","component","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.761014e2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/collections\">\r\n            <button>Collections</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","class storage {\r\n  static create(id, name) {\r\n    let list = storage.getList();\r\n    let collection = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      tables: [],\r\n      blocks: [],\r\n      days: [],\r\n      times: [],\r\n      places: [],\r\n      batches: [],\r\n      subjects: [],\r\n      teachers: []\r\n    };\r\n    list.push(collection);\r\n    storage.saveList(list);\r\n    storage.saveData(id, data);\r\n  }\r\n  static getList() {\r\n    let list = localStorage.getItem(\"collections\") || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  static saveList(list = []) {\r\n    localStorage.setItem(\"collections\", JSON.stringify(list));\r\n  }\r\n\r\n  static getData(id) {\r\n    let data = localStorage.getItem(\"c-\" + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  static saveData(id, data = {}) {\r\n    localStorage.setItem(\"c-\" + id, JSON.stringify(data));\r\n  }\r\n  static rename(id, newname) {\r\n    let list = storage.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    storage.saveList(newlist);\r\n  }\r\n  static delete(id) {\r\n    let list = storage.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    storage.saveList(newlist);\r\n    localStorage.removeItem(\"c-\" + id);\r\n  }\r\n\r\n  //Main User Functions\r\n\r\n  static list(id, type) {\r\n    let tableData = storage.getData(id);\r\n    if (tableData) {\r\n      if (!tableData[type]) {\r\n        tableData[type] = [];\r\n        storage.saveData(id, tableData);\r\n      }\r\n      let ListFunctions = {\r\n        all: function() {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          return list;\r\n        },\r\n        getItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let items = list.filter(item => item.id === itemID);\r\n          return items[0];\r\n        },\r\n        createItem: function(data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list.push(data);\r\n          storage.saveData(this.id, tableData);\r\n          return data;\r\n        },\r\n        updateItem: function(itemID, data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list = list.map(item => {\r\n            if (item.id === itemID) {\r\n              return data;\r\n            }\r\n            return item;\r\n          });\r\n          tableData[this.type] = list;\r\n          storage.saveData(this.id, tableData);\r\n        },\r\n        deleteItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          tableData[this.type] = list.filter(item => item.id !== itemID);\r\n          storage.saveData(this.id, tableData);\r\n        }\r\n      };\r\n      ListFunctions.id = id;\r\n      ListFunctions.type = type;\r\n      return ListFunctions;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../engine/storage\";\r\nimport {\r\n  EXAMPLE_COLLECTION,\r\n  CREATE_COLLECTION,\r\n  SELECT_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION,\r\n  CREATE_TABLE,\r\n  UPDATE_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BLOCK,\r\n  UPDATE_BLOCK,\r\n  DELETE_BLOCK,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY,\r\n  CREATE_TIME,\r\n  UPDATE_TIME,\r\n  DELETE_TIME,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE,\r\n  CREATE_BATCH,\r\n  UPDATE_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT,\r\n  CREATE_TEACHER,\r\n  UPDATE_TEACHER,\r\n  DELETE_TEACHER,\r\n  COPY_COLLECTION\r\n} from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.create(\"example\", \"Example\");\r\n  let list = storage.getList();\r\n  storage.saveData(\"example\", Example);\r\n  return {\r\n    type: EXAMPLE_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\n\r\nexport const createCollection = (id, name) => {\r\n  storage.create(id, name);\r\n  let list = storage.getList();\r\n  return {\r\n    type: CREATE_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  return {\r\n    type: SELECT_COLLECTION,\r\n    payload: {\r\n      selectedCollection: storage.getData(id),\r\n      tables: storage.list(id, \"tables\"),\r\n      days: storage.list(id, \"days\"),\r\n      places: storage.list(id, \"places\"),\r\n      times: storage.list(id, \"times\"),\r\n      blocks: storage.list(id, \"blocks\"),\r\n      batches: storage.list(id, \"batches\"),\r\n      subjects: storage.list(id, \"subjects\"),\r\n      teachers: storage.list(id, \"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const copyCollection = (id, newid) => {\r\n  let data = storage.getData(id);\r\n  data.id = newid;\r\n  data.name += \" Copy\";\r\n  storage.create(newid, data.name);\r\n  storage.saveData(newid, data);\r\n  let list = storage.getList();\r\n  return {\r\n    type: COPY_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  storage.rename(id, newname);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  let deleted = storage.getData(id);\r\n  storage.delete(id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: DELETE_COLLECTION,\r\n    payload: {\r\n      collections: list,\r\n      deleted\r\n    }\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.createItem(data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: CREATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const updateTable = (collectionID, tableID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.updateItem(tableID, data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: UPDATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const deleteTable = (collectionID, tableID) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.deleteItem(tableID);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: DELETE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.createItem(data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: CREATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const updateBlock = (collectionID, blockID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.updateItem(blockID, data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: UPDATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const deleteBlock = (collectionID, blockID) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.deleteItem(blockID);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: DELETE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.createItem(data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: CREATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const updateDay = (collectionID, dayID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.updateItem(dayID, data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: UPDATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = (collectionID, dayID) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.deleteItem(dayID);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: DELETE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.createItem(data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: CREATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const updateTime = (collectionID, timeID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.updateItem(timeID, data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: UPDATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = (collectionID, timeID) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.deleteItem(timeID);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: DELETE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.createItem(data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: CREATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const updatePlace = (collectionID, placeID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.updateItem(placeID, data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: UPDATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = (collectionID, placeID) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.deleteItem(placeID);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: DELETE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.createItem(data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: CREATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const updateBatch = (collectionID, batchID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.updateItem(batchID, data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: UPDATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = (collectionID, batchID) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.deleteItem(batchID);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: DELETE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.createItem(data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: CREATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const updateSubject = (collectionID, subjectID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.updateItem(subjectID, data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: UPDATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = (collectionID, subjectID) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.deleteItem(subjectID);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: DELETE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.createItem(data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: CREATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const updateTeacher = (collectionID, teacherID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.updateItem(teacherID, data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: UPDATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = (collectionID, teacherID) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.deleteItem(teacherID);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: DELETE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\n","export const EXAMPLE_COLLECTION = \"EXAMPLE_COLLECTION\";\r\n\r\nexport const CREATE_COLLECTION = \"CREATE_COLLECTION\";\r\nexport const SELECT_COLLECTION = \"SELECT_COLLECTION\";\r\nexport const COPY_COLLECTION = \"COPY_COLLECTION\";\r\nexport const RENAME_COLLECTION = \"RENAME_COLLECTION\";\r\nexport const DELETE_COLLECTION = \"DELETE_COLLECTION\";\r\n\r\nexport const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const UPDATE_TABLE = \"UPDATE_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BLOCK = \"CREATE_BLOCK\";\r\nexport const UPDATE_BLOCK = \"UPDATE_BLOCK\";\r\nexport const DELETE_BLOCK = \"DELETE_BLOCK\";\r\n\r\nexport const CREATE_DAY = \"CREATE_DAY\";\r\nexport const UPDATE_DAY = \"UPDATE_DAY\";\r\nexport const DELETE_DAY = \"DELETE_DAY\";\r\n\r\nexport const CREATE_TIME = \"CREATE_TIME\";\r\nexport const UPDATE_TIME = \"UPDATE_TIME\";\r\nexport const DELETE_TIME = \"DELETE_TIME\";\r\n\r\nexport const CREATE_PLACE = \"CREATE_PLACE\";\r\nexport const UPDATE_PLACE = \"UPDATE_PLACE\";\r\nexport const DELETE_PLACE = \"DELETE_PLACE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const UPDATE_BATCH = \"UPDATE_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\r\nexport const UPDATE_SUBJECT = \"UPDATE_SUBJECT\";\r\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\r\n\r\nexport const CREATE_TEACHER = \"CREATE_TEACHER\";\r\nexport const UPDATE_TEACHER = \"UPDATE_TEACHER\";\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { exampleCollection } from \"./../../actions/\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Welcome !</span>\r\n        <p>You have't created any collections</p>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              console.log(\"Loading The Example\");\r\n              this.props.exampleCollection();\r\n            }}\r\n          >\r\n            Load An Example\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <Link to=\"/collections\">Click Here To Create Collections</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { exampleCollection }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Block extends Component {\r\n  pattern(string) {\r\n    let pattern = [];\r\n    while (string.indexOf(\"%\") > -1) {\r\n      let regExp = /%(.*?)%/;\r\n      let words = string.match(regExp);\r\n      string = string.replace(words[0], \"\");\r\n      pattern.push(words[1]);\r\n    }\r\n    return pattern;\r\n  }\r\n  getTextFor(variable, block) {\r\n    switch (variable) {\r\n      case \"batch\":\r\n        return this.props.batches.filter(b => b.id === block.batch)[0].name;\r\n      case \"day\":\r\n        return this.props.days.filter(b => b.id === block.day)[0].name;\r\n      case \"time\":\r\n        return this.props.times.filter(b => b.id === block.time)[0].name;\r\n      case \"place\":\r\n        return this.props.places.filter(b => b.id === block.place)[0].name;\r\n      case \"teacher\":\r\n        return this.props.teachers.filter(b => b.id === block.teacher)[0].name;\r\n      case \"subject\":\r\n        return this.props.subjects.filter(b => b.id === block.subject)[0].name;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n  render() {\r\n    let block = this.props.block;\r\n    let pattern = this.pattern(block.display);\r\n    return (\r\n      <div className=\"block\">\r\n        {pattern.map(p => {\r\n          return <div key={\"blp\" + p}>{this.getTextFor(p, block)}</div>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Block);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Block from \"./Block\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    let base = this.props.base;\r\n    let BaseBlockKey = this.props.baseBlockKey;\r\n    let rows = this.props.rows;\r\n    let RowsBlockKey = this.props.rowsBlockKey;\r\n    let cols = this.props.cols;\r\n    let ColsBlockKey = this.props.colsBlockKey;\r\n    let blocks = this.props.blocks;\r\n    let mode = this.props.mode;\r\n    return (\r\n      <div key={this.props.id}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td>{base != null ? base.name : null}</td>\r\n              {cols.map(col => {\r\n                return <td key={\"c\" + col.id}>{col.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map(row => {\r\n              return (\r\n                <tr key={\"r\" + row.id}>\r\n                  <td>{row.name}</td>\r\n                  {cols.map(col => {\r\n                    let block = blocks.filter(\r\n                      block =>\r\n                        block[BaseBlockKey] === base.id &&\r\n                        block[RowsBlockKey] === row.id &&\r\n                        block[ColsBlockKey] === col.id\r\n                    );\r\n                    if (block.length === 0) {\r\n                      if (mode === \"print\") {\r\n                        return <td key={\"emp\" + col.id} />;\r\n                      }\r\n                      return (\r\n                        <td\r\n                          onClick={() => {\r\n                            let params = {};\r\n                            params[BaseBlockKey] = this.props.id;\r\n                            params[RowsBlockKey] = row.id;\r\n                            params[ColsBlockKey] = col.id;\r\n                          }}\r\n                          key={\"b\" + col.id}\r\n                        >\r\n                          <button>+</button>\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <td key={\"b\" + col.id} className=\"table-block\">\r\n                          <Block block={block[0]} />\r\n                        </td>\r\n                      );\r\n                    }\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport Table from \"./Table\";\r\n\r\nimport { selectCollection } from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    mode: \"edit\"\r\n  };\r\n  screen() {\r\n    let {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    } = this.props;\r\n    let objector = {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    };\r\n\r\n    let getBlockKey = listName => {\r\n      switch (listName) {\r\n        case \"batches\":\r\n          return \"batch\";\r\n        default:\r\n          return listName.substr(0, listName.length - 1);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Acadtable</h1>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"edit\" });\r\n            }}\r\n            className={this.state.mode === \"edit\" ? \"btn-red\" : \"\"}\r\n          >\r\n            edit\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"print\" });\r\n            }}\r\n            className={this.state.mode === \"print\" ? \"btn-red\" : \"\"}\r\n          >\r\n            print\r\n          </button>\r\n        </div>\r\n        {tables.map(table => {\r\n          let base = objector[table.base].filter(\r\n            i => i.id === table.baseValue\r\n          )[0];\r\n          let rows = objector[table.rows];\r\n          let cols = objector[table.cols];\r\n          return (\r\n            <Table\r\n              id={table.id}\r\n              key={table.id}\r\n              mode={this.state.mode}\r\n              base={base}\r\n              baseBlockKey={getBlockKey(table.base)}\r\n              rows={rows}\r\n              rowsBlockKey={getBlockKey(table.rows)}\r\n              cols={cols}\r\n              colsBlockKey={getBlockKey(table.cols)}\r\n              blocks={blocks}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.collections.length === 0) {\r\n      return <Welcome />;\r\n    } else if (this.props.selected === null) {\r\n      if (this.props.collections.length === 1) {\r\n        this.props.selectCollection(this.props.collections[0].id);\r\n      }\r\n      return (\r\n        <div>\r\n          <span>Please select a collection</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selected: state.SelectedCollection,\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    blocks: state.BlocksList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-container\">\r\n        {this.props.list.map(item => {\r\n          let selectClass =\r\n            this.props.selected === item.id ? \"selected-card\" : \"\";\r\n          let selectedItem = this.props.selected === item.id ? true : false;\r\n          return (\r\n            <div key={item.id} className={`table-card card-box ${selectClass}`}>\r\n              <div className=\"card-title\">{item.name}</div>\r\n              <div className=\"buttons-list blue\">\r\n                {this.props.buttons.map(button => {\r\n                  let restrictSelected =\r\n                    button.selected == null ? false : button.selected;\r\n                  if (restrictSelected) {\r\n                    if (selectedItem) {\r\n                      return null;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <button\r\n                      onClick={() => {\r\n                        button.action(item.id);\r\n                      }}\r\n                      key={button.name}\r\n                    >\r\n                      {button.name}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CreateTable extends Component {\r\n  state = {\r\n    form: {\r\n      name: \"\"\r\n    }\r\n  };\r\n  handle = event => {\r\n    event.preventDefault();\r\n    this.props.submit(this.state.form);\r\n  };\r\n  render() {\r\n    if (this.props.display === \"form\") {\r\n      return (\r\n        <form onSubmit={this.handle} className=\"row-block\">\r\n          <label htmlFor=\"name\" className=\"item\">\r\n            {this.props.name} :\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"item\"\r\n            value={this.state.form.name}\r\n            onChange={e => {\r\n              this.setState({\r\n                form: {\r\n                  name: e.target.value\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          <input type=\"submit\" className=\"item\" />\r\n          <button\r\n            onClick={() => {\r\n              this.props.cancel();\r\n            }}\r\n            className=\"item\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <button onClick={this.props.click}>Create A Collection</button>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CreateTable;\r\n","export const rand = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  saveForm = () => {\r\n    let property = this.state.property;\r\n    this.state.keys.map(k => {\r\n      if (k.type && k.type === \"select\") {\r\n        if (property[k.name] === null) {\r\n          property[k.name] =\r\n            this.state.property[k.name] != null\r\n              ? this.state.property[k.name]\r\n              : k.list.length > 0\r\n              ? k.list[0].id\r\n              : null;\r\n        }\r\n      } else if (k.type && k.type === \"textarea\") {\r\n        property[k.name] =\r\n          this.state.property[k.name] != null\r\n            ? this.state.property[k.name]\r\n            : k.default != null\r\n            ? k.default\r\n            : null;\r\n      }\r\n      return null;\r\n    });\r\n    this.props.save(property);\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.props.nounmount) {\r\n      this.saveForm();\r\n    }\r\n  }\r\n  render() {\r\n    const field = (keyType, key) => {\r\n      switch (keyType) {\r\n        case \"input\":\r\n        default:\r\n          return (\r\n            <input\r\n              key={key.name + \"inp\"}\r\n              type=\"text\"\r\n              onChange={x => {\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n              style={{ display: \"table-cell\" }}\r\n            />\r\n          );\r\n        case \"select\":\r\n          return (\r\n            <select\r\n              defaultValue={\r\n                this.state.property[key.name] != null\r\n                  ? this.state.property[key.name]\r\n                  : key.list.length > 0\r\n                  ? key.list[0].id\r\n                  : null\r\n              }\r\n              onChange={x => {\r\n                let property = this.state.property;\r\n                property[key.name] = x.target.value;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n            >\r\n              {key.list.map(item => {\r\n                return (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          );\r\n        case \"textarea\":\r\n          return (\r\n            <textarea\r\n              key={key.name + \"txt\"}\r\n              onChange={x => {\r\n                console.log(x.target.value);\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              style={{ display: \"table-cell\" }}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? key.default != null\r\n                    ? key.default\r\n                    : \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n            />\r\n          );\r\n      }\r\n    };\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"table\" }}>\r\n          <form\r\n            onSubmit={x => {\r\n              x.preventDefault();\r\n              this.saveForm();\r\n            }}\r\n          >\r\n            {this.state.keys.map(key => {\r\n              if (key.show != null && !key.show) {\r\n                return null;\r\n              }\r\n              let keyType = key.type != null ? key.type : \"input\";\r\n              return (\r\n                <div key={key.name + key.id} style={{ display: \"table-row\" }}>\r\n                  <label\r\n                    htmlFor={key.name + key.id + \"inp\"}\r\n                    style={{ display: \"table-cell\" }}\r\n                  >\r\n                    {key.name}\r\n                  </label>\r\n                  {field(keyType, key)}\r\n                </div>\r\n              );\r\n            })}\r\n            {this.props.children}\r\n            <div style={{ display: \"table-row\" }}>\r\n              <div style={{ display: \"table-cell\" }} />\r\n              <input\r\n                type=\"submit\"\r\n                style={{ display: \"table-cell\", width: \"100%\" }}\r\n                className=\"btn-red\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport FormEditor from \"./FormEditor\";\r\n\r\nclass TableEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  saveTable = () => {\r\n    let property = this.state.property;\r\n    if (property.base == null) {\r\n      property.base = this.props.items[0].name;\r\n    }\r\n    if (property.baseValue == null) {\r\n      property.baseValue =\r\n        this.props.items[0].list.length > 0\r\n          ? this.props.items[0].list[0].id\r\n          : null;\r\n    }\r\n    if (property.rows == null) {\r\n      property.rows = this.props.items[1].name;\r\n    }\r\n    if (property.cols == null) {\r\n      property.cols = this.props.items[2].name;\r\n    }\r\n    this.props.save(property);\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.props.nounmount) {\r\n      this.saveTable();\r\n    }\r\n  }\r\n  render() {\r\n    let items = this.props.items;\r\n    let base =\r\n      this.state.property.base != null\r\n        ? this.state.property.base\r\n        : items[0].name;\r\n    let blist = items.filter(i => i.name === base)[0];\r\n    let baseList = blist != null ? blist.list : [];\r\n    let rowsList = items.filter(i => i.name !== base);\r\n    let rowsValue =\r\n      this.state.property.rows != null\r\n        ? this.state.property.rows\r\n        : items[1].name;\r\n    let colsList = rowsList.filter(i => i.name !== rowsValue);\r\n    let property = this.state.property;\r\n    return (\r\n      <FormEditor\r\n        property={this.state.property}\r\n        keys={this.props.keys}\r\n        save={this.saveTable}\r\n        nounmount={this.props.nounmount}\r\n      >\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"base\" style={{ display: \"table-cell\" }}>\r\n            Base\r\n          </label>\r\n          <select\r\n            name=\"base\"\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, base: x.target.value }\r\n              });\r\n            }}\r\n            style={{ display: \"table-cell\" }}\r\n            defaultValue={\r\n              this.state.property.base != null\r\n                ? this.state.property.base\r\n                : items[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {items.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, baseValue: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.baseValue != null\r\n                ? this.state.property.baseValue\r\n                : baseList.length > 0\r\n                ? baseList[0].id\r\n                : null\r\n            }\r\n            required={true}\r\n          >\r\n            {baseList.map(item => {\r\n              return (\r\n                <option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n            Rows\r\n          </label>\r\n          <select\r\n            id=\"rows\"\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, rows: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.rows != null\r\n                ? this.state.property.rows\r\n                : rowsList[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {rowsList.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n            Columns\r\n          </label>\r\n          <select\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, cols: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.cols != null\r\n                ? this.state.property.cols\r\n                : colsList[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {colsList.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </FormEditor>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { rand } from \"../../../actions/helpers\";\r\n\r\nimport FormEditor from \"./FormEditor\";\r\nimport TableEditor from \"./TableEditor\";\r\n\r\nclass Area extends Component {\r\n  state = {\r\n    array: this.props.array,\r\n    name: this.props.name,\r\n    heading: this.props.heading,\r\n    editor: this.props.editor || \"FormEditor\",\r\n    showCreator: false,\r\n    showEditorFor: null\r\n  };\r\n  editor = (obj, bypass = false, create) => {\r\n    if (this.state.showEditorFor === obj || bypass) {\r\n      let saveFunction = bypass ? create : this.save;\r\n      switch (this.state.editor) {\r\n        case \"FormEditor\":\r\n        default:\r\n          return (\r\n            <FormEditor\r\n              property={obj}\r\n              keys={this.props.keys}\r\n              save={saveFunction}\r\n              nounmount={bypass}\r\n            />\r\n          );\r\n        case \"TableEditor\":\r\n          return (\r\n            <TableEditor\r\n              property={obj}\r\n              items={this.props.items}\r\n              keys={this.props.keys}\r\n              save={saveFunction}\r\n              nounmount={bypass}\r\n            />\r\n          );\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  deleteProperty = obj => {\r\n    this.props.deleteActionCreator(obj.id);\r\n    let array = this.state.array.filter(item => item.id !== obj.id);\r\n    this.setState({ array: array });\r\n  };\r\n  create = obj => {\r\n    console.log(\"Creating In Storage\");\r\n    console.log(obj);\r\n    obj.id = rand(this.state.name);\r\n    this.props.createActionCreator(obj);\r\n  };\r\n  save = obj => {\r\n    console.log(\"Saving Changes into Storage\");\r\n    this.props.updateActionCreator(obj.id, obj);\r\n    if (this.state.showEditorFor === obj) {\r\n      this.setState({ showEditorFor: null });\r\n    }\r\n  };\r\n  creator = () => {\r\n    if (this.state.showCreator) {\r\n      let keys = {};\r\n      this.props.keys.map(k => {\r\n        keys[k.name] = null;\r\n        return null;\r\n      });\r\n      return this.editor(keys, true, this.create);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>{this.state.heading}</h2>\r\n          <div>{this.props.children}</div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ showCreator: !this.state.showCreator });\r\n              }}\r\n              className={this.state.showCreator ? \"\" : \"btn-red\"}\r\n            >\r\n              {this.state.showCreator ? \"Cancel\" : \"Create\"}\r\n            </button>\r\n          </div>\r\n          <div>\r\n            {this.creator()}\r\n            <ul style={{ padding: \"0px\" }}>\r\n              {this.state.array.map(obj => {\r\n                return (\r\n                  <li\r\n                    key={obj.id}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        property: obj\r\n                      })\r\n                    }\r\n                    className=\"area-item\"\r\n                  >\r\n                    <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                      <div>\r\n                        <h3>{obj.name}</h3>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <div className=\"buttons-list\">\r\n                          <button\r\n                            onClick={() => {\r\n                              this.setState({ showEditorFor: obj });\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button onClick={() => this.deleteProperty(obj)}>\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {this.editor(obj)}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Area;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { rand } from \"../../../actions/helpers\";\r\n\r\nclass Days extends Component {\r\n  render() {\r\n    let days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            days.forEach(day => {\r\n              let prop = {};\r\n              prop.name = day;\r\n              prop.id = rand(\"day\");\r\n              this.props.create(prop);\r\n            });\r\n          }}\r\n        >\r\n          Add All Days\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Days;\r\n","import React, { Component } from \"react\";\r\nimport storage from \"../../engine/storage\";\r\n\r\nimport Area from \"./areas\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport UserDays from \"./user/Days.js\";\r\n\r\nimport {\r\n  createBlock,\r\n  updateBlock,\r\n  deleteBlock,\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  createDay,\r\n  updateDay,\r\n  deleteDay,\r\n  createTime,\r\n  updateTime,\r\n  deleteTime,\r\n  createPlace,\r\n  updatePlace,\r\n  deletePlace,\r\n  createBatch,\r\n  updateBatch,\r\n  deleteBatch,\r\n  createSubject,\r\n  updateSubject,\r\n  deleteSubject,\r\n  createTeacher,\r\n  updateTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass EditCollection extends Component {\r\n  state = {\r\n    ...storage.getData(this.props.collectionID),\r\n    editArea: \"lectures\"\r\n  };\r\n  updateState = () => {\r\n    this.setState({ ...storage.getData(this.props.collectionID) });\r\n  };\r\n  render() {\r\n    const UserArea = () => {\r\n      switch (this.state.editArea) {\r\n        case \"tables\":\r\n          return (\r\n            <Area\r\n              array={this.state.tables}\r\n              createActionCreator={data => {\r\n                this.props.createTable(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTable(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTable(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"table\"\r\n              editor=\"TableEditor\"\r\n              heading=\"Tables\"\r\n              items={[\r\n                { name: \"days\", list: this.state.days, required: true },\r\n                { name: \"times\", list: this.state.times, required: true },\r\n                { name: \"batches\", list: this.state.batches, required: true },\r\n                { name: \"places\", list: this.state.places, required: true },\r\n                { name: \"subjects\", list: this.state.subjects, required: true },\r\n                { name: \"teachers\", list: this.state.teachers, required: true }\r\n              ]}\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n                // { name: \"options\" },\r\n                // { name: \"settings\" }\r\n              ]}\r\n            />\r\n          );\r\n        case \"lectures\":\r\n        default:\r\n          return (\r\n            <Area\r\n              array={this.state.blocks}\r\n              createActionCreator={data => {\r\n                this.props.createBlock(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBlock(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBlock(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"block\"\r\n              heading=\"Lectures\"\r\n              keys={[\r\n                {\r\n                  name: \"text\",\r\n                  required: true,\r\n                  locked: true,\r\n                  show: false\r\n                },\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                },\r\n                { name: \"customText\" },\r\n                {\r\n                  name: \"day\",\r\n                  type: \"select\",\r\n                  list: this.state.days,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"place\",\r\n                  type: \"select\",\r\n                  list: this.state.places,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"time\",\r\n                  type: \"select\",\r\n                  list: this.state.times,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"batch\",\r\n                  type: \"select\",\r\n                  list: this.state.batches,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"subject\",\r\n                  type: \"select\",\r\n                  list: this.state.subjects,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"teacher\",\r\n                  type: \"select\",\r\n                  list: this.state.teachers,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"display\",\r\n                  type: \"textarea\",\r\n                  required: true,\r\n                  default: \"%batch%%subject%%teacher%\"\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"days\":\r\n          return (\r\n            <Area\r\n              array={this.state.days}\r\n              createActionCreator={data => {\r\n                this.props.createDay(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateDay(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteDay(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"day\"\r\n              heading=\"Days\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            >\r\n              <UserDays\r\n                create={data => {\r\n                  this.props.createDay(this.state.id, data);\r\n                  this.updateState();\r\n                }}\r\n              />\r\n            </Area>\r\n          );\r\n        case \"times\":\r\n          return (\r\n            <Area\r\n              array={this.state.times}\r\n              createActionCreator={data => {\r\n                this.props.createTime(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTime(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTime(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"time\"\r\n              heading=\"Times\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"places\":\r\n          return (\r\n            <Area\r\n              array={this.state.places}\r\n              createActionCreator={data => {\r\n                this.props.createPlace(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updatePlace(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deletePlace(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"place\"\r\n              heading=\"Places\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"batches\":\r\n          return (\r\n            <Area\r\n              array={this.state.batches}\r\n              createActionCreator={data => {\r\n                this.props.createBatch(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBatch(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBatch(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"batch\"\r\n              heading=\"Batches\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"subjects\":\r\n          return (\r\n            <Area\r\n              array={this.state.subjects}\r\n              createActionCreator={data => {\r\n                this.props.createSubject(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateSubject(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteSubject(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"subject\"\r\n              heading=\"Subjects\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"teachers\":\r\n          return (\r\n            <Area\r\n              array={this.state.teachers}\r\n              createActionCreator={data => {\r\n                this.props.createTeacher(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTeacher(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTeacher(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"teacher\"\r\n              heading=\"Teachers\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n      }\r\n    };\r\n    let MenuItems = [\r\n      \"lectures\",\r\n      \"tables\",\r\n      \"batches\",\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"buttons-list\">\r\n          <button onClick={this.props.cancel}>Back</button>\r\n        </div>\r\n        <h1>Collection : {this.state.name}</h1>\r\n        <div>\r\n          {MenuItems.map(item => {\r\n            let activeClass = \"\";\r\n            if (item === this.state.editArea) {\r\n              activeClass = \"btn-red\";\r\n            }\r\n            return (\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ editArea: item });\r\n                }}\r\n                style={{ textTransform: \"capitalize\", margin: \"2px\" }}\r\n                className={activeClass}\r\n                key={item}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <UserArea />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBlock,\r\n    updateBlock,\r\n    deleteBlock,\r\n    createTable,\r\n    updateTable,\r\n    deleteTable,\r\n    createDay,\r\n    updateDay,\r\n    deleteDay,\r\n    createTime,\r\n    updateTime,\r\n    deleteTime,\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace,\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch,\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject,\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(EditCollection);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    modalType: this.props.type == null ? \"message\" : this.props.type\r\n  };\r\n  contentModal(content) {\r\n    return (\r\n      <div className=\"modal\" display={this.state.display ? \"block\" : \"none\"}>\r\n        <div className=\"modal-inside\">{content}</div>\r\n      </div>\r\n    );\r\n  }\r\n  messageModal(message = \"\", okFunction = () => {}) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              okFunction();\r\n            }}\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirmModal(\r\n    message = \"Are you sure ?\",\r\n    yesFunction = () => {},\r\n    cancelFunction = () => {}\r\n  ) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              yesFunction();\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              cancelFunction();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.display) {\r\n      switch (this.state.modalType) {\r\n        case \"message\":\r\n        default:\r\n          return this.messageModal(this.props.message);\r\n        case \"confirm\":\r\n          return this.confirmModal(\r\n            this.props.message,\r\n            this.props.yes,\r\n            this.props.cancel\r\n          );\r\n        case \"content\":\r\n          return this.contentModal(this.props.children);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nimport List from \"./List\";\r\nimport Create from \"./Create\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Modal from \"../Modal\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  copyCollection,\r\n  renameCollection,\r\n  deleteCollection\r\n} from \"../../actions\";\r\n\r\nimport { rand } from \"../../actions/helpers\";\r\n\r\nclass Collections extends Component {\r\n  state = {\r\n    createForm: false,\r\n    editCollection: null,\r\n    modalDisplay: false,\r\n    deleteFunction: () => {}\r\n  };\r\n  displayDeleteModal() {\r\n    this.setState({ modalDisplay: true });\r\n  }\r\n  render() {\r\n    let list = this.props.collections;\r\n\r\n    //Collection Buttons\r\n    let buttons = [];\r\n    buttons.push({\r\n      name: \"select\",\r\n      action: id => {\r\n        this.props.selectCollection(id);\r\n      },\r\n      selected: true\r\n    });\r\n    buttons.push({\r\n      name: \"copy\",\r\n      action: id => {\r\n        this.props.copyCollection(id, rand(\"collection\"));\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"edit\",\r\n      action: id => {\r\n        this.setState({\r\n          editCollection: id\r\n        });\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"delete\",\r\n      action: id => {\r\n        this.setState({\r\n          modalDisplay: true,\r\n          deleteFunction: () => {\r\n            this.props.deleteCollection(id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    if (this.state.editCollection != null) {\r\n      return (\r\n        <Edit\r\n          collectionID={this.state.editCollection}\r\n          cancel={() => {\r\n            this.setState({ editCollection: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Collections</h1>\r\n        <Create\r\n          name=\"collection\"\r\n          display={this.state.createForm ? \"form\" : \"button\"}\r\n          click={() => {\r\n            this.setState({ createForm: true });\r\n          }}\r\n          submit={values => {\r\n            this.props.createCollection(rand(\"collection\"), values.name);\r\n            this.setState({ createForm: false });\r\n          }}\r\n          cancel={() => {\r\n            this.setState({ createForm: false });\r\n          }}\r\n        />\r\n        <List\r\n          selected={\r\n            this.props.selectedCollection != null\r\n              ? this.props.selectedCollection.id\r\n              : null\r\n          }\r\n          list={list}\r\n          buttons={buttons}\r\n        />\r\n        <Modal\r\n          display={this.state.modalDisplay}\r\n          type=\"confirm\"\r\n          yes={() => {\r\n            this.state.deleteFunction();\r\n            this.setState({ modalDisplay: false });\r\n          }}\r\n          cancel={() => this.setState({ modalDisplay: false })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selectedCollection: state.SelectedCollection\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    renameCollection,\r\n    deleteCollection\r\n  }\r\n)(Collections);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n//Header Import\r\nimport Header from \"./Header\";\r\n\r\n//Display Import\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Collections from \"./collections\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Header />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n            <Route path=\"/collections\" exact component={Collections} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport CollectionsList from \"./CollectionsList\";\r\nimport SelectedCollection from \"./SelectedCollection\";\r\nimport TablesList from \"./TablesList\";\r\nimport BatchesList from \"./BatchesList\";\r\nimport PlacesList from \"./PlacesList\";\r\nimport DaysList from \"./DaysList\";\r\nimport TimesList from \"./TimesList\";\r\nimport BlocksList from \"./BlocksList\";\r\nimport SubjectsList from \"./SubjectsList\";\r\nimport TeachersList from \"./TeachersList\";\r\n\r\nexport default combineReducers({\r\n  CollectionsList,\r\n  SelectedCollection,\r\n  TablesList,\r\n  PlacesList,\r\n  BatchesList,\r\n  DaysList,\r\n  TimesList,\r\n  BlocksList,\r\n  SubjectsList,\r\n  TeachersList\r\n});\r\n","import {\r\n  EXAMPLE_COLLECTION,\r\n  CREATE_COLLECTION,\r\n  COPY_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION\r\n} from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = storage.getList(), action) => {\r\n  switch (action.type) {\r\n    case EXAMPLE_COLLECTION:\r\n    case CREATE_COLLECTION:\r\n    case COPY_COLLECTION:\r\n    case RENAME_COLLECTION:\r\n    case DELETE_COLLECTION:\r\n      return action.payload.collections;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, DELETE_COLLECTION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n      return action.payload.selectedCollection || null;\r\n    case DELETE_COLLECTION:\r\n      if (state !== null && action.payload.deleted.id === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TABLE:\r\n      return action.payload.tables.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_PLACE:\r\n    case UPDATE_PLACE:\r\n    case DELETE_PLACE:\r\n      return action.payload.places.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_BATCH,\r\n  UPDATE_BATCH,\r\n  DELETE_BATCH\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BATCH:\r\n    case UPDATE_BATCH:\r\n    case DELETE_BATCH:\r\n      return action.payload.batches.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_DAY:\r\n    case UPDATE_DAY:\r\n    case DELETE_DAY:\r\n      return action.payload.days.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TIME } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TIME:\r\n      return action.payload.times.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_BLOCK } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BLOCK:\r\n      return action.payload.blocks.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_SUBJECT:\r\n    case UPDATE_SUBJECT:\r\n    case DELETE_SUBJECT:\r\n      return action.payload.subjects.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TEACHER } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TEACHER:\r\n      return action.payload.teachers.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}