{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","components/others/ColorsPanel.js","components/others/LectureModal.js","components/others/AreaEditor.js","components/others/ObjectEditor.js","actions/downloader.js","components/others/Exporter.js","components/others/TableActions.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","COLORS","TABLE_HEADER_COLOR","TABLE_FOOTER_COLOR","TABLE_SIDEBAR_COLOR","DEFAULT_LECTURE","id","day","time","place","subject","teacher","batch","color","display","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","ex","lectFind","filter","l","value","message","secLectFind","batchValidator","batches","batchFind","b","name","dayValidator","days","dayFind","d","timeValidator","times","timeFind","t","placeValidator","places","placeFind","p","subjectValidator","subjects","subjectFind","s","teacherValidator","teachers","teacherFind","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","collections","getDataItem","key","delDataItem","delData","values","forEach","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","unshowModal","createCollection","background","init","collection","set","selectCollection","getDataKey","deselectCollection","createTable","table","updateTable","tableID","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","updateDay","dayID","swapDay","withID","current","future","i","newDays","setDataKey","deleteDay","createTime","updateTime","timeID","swapTime","newTimes","deleteTime","createPlace","updatePlace","placeID","swapPlace","newPlaces","deletePlace","createBatch","updateBatch","batchID","swapBatch","newBatches","deleteBatch","createSubject","updateSubject","subjectID","swapSubject","newSubjects","deleteSubject","createTeacher","updateTeacher","teacherID","swapTeacher","newTeachers","deleteTeacher","DefaultSetupSettings","info","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","toLocaleDateString","toUpperCase","baseValue","header","text","footer","sidebar","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","ColorsPanel","addClass","change","LectureModal","params","toEdit","edit","mode","log","list","defaultValue","margin","others_ColorsPanel","multiple","selectedOptions","_ref","selected","_ref2","size","creator","marginTop","Lectures","Days","Times","Places","Batches","Subjects","Teachers","AreaEditor","element","update","ObjectEditor","updateValue","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","internal","pageSize","getWidth","getHeight","catch","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","Exporter","tableMode","downloader","TableActions","val1Table","val1Key","val2Table","val2Key","baseName","thing","fontStyle","copy","Tables","Screen","refs","area","request","req","swap","switcher","otherLecture","otherValidator","others_AreaEditor","others_ObjectEditor","deletor","objector","flexDirection","others_TableActions","others_Exporter","minWidth","ref","marginBottom","colSpan","ObjectEdit","rowSpan","left","AreaEdit","col","colIndex","swapper","row","rowIndex","top","block","others_LectureModal","loot","th","effectedRow","r","lectureSwap","effectedCol","c","User","action","quicker","_this2$state$creator","_this2$state$creator2","marginRight","deleteTable","fontWeight","DefaultCreator","listshow","showitem","itemlist","lectCard","st","bh","tr","tm","pc","dy","marginLeft","paddingBottom","dayObj","DefaultQuicker","timeObj","placeObj","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","btn","Modal","modal","button","waiting","confirm","implement","System","App","onerror","position","components_Welcome","components_Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3b5cc6d3.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const COLORS = [\r\n  \"transparent\",\r\n  \"#ff5e52\",\r\n  \"#fff60c\",\r\n  \"#a7e034\",\r\n  \"#e0dfc7\",\r\n  \"#6777eb\"\r\n];\r\n\r\nexport const LECTURE_COLOR = \"transparent\";\r\nexport const DAY_COLOR = \"transparent\";\r\nexport const TIME_COLOR = \"transparent\";\r\nexport const PLACE_COLOR = \"transparent\";\r\nexport const BATCH_COLOR = \"transparent\";\r\nexport const SUBJECT_COLOR = \"transparent\";\r\nexport const TEACHER_COLOR = \"transparent\";\r\nexport const TABLE_HEADER_COLOR = \"transparent\";\r\nexport const TABLE_FOOTER_COLOR = \"transparent\";\r\nexport const TABLE_SIDEBAR_COLOR = \"transparent\";\r\n\r\nexport const DEFAULT_LECTURE = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: [\"batch\", \"subject\", \"teacher\"]\r\n};\r\n\r\nexport const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"lecture\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect, ex = { id: \"exception\" }) => {\r\n  let lectFind = lectures.filter(\r\n    l =>\r\n      l.time === lect.time &&\r\n      l.day === lect.day &&\r\n      l.place === lect.place &&\r\n      l.id !== lect.id\r\n  );\r\n  if (lectFind.length > 0 && lectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n      return {\r\n        value: false,\r\n        message:\r\n          \"This batch/class is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      let secLectFind = lectures.filter(\r\n        l =>\r\n          l.teacher === lect.teacher &&\r\n          l.time === lect.time &&\r\n          l.day === lect.day &&\r\n          l.id !== lect.id\r\n      );\r\n      if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n        return {\r\n          value: false,\r\n          message:\r\n            \"One teacher cannot teach two batches/classes at the same time.\"\r\n        };\r\n      } else {\r\n        return {\r\n          value: true,\r\n          message: \"\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const batchValidator = (batches, batch, ex = { id: \"exception\" }) => {\r\n  let batchFind = batches.filter(\r\n    b => b.name === batch.name && b.id !== batch.id\r\n  );\r\n  if (batchFind.length > 0 && batchFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A batch with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const dayValidator = (days, day, ex = { id: \"exception\" }) => {\r\n  let dayFind = days.filter(d => d.name === day.name && d.id !== day.id);\r\n  if (dayFind.length > 0 && dayFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A day with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const timeValidator = (times, time, ex = { id: \"exception\" }) => {\r\n  let timeFind = times.filter(t => t.name === time.name && t.id !== time.id);\r\n  if (timeFind.length > 0 && timeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A time with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const placeValidator = (places, place, ex = { id: \"exception\" }) => {\r\n  let placeFind = places.filter(\r\n    p => p.name === place.name && p.id !== place.id\r\n  );\r\n  if (placeFind.length > 0 && placeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A place with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const subjectValidator = (\r\n  subjects,\r\n  subject,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let subjectFind = subjects.filter(\r\n    s => s.name === subject.name && s.id !== subject.id\r\n  );\r\n  if (subjectFind.length > 0 && subjectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A subject with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const teacherValidator = (\r\n  teachers,\r\n  teacher,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let teacherFind = teachers.filter(\r\n    t => t.name === teacher.name && t.id !== teacher.id\r\n  );\r\n  if (teacherFind.length > 0 && teacherFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A teacher with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols,\r\n        header: { text: \"Quick Table\", color: \"transparent\" },\r\n        footer: { text: \"Quick Table\", color: \"transparent\" },\r\n        sidebar: { text: \"Acadtable\", color: \"transparent\" }\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Start by creating a collection or loading an example.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { COLORS } from \"../../actions/helpers\";\r\n\r\nclass ColorsPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div style={this.props.style == null ? {} : this.props.style}>\r\n        {COLORS.map(color => {\r\n          let addClass = color === this.props.color ? \"selected\" : \"\";\r\n          return (\r\n            <span\r\n              className={\"color-btn \" + addClass}\r\n              style={{ background: color }}\r\n              key={\"color\" + color}\r\n              onClick={() => {\r\n                this.props.change(color);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorsPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  DAY_COLOR,\r\n  TIME_COLOR,\r\n  PLACE_COLOR,\r\n  BATCH_COLOR,\r\n  SUBJECT_COLOR,\r\n  TEACHER_COLOR,\r\n  DEFAULT_LECTURE\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      ...DEFAULT_LECTURE,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              info.color = this.state.params.color;\r\n              info.display =\r\n                this.state.params.display !== undefined\r\n                  ? this.state.params.display\r\n                  : info.display;\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info, {\r\n                  id: this.state.params.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.props.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {toEdit.map(key => {\r\n              console.log(key);\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {key} &nbsp;\r\n                    </label>\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    <button\r\n                      style={{ margin: \"0 0.5em\" }}\r\n                      onClick={() => {\r\n                        this.setState({ display: key });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.params.color}\r\n                change={color => {\r\n                  this.setState({ params: { ...this.state.params, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Display </label>\r\n              <select\r\n                name=\"\"\r\n                id=\"\"\r\n                multiple\r\n                value={this.state.params.display}\r\n                onChange={ex => {\r\n                  this.setState({\r\n                    params: {\r\n                      ...this.state.params,\r\n                      display: [...ex.target.selectedOptions]\r\n                        .filter(({ selected }) => selected)\r\n                        .map(({ value }) => value)\r\n                    }\r\n                  });\r\n                }}\r\n                size=\"6\"\r\n              >\r\n                <option value=\"batch\">Batch</option>\r\n                <option value=\"teacher\">Teacher</option>\r\n                <option value=\"subject\">Subject</option>\r\n                <option value=\"place\">Place</option>\r\n                <option value=\"day\">Day</option>\r\n                <option value=\"time\">Time</option>\r\n              </select>\r\n\r\n              <span className=\"info\" style={{ display: \"inline\" }}>\r\n                <span>\r\n                  These things will be displayed in the table in the order of\r\n                  selection,Hold control to select multiple options\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}>Cancel</button>\r\n              </span>\r\n              &nbsp;\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator;\r\n      let color = \"transparent\";\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          color = DAY_COLOR;\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          color = TIME_COLOR;\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          color = PLACE_COLOR;\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          color = SUBJECT_COLOR;\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          color = BATCH_COLOR;\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          color = TEACHER_COLOR;\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n          >\r\n            Back\r\n          </button>\r\n          <div style={{ marginTop: \"1em\" }}>\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  creator({ name, color });\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                    {this.state.display} &nbsp;\r\n                  </label>\r\n                  <input type=\"text\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>\r\n              </form>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass AreaEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\" key=\"areacolor\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element.color}\r\n                  change={color => {\r\n                    this.setState({\r\n                      element: { ...this.state.element, color }\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\" key={\"area\" + e}>\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.element[e]}\r\n                  onChange={ex => {\r\n                    let element = { ...this.state.element };\r\n                    element[e] = ex.target.value;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            {this.props.delete !== null ? (\r\n              <button\r\n                onClick={() => {\r\n                  this.props.delete();\r\n                  this.props.unshowModal();\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : null}\r\n            &nbsp;\r\n            <input type=\"submit\" value=\"Update\" className=\"black-btn\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(AreaEditor);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nclass ObjectEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element[this.props.obj]).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\" key=\"areacolor\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element[this.props.obj].color}\r\n                  change={color => {\r\n                    let element = { ...this.state.element };\r\n                    element[this.props.obj].color = color;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\" key={\"area\" + e}>\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.element[this.props.obj][e]}\r\n                  onChange={ex => {\r\n                    let element = { ...this.state.element };\r\n                    element[this.props.obj][e] = ex.target.value;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            {this.props.delete !== null ? (\r\n              <button\r\n                onClick={() => {\r\n                  this.props.delete();\r\n                  this.props.unshowModal();\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : null}\r\n            &nbsp;\r\n            <input\r\n              type=\"submit\"\r\n              value={this.props.updateValue}\r\n              className=\"black-btn\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(ObjectEditor);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth + tableWidth / 2,\r\n          height: tableHeight + tableHeight / 2\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth + 30, tableHeight + 40], \"landscape\");\r\n          }\r\n          doc.addImage(\r\n            dataUrl,\r\n            \"PNG\",\r\n            30,\r\n            40,\r\n            doc.internal.pageSize.getWidth() - 60,\r\n            doc.internal.pageSize.getHeight() - 80\r\n          );\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, {\r\n      bgcolor: \"#fff\",\r\n      width: screen.offsetWidth + 60,\r\n      height: screen.offsetHeight + 80\r\n    })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, {\r\n      bgcolor: \"#fff\",\r\n      width: screen.offsetWidth + 60,\r\n      height: screen.offsetHeight + 80\r\n    })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nclass Exporter extends Component {\r\n  render() {\r\n    let screen = this.props.screen;\r\n    return (\r\n      <div>\r\n        <h1>Export As</h1>\r\n        <label htmlFor=\"\">Document Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"pdfrender render\",\r\n              downloader: downloadPDF,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PDF\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"\">Image Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadPNG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PNG\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadJPEG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          JPEG\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            screen.props.unshowModal();\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Exporter;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createLecture, deleteLecture, unshowModal } from \"../../actions\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nclass TableActions extends Component {\r\n  state = {\r\n    display: \"main\"\r\n  };\r\n  copy() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <form\r\n          className=\"form-table\"\r\n          onSubmit={ex => {\r\n            ex.preventDefault();\r\n            let from = ex.target[0].value;\r\n            let to = ex.target[1].value;\r\n            if (from !== to) {\r\n              let val1Table = this.props.tables.filter(\r\n                table => table.id === to\r\n              )[0];\r\n              let val1Key = listKey(val1Table.base);\r\n              let lectsDels = this.props.lectures.filter(\r\n                lecture => lecture[val1Key] === val1Table.baseValue\r\n              );\r\n              lectsDels.forEach(l => this.props.deleteLecture(l.id));\r\n\r\n              let val2Table = this.props.tables.filter(\r\n                table => table.id === from\r\n              )[0];\r\n              let val2Key = listKey(val2Table.base);\r\n              let lectsCret = this.props.lectures.filter(\r\n                lecture => lecture[val2Key] === val2Table.baseValue\r\n              );\r\n              lectsCret.forEach(l => {\r\n                let lecture = { ...l };\r\n                lecture[val2Key] = val1Table.baseValue;\r\n                this.props.createLecture(lecture);\r\n              });\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"fromtable\">From </label>&nbsp;\r\n            <select\r\n              name=\"from\"\r\n              id=\"fromtable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"totable\">To </label>&nbsp;\r\n            <select\r\n              name=\"to\"\r\n              id=\"totable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" value=\"Copy Table\" />\r\n          </div>\r\n        </form>\r\n        <span style={{ color: \"rgba(222,55,33,.8)\", fontStyle: \"italic\" }}>\r\n          The other table will be overwritten\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div>\r\n          <h1>What to do ?</h1>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"copy\" });\r\n            }}\r\n          >\r\n            Copy A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      switch (this.state.display) {\r\n        case \"copy\":\r\n        default:\r\n          return this.copy();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createLecture, deleteLecture, unshowModal }\r\n)(TableActions);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  updateTable,\r\n  updateLecture,\r\n  deleteLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapPlace,\r\n  swapTeacher,\r\n  swapSubject,\r\n  swapTime,\r\n  updateBatch,\r\n  updateDay,\r\n  updatePlace,\r\n  updateSubject,\r\n  updateTeacher,\r\n  updateTime,\r\n  deleteBatch,\r\n  deleteDay,\r\n  deletePlace,\r\n  deleteSubject,\r\n  deleteTeacher,\r\n  deleteTime\r\n} from \"../../actions\";\r\n\r\nimport { listKey, keyList, lectureValidator } from \"../../actions/helpers\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../others/LectureModal\";\r\nimport AreaEditor from \"../others/AreaEditor\";\r\nimport ObjectEditor from \"../others/ObjectEditor\";\r\nimport Exporter from \"../others/Exporter\";\r\nimport TableActions from \"../others/TableActions\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  switcher(area, request) {\r\n    let req = this.props[\r\n      `${request}${area[0].toUpperCase()}${listKey(area).substr(\r\n        1,\r\n        listKey(area).length\r\n      )}`\r\n    ];\r\n    if (req == null) {\r\n      return null;\r\n    }\r\n    return req;\r\n  }\r\n  swapper(area, from, to) {\r\n    let swap = null;\r\n    swap = this.switcher(area, \"swap\");\r\n    if (swap != null) {\r\n      swap(from.id, to.id);\r\n    }\r\n  }\r\n  lectureSwap(from, to) {\r\n    let lectFind = this.props.lectures.filter(\r\n      l => l.day === to.day && l.time === to.time && l.place === to.place\r\n    );\r\n    if (lectFind.length > 0) {\r\n      let otherLecture = { ...lectFind[0] };\r\n      otherLecture = {\r\n        ...otherLecture,\r\n        day: from.day,\r\n        time: from.time,\r\n        place: from.place\r\n      };\r\n      let otherValidator = lectureValidator(\r\n        this.props.lectures,\r\n        otherLecture,\r\n        from\r\n      );\r\n      if (otherValidator.value) {\r\n        this.props.updateLecture(otherLecture.id, otherLecture);\r\n        let validator = lectureValidator(this.props.lectures, to, otherLecture);\r\n        if (validator.value) {\r\n          this.props.updateLecture(to.id, to);\r\n        } else {\r\n          this.props.showModal(\"message\", validator.message);\r\n        }\r\n      } else {\r\n        this.props.showModal(\r\n          \"message\",\r\n          \"2nd lecture error , \" + otherValidator.message\r\n        );\r\n      }\r\n    } else {\r\n      let validator = lectureValidator(this.props.lectures, to);\r\n      if (validator.value) {\r\n        this.props.updateLecture(to.id, to);\r\n      } else {\r\n        this.props.showModal(\"message\", validator.message);\r\n      }\r\n    }\r\n  }\r\n  AreaEdit(area, element) {\r\n    this.props.showModal(\r\n      \"content\",\r\n      <AreaEditor\r\n        element={element}\r\n        update={data => {\r\n          this.switcher(area, \"update\")(element.id, data);\r\n        }}\r\n        delete={() => {\r\n          this.switcher(area, \"delete\")(element.id);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  ObjectEdit(area, obj, element) {\r\n    this.props.showModal(\r\n      \"content\",\r\n      <ObjectEditor\r\n        element={element}\r\n        obj={obj}\r\n        update={data => {\r\n          this.switcher(keyList(area), \"update\")(element.id, data);\r\n        }}\r\n        delete={null}\r\n      />\r\n    );\r\n  }\r\n  deleter(area, element) {\r\n    let deletor = null;\r\n    deletor = this.switcher(area, \"delete\");\r\n    if (deletor != null) {\r\n      deletor(element.id);\r\n    } else {\r\n      console.log(deletor);\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\"content\", <TableActions screen={this} />);\r\n            }}\r\n          >\r\n            Table Actions\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\"content\", <Exporter screen={this} />);\r\n            }}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                    key={table.id + \"error\"}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    {table.header.text.length > 0 ? (\r\n                      <tr\r\n                        className=\"table-header\"\r\n                        style={{ background: table.header.color }}\r\n                      >\r\n                        <td colSpan={cols.length + 2}>\r\n                          <span>{table.header.text}</span>\r\n\r\n                          <div className=\"block-buttons\">\r\n                            <button\r\n                              className=\"edit\"\r\n                              onClick={() => {\r\n                                this.ObjectEdit(\"table\", \"header\", table);\r\n                              }}\r\n                            />\r\n                            <button\r\n                              className=\"delete\"\r\n                              onClick={() => {\r\n                                this.props.updateTable(table.id, {\r\n                                  ...table,\r\n                                  header: {\r\n                                    ...table.header,\r\n                                    text: \"\"\r\n                                  }\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr className=\"screen-element\">\r\n                        <td colSpan={cols.length + 2}>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.ObjectEdit(\"table\", \"header\", table);\r\n                            }}\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </thead>\r\n                  <tbody>\r\n                    {table.sidebar.text.length > 0 ? (\r\n                      <tr\r\n                        className=\"table-sidebar\"\r\n                        style={{ background: table.sidebar.color }}\r\n                      >\r\n                        <td rowSpan={rows.length + 2}>\r\n                          <div>\r\n                            <span>{table.sidebar.text}</span>\r\n                          </div>\r\n                          <div className=\"block-buttons\">\r\n                            <button\r\n                              className=\"edit\"\r\n                              onClick={() => {\r\n                                this.ObjectEdit(\"table\", \"sidebar\", table);\r\n                              }}\r\n                            />\r\n                            <button\r\n                              className=\"delete\"\r\n                              onClick={() => {\r\n                                this.props.updateTable(table.id, {\r\n                                  ...table,\r\n                                  sidebar: {\r\n                                    ...table.sidebar,\r\n                                    text: \"\"\r\n                                  }\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr className=\"table-sidebar\">\r\n                        <td rowSpan={rows.length + 2}>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.ObjectEdit(\"table\", \"sidebar\", table);\r\n                            }}\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                    <tr>\r\n                      <th\r\n                        className=\"main-block\"\r\n                        style={\r\n                          base.color != null || base.color !== \"transparent\"\r\n                            ? { background: base.color }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        {base != null ? (\r\n                          <div>\r\n                            <span>{base.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.AreaEdit(table.base, base);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        ) : null}\r\n                      </th>\r\n                      {cols.map((col, colIndex) => {\r\n                        return (\r\n                          <th\r\n                            key={\"c\" + col.id}\r\n                            className=\"col-block\"\r\n                            style={\r\n                              col.color != null || col.color !== \"transparent\"\r\n                                ? { background: col.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{col.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {colIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"left\"\r\n                                />\r\n                              )}\r\n                              {colIndex === cols.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.cols,\r\n                                      col,\r\n                                      cols[colIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"right\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                style={{ width: \"60%\", left: \"20%\" }}\r\n                                onClick={() => {\r\n                                  this.AreaEdit(table.cols, col);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </th>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n\r\n                    {rows.map((row, rowIndex) => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <th\r\n                            className=\"row-block\"\r\n                            style={\r\n                              row.color != null || row.color !== \"transparent\"\r\n                                ? { background: row.color }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <span>{row.name}</span>\r\n                            <div className=\"block-buttons\">\r\n                              {rowIndex === 0 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex - 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"above\"\r\n                                />\r\n                              )}\r\n                              {rowIndex === rows.length - 1 ? null : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.swapper(\r\n                                      table.rows,\r\n                                      row,\r\n                                      rows[rowIndex + 1]\r\n                                    );\r\n                                  }}\r\n                                  className=\"bottom\"\r\n                                />\r\n                              )}\r\n                              <button\r\n                                className=\"edit\"\r\n                                onClick={() => {\r\n                                  this.AreaEdit(table.rows, row);\r\n                                }}\r\n                                style={{\r\n                                  width: \"60%\",\r\n                                  height: \"50%\",\r\n                                  top: \"25%\",\r\n                                  left: \"20%\"\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </th>\r\n                          {cols.map((col, colIndex) => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    let toEdit = [\r\n                                      \"day\",\r\n                                      \"time\",\r\n                                      \"place\",\r\n                                      \"batch\",\r\n                                      \"subject\",\r\n                                      \"teacher\"\r\n                                    ];\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={toEdit.filter(p => {\r\n                                          if (\r\n                                            Object.keys(params).indexOf(p) < 0\r\n                                          ) {\r\n                                            return p;\r\n                                          }\r\n                                          return null;\r\n                                        })}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              return (\r\n                                <td\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block\"\r\n                                  style={{ background: lecture.color }}\r\n                                >\r\n                                  {lecture.display.map(thing => {\r\n                                    let loot = this.props[\r\n                                      keyList(thing)\r\n                                    ].filter(th => th.id === lecture[thing])[0];\r\n                                    if (loot != null) {\r\n                                      return (\r\n                                        <span\r\n                                          key={loot.name + lecture.id + \"thing\"}\r\n                                        >\r\n                                          {loot.name}\r\n                                        </span>\r\n                                      );\r\n                                    } else {\r\n                                      return (\r\n                                        <span\r\n                                          className=\"warning screen-element\"\r\n                                          style={{\r\n                                            textTransform: \"capitalize\"\r\n                                          }}\r\n                                        >\r\n                                          {loot} Error\r\n                                        </span>\r\n                                      );\r\n                                    }\r\n                                  })}\r\n\r\n                                  <div className=\"block-buttons\">\r\n                                    {rowIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"above\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i - 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {rowIndex === rows.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"bottom\"\r\n                                        onClick={() => {\r\n                                          let effectedRow = null;\r\n                                          rows.filter((r, i) => {\r\n                                            if (r.id === row.id) {\r\n                                              effectedRow = rows[i + 1];\r\n                                            }\r\n                                            return r;\r\n                                          });\r\n                                          if (effectedRow != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.rows)] =\r\n                                              effectedRow.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === cols.length - 1 ? null : (\r\n                                      <button\r\n                                        className=\"right\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i + 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    {colIndex === 0 ? null : (\r\n                                      <button\r\n                                        className=\"left\"\r\n                                        onClick={() => {\r\n                                          let effectedCol = null;\r\n                                          cols.filter((c, i) => {\r\n                                            if (c.id === col.id) {\r\n                                              effectedCol = cols[i - 1];\r\n                                            }\r\n                                            return c;\r\n                                          });\r\n                                          if (effectedCol != null) {\r\n                                            let to = { ...lecture };\r\n                                            to[listKey(table.cols)] =\r\n                                              effectedCol.id;\r\n                                            this.lectureSwap(block[0], to);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                    <button\r\n                                      className=\"edit\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"content\",\r\n                                          <LectureModal\r\n                                            id={lecture.id}\r\n                                            params={{ ...lecture }}\r\n                                            edit={[\r\n                                              \"subject\",\r\n                                              \"batch\",\r\n                                              \"teacher\"\r\n                                            ]}\r\n                                            mode=\"update\"\r\n                                          />\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <button\r\n                                      className=\"delete\"\r\n                                      onClick={() => {\r\n                                        this.props.showModal(\r\n                                          \"confirm\",\r\n                                          \"Are you sure ?\",\r\n                                          [\r\n                                            () => {\r\n                                              this.props.deleteLecture(\r\n                                                lecture.id\r\n                                              );\r\n                                            }\r\n                                          ]\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    {table.footer.text.length > 0 ? (\r\n                      <tr\r\n                        className=\"table-footer\"\r\n                        style={{ background: table.footer.color }}\r\n                      >\r\n                        <td colSpan={cols.length + 2}>\r\n                          <span>{table.footer.text}</span>\r\n\r\n                          <div className=\"block-buttons\">\r\n                            <button\r\n                              className=\"edit\"\r\n                              onClick={() => {\r\n                                this.ObjectEdit(\"table\", \"footer\", table);\r\n                              }}\r\n                            />\r\n                            <button\r\n                              className=\"delete\"\r\n                              onClick={() => {\r\n                                this.props.updateTable(table.id, {\r\n                                  ...table,\r\n                                  footer: { ...table.footer, text: \"\" }\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr className=\"screen-element\">\r\n                        <td colSpan={cols.length + 2}>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.ObjectEdit(\"table\", \"footer\", table);\r\n                            }}\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tfoot>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    updateTable,\r\n    updateLecture,\r\n    deleteLecture,\r\n    swapBatch,\r\n    swapDay,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTeacher,\r\n    swapTime,\r\n    updateBatch,\r\n    updateDay,\r\n    updatePlace,\r\n    updateSubject,\r\n    updateTeacher,\r\n    updateTime,\r\n    deleteBatch,\r\n    deleteDay,\r\n    deletePlace,\r\n    deleteSubject,\r\n    deleteTeacher,\r\n    deleteTime\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  listKey,\r\n  TABLE_HEADER_COLOR,\r\n  TABLE_FOOTER_COLOR,\r\n  TABLE_SIDEBAR_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\",\r\n      header: { text: \"\", color: TABLE_HEADER_COLOR },\r\n      footer: { text: \"\", color: TABLE_FOOTER_COLOR },\r\n      sidebar: { text: \"\", color: TABLE_SIDEBAR_COLOR }\r\n    },\r\n    quicker: {\r\n      base: \"days\",\r\n      rows: \"places\",\r\n      cols: \"times\",\r\n      header: \"\",\r\n      footer: \"\",\r\n      sidebar: \"\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.createTable({\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let {\r\n                  id,\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.updateTable(id, {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.header.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: {\r\n                        ...this.state.creator.header,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.header.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: { ...this.state.creator.header, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.footer.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: {\r\n                        ...this.state.creator.footer,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.footer.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: { ...this.state.creator.footer, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Sidebar</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.sidebar.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      sidebar: {\r\n                        ...this.state.creator.sidebar,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.sidebar.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      sidebar: { ...this.state.creator.sidebar, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.header}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, header: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.footer}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, footer: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols,\r\n                    header: {\r\n                      text: this.state.quicker.header,\r\n                      color: \"transparent\"\r\n                    },\r\n                    footer: {\r\n                      text: this.state.quicker.footer,\r\n                      color: \"transparent\"\r\n                    },\r\n                    sidebar: {\r\n                      text: this.state.quicker.sidebar,\r\n                      color: \"transparent\"\r\n                    }\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  LECTURE_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: [\"batch\", \"subject\", \"teacher\"],\r\n  mode: \"create\"\r\n};\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color,\r\n                  display: this.state.creator.display\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color,\r\n                  display: this.state.creator.display\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture, {\r\n                  id: this.state.creator.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.creator.color}\r\n                change={color => {\r\n                  this.setState({ creator: { ...this.state.creator, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Display </label>\r\n              <select\r\n                name=\"\"\r\n                id=\"\"\r\n                multiple\r\n                value={this.state.creator.display}\r\n                onChange={ex => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      display: [...ex.target.selectedOptions]\r\n                        .filter(({ selected }) => selected)\r\n                        .map(({ value }) => value)\r\n                    }\r\n                  });\r\n                }}\r\n                size=\"6\"\r\n              >\r\n                <option value=\"batch\">Batch</option>\r\n                <option value=\"teacher\">Teacher</option>\r\n                <option value=\"subject\">Subject</option>\r\n                <option value=\"place\">Place</option>\r\n                <option value=\"day\">Day</option>\r\n                <option value=\"time\">Time</option>\r\n              </select>\r\n\r\n              <span className=\"info\" style={{ display: \"inline\" }}>\r\n                <span>\r\n                  These things will be displayed in the table,Hold control to\r\n                  select multiple options\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div\r\n          key={lecture.id}\r\n          className=\"block\"\r\n          style={{\r\n            background:\r\n              lecture.color !== \"transparent\"\r\n                ? lecture.color\r\n                : \"rgb(179,178,178)\"\r\n          }}\r\n        >\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  ...DefaultCreator,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { BATCH_COLOR, batchValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: BATCH_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.createBatch(batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.updateBatch(this.state.creator.id, batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div\r\n                key={batch.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    batch.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : batch.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch,\r\n    showModal\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createDay,\r\n  updateDay,\r\n  swapDay,\r\n  deleteDay,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { DAY_COLOR, dayValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: DAY_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.createDay(day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.updateDay(this.state.creator.id, day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color</label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Days</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                let dayObj = { name: day, color: DAY_COLOR };\r\n                let validator = dayValidator(this.props.days, dayObj);\r\n                if (validator.value) {\r\n                  this.props.createDay(dayObj);\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div\r\n                key={day.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    day.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : day.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay,\r\n    showModal\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTime,\r\n  updateTime,\r\n  swapTime,\r\n  deleteTime,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { TIME_COLOR, timeValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TIME_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  fromTime: \"08\",\r\n  fromMeridian: \"AM\",\r\n  toTime: \"01\",\r\n  toMeridian: \"PM\",\r\n  lectureTime: \"60\",\r\n  color: TIME_COLOR\r\n};\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color</label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  let timeObj = { name: time, color: this.state.quicker.color };\r\n                  let validator = timeValidator(this.props.times, timeObj);\r\n                  if (validator.value) {\r\n                    this.props.createTime(timeObj);\r\n                  }\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.createTime(time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.updateTime(this.state.creator.id, time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"colorbtn\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Quick Times\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div\r\n                key={time.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    time.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : time.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime,\r\n    showModal\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { PLACE_COLOR, placeValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: PLACE_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  name: \"Room\",\r\n  from: \"1\",\r\n  to: \"10\",\r\n  color: PLACE_COLOR\r\n};\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  let placeObj = {\r\n                    name: place,\r\n                    color: this.state.quicker.color\r\n                  };\r\n                  let validator = placeValidator(this.props.places, placeObj);\r\n                  if (validator.value) {\r\n                    this.props.createPlace(placeObj);\r\n                  }\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.createPlace(place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.updatePlace(this.state.creator.id, place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div\r\n                key={place.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    place.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : place.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace,\r\n    showModal\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { SUBJECT_COLOR, subjectValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: SUBJECT_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.createSubject(subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.updateSubject(this.state.creator.id, subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Subjects</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div\r\n                key={subject.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    subject.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : subject.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject,\r\n    showModal\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher,\r\n  showModal\r\n} from \"../../actions\";\r\n\r\nimport { TEACHER_COLOR, teacherValidator } from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../others/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TEACHER_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(this.props.teachers, teacher);\r\n              if (validator.value) {\r\n                this.props.createTeacher(teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(this.props.teachers, teacher);\r\n              if (validator.value) {\r\n                this.props.updateTeacher(this.state.creator.id, teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Teachers</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div\r\n                key={teacher.id}\r\n                className=\"block\"\r\n                style={{\r\n                  background:\r\n                    teacher.color === \"transparent\"\r\n                      ? \"rgb(179, 178, 178)\"\r\n                      : teacher.color\r\n                }}\r\n              >\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher,\r\n    showModal\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deselectCollection } from \"../actions\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    window.onerror = function(e) {\r\n      this.props.deselectCollection();\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    deselectCollection\r\n  }\r\n)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.2.8;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}