{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","actions/downloader.js","components/others/LectureModal.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/Modal.js","components/App.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","keyList","keyName","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","id","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","display","unshowModal","message","createCollection","background","init","collection","set","selectCollection","getDataKey","createTable","table","createLecture","lecture","createDay","day","createTime","time","createPlace","place","createBatch","batch","createSubject","subject","createTeacher","teacher","DefaultSetupSettings","info","name","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","value","placeholder","required","style","color","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","filter","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","i","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","catch","ex","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","LectureModal","params","mode","updateLecture","list","defaultValue","Days","Times","Places","Batches","Subjects","Teachers","Screen","tableMode","downloader","refs","objector","marginTop","flexDirection","minWidth","ref","marginBottom","col","row","block","others_LectureModal","st","bh","tr","User","Tables","Lectures","creator","action","_this2$state$creator","_this2$state$creator2","updateTable","marginRight","deleteTable","quicker","margin","disabled","baseName","fontWeight","tableID","listshow","showitem","itemlist","lectCard","tm","pc","dy","deleteLecture","marginLeft","paddingBottom","lect","lectureID","updateBatch","swapBatch","deleteBatch","batchID","withID","current","future","newBatches","setDataKey","updateDay","swapDay","deleteDay","dayID","newDays","updateTime","swapTime","deleteTime","timeID","newTimes","updatePlace","swapPlace","deletePlace","placeID","newPlaces","updateSubject","swapSubject","deleteSubject","subjectID","newSubjects","updateTeacher","swapTeacher","deleteTeacher","teacherID","newTeachers","Display","changeDisplay","display_Screen","actor","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","Modal","modal","button","waiting","confirm","implement","System","App","components_Welcome","components_Modal","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.558c51d9.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08:00\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01:00\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth,\r\n          height: tableHeight\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth, tableHeight], \"landscape\");\r\n          }\r\n          doc.addImage(dataUrl, \"PNG\", 20, 20);\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, { bgcolor: \"#fff\" })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal, createLecture } from \"../../actions/\";\r\nimport { keyList } from \"../../actions/helpers\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      batch: null,\r\n      subject: null,\r\n      teacher: null,\r\n      ...params\r\n    };\r\n    return (\r\n      <div className=\"full-wrapper\">\r\n        <form\r\n          className=\"full-wrapper form-table flex-center\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let i = 0;\r\n            while (e.target[i] != null) {\r\n              if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                info[e.target[i].name] = e.target[i].value;\r\n                i++;\r\n              } else {\r\n                break;\r\n              }\r\n            }\r\n            if (this.props.mode === \"create\") {\r\n              this.props.createLecture(info);\r\n              this.props.unshowModal();\r\n            } else if (this.props.mode === \"update\") {\r\n              this.props.updateLecture(this.props.id, info);\r\n            }\r\n          }}\r\n        >\r\n          {Object.keys(info).map(key => {\r\n            let list = this.props[keyList(key)];\r\n            let value = params[key] != null ? params[key] : null;\r\n            if (value == null) {\r\n              return (\r\n                <div key={\"inp\" + key} className=\"form-row \">\r\n                  <label htmlFor={key} style={{ textTransform: \"capitalize\" }}>\r\n                    {key} &nbsp;\r\n                  </label>\r\n                  <select\r\n                    id={key}\r\n                    name={key}\r\n                    defaultValue={list.length > 0 ? list[0].id : null}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n          <div className=\"form-row\">\r\n            <label>\r\n              <button onClick={this.props.unshowModal}>Cancel</button>\r\n            </label>\r\n            <input\r\n              type=\"submit\"\r\n              style={{ textTransform: \"capitalize\" }}\r\n              value={this.props.mode || \"create\"}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createLecture, unshowModal }\r\n)(LectureModal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { showModal, unshowModal } from \"../../actions\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../others/LectureModal\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"pdfrender render\",\r\n                downloader: downloadPDF,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadJPEG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download JPEG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal();\r\n              this.setState({\r\n                tableMode: \"imgrender render\",\r\n                downloader: downloadPNG,\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download PNG\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null || rows == null || cols == null) {\r\n                return (\r\n                  <div\r\n                    className=\"warning screen-element\"\r\n                    style={{ marginBottom: 0 }}\r\n                  >\r\n                    There was a problem with one of the tables\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>{base != null ? base.name : null}</td>\r\n                      {cols.map(col => {\r\n                        return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows.map(row => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <td>{row.name}</td>\r\n                          {cols.map(col => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = block[0];\r\n                              let subject = this.props.subjects.filter(\r\n                                st => st.id === lecture.subject\r\n                              )[0];\r\n                              let batch = this.props.batches.filter(\r\n                                bh => bh.id === lecture.batch\r\n                              )[0];\r\n                              let teacher = this.props.teachers.filter(\r\n                                tr => tr.id === lecture.teacher\r\n                              )[0];\r\n                              return (\r\n                                <td\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block\"\r\n                                  onClick={() => {}}\r\n                                >\r\n                                  {batch != null ? (\r\n                                    <span>{batch.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Batch Error\r\n                                    </span>\r\n                                  )}\r\n                                  {subject != null ? (\r\n                                    <span>{subject.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Subject Error\r\n                                    </span>\r\n                                  )}\r\n                                  {teacher != null ? (\r\n                                    <span>{teacher.name}</span>\r\n                                  ) : (\r\n                                    <span className=\"warning screen-element\">\r\n                                      Teacher Error\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector).map(key => {\r\n                return (\r\n                  <option key={\"base\" + key} value={key}>\r\n                    {key}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                value={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {this.state.creator.baseValue !== null\r\n                  ? objector[this.state.creator.base].filter(\r\n                      item => item.id === this.state.creator.baseValue\r\n                    ).length > 0\r\n                    ? null\r\n                    : this.setState({\r\n                        creator: { ...this.state.creator, baseValue: null }\r\n                      })\r\n                  : null}\r\n                {objector[this.state.creator.base].map(item => {\r\n                  if (this.state.creator.baseValue == null) {\r\n                    this.setState({\r\n                      creator: { ...this.state.creator, baseValue: item.id }\r\n                    });\r\n                  }\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              value={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(key => key !== this.state.creator.base)\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              value={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              style={{ marginRight: \"1em\" }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.props.deleteTable(this.state.creator.id);\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { keyList } from \"../../actions/helpers\";\r\n\r\nimport { createLecture, updateLecture, deleteLecture } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createLecture({\r\n                batch: this.state.creator.batch,\r\n                subject: this.state.creator.subject,\r\n                teacher: this.state.creator.teacher,\r\n                place: this.state.creator.place,\r\n                day: this.state.creator.day,\r\n                time: this.state.creator.time\r\n              });\r\n            } else {\r\n              this.props.updateLecture(this.state.creator.id, {\r\n                batch: this.state.creator.batch,\r\n                subject: this.state.creator.subject,\r\n                teacher: this.state.creator.teacher,\r\n                place: this.state.creator.place,\r\n                day: this.state.creator.day,\r\n                time: this.state.creator.time\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          {Object.keys(objector).map(key => {\r\n            let list = objector[key];\r\n            if (this.state.creator[key] != null) {\r\n              if (\r\n                list.filter(item => item.id === this.state.creator[key])\r\n                  .length === 0\r\n              ) {\r\n                if (list.length > 0) {\r\n                  let creator = { ...this.state.creator };\r\n                  creator[key] = list[0].id;\r\n                  this.setState({ creator });\r\n                } else {\r\n                  let creator = { ...this.state.creator };\r\n                  creator[key] = null;\r\n                  this.setState({ creator });\r\n                }\r\n              }\r\n            }\r\n            return (\r\n              <div className=\"form-row\" key={key}>\r\n                <label\r\n                  htmlFor={key + \"sct\"}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {key}\r\n                </label>\r\n                <select\r\n                  name={key}\r\n                  id={key + \"sct\"}\r\n                  value={this.state.creator[key] || \"\"}\r\n                  required={true}\r\n                  onChange={x => {\r\n                    let y = {};\r\n                    y[key] = x.target.value;\r\n                    this.setState({ creator: { ...this.state.creator, ...y } });\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div key={lecture.id} className=\"block\">\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch\r\n} from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Batch\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map((batch, index) => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.batches.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapBatch(\r\n                          batch.id,\r\n                          this.props.batches[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createDay, updateDay, swapDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                this.props.createDay({ name: day });\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Day\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map((day, index) => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.days.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapDay(\r\n                          day.id,\r\n                          this.props.days[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTime, updateTime, swapTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Time\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map((time, index) => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.times.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTime(\r\n                          time.id,\r\n                          this.props.times[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace\r\n} from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Place\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map((place, index) => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.places.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapPlace(\r\n                          place.id,\r\n                          this.props.places[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject\r\n} from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Subject\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map((subject, index) => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.subjects.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapSubject(\r\n                          subject.id,\r\n                          this.props.subjects[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div className=\"full-wrapper flex-center\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Teacher\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map((teacher, index) => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  {index === 0 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index - 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      {\"<\"}\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {index === this.props.teachers.length - 1 ? null : (\r\n                    <button\r\n                      onClick={() => {\r\n                        this.props.swapTeacher(\r\n                          teacher.id,\r\n                          this.props.teachers[index + 1].id\r\n                        );\r\n                      }}\r\n                    >\r\n                      >\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.user == null ? <Welcome /> : <Display />}\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}