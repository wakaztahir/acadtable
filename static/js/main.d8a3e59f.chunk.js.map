{"version":3,"sources":["components/Header.js","components/display/Welcome.js","components/display/Select.js","components/display/AddBatches.js","components/display/Screen.js","components/display/index.js","storage/index.js","actions/index.js","actions/types.js","components/tables/index.js","components/reusables/Former.js","components/tables/Create.js","components/tables/Rename.js","components/batches/index.js","components/batches/Create.js","components/batches/Rename.js","components/App.js","reducers/TableList.js","reducers/BatchList.js","reducers/index.js","reducers/SelectedTable.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","Select","AddBatches","Screen","Display","display_Welcome","display_Select","display_AddBatches","display_Screen","this","props","list","length","welcomeMessage","selected","nothingSelected","addBatches","screen","connect","state","TableList","SelectedTable","storage","focus","Object","classCallCheck","data_prefix","sessionStorage","getItem","JSON","parse","ex","id","data","undefined","console","log","arguments","setItem","stringify","removeItem","name","session","getList","creation","push","saveList","saveData","newname","newlist","map","item","filter","deleteData","table","batch","renameTableById","rename","type","renameBatchById","Tables","_this","additional","SelectBtn","onClick","selectTableById","key","className","concat","deleteTableById","pathname","renderList","getData","delete","deleted","Input","_Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","value","change","event","setState","target","onChange","inherits","createClass","Former","values","Form","onSubmit","preventDefault","FormSubmit","children","formProps","CreateTable","onFormSubmit","createTableByName","history","_Former","Former_Input","assign","Math","random","toString","split","substr","create","RenameTable","handleSubmit","location","_this2","Batches","deleteBatchById","BatchList","CreateBatch","createBatchByName","RenameBatch","App","BrowserRouter","Route","path","component","exact","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.d8a3e59f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/tables\">\r\n            <button>Tables</button>\r\n          </Link>\r\n\r\n          <Link to=\"/batches\">\r\n            <button>Batches</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return <div>Welcome !!</div>;\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    return <div>Select a Table</div>;\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddBatches extends Component {\r\n  render() {\r\n    return <div>You have no batches in the selected table</div>;\r\n  }\r\n}\r\n\r\nexport default AddBatches;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    return <div>This is the actual Displayer</div>;\r\n  }\r\n}\r\n\r\nexport default Screen;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport Select from \"./Select\";\r\nimport AddBatches from \"./AddBatches\";\r\nimport Screen from \"./Screen\";\r\n\r\nclass Display extends Component {\r\n  welcomeMessage() {\r\n    return <Welcome />;\r\n  }\r\n  nothingSelected() {\r\n    return <Select />;\r\n  }\r\n  addBatches() {\r\n    return <AddBatches />;\r\n  }\r\n  screen() {\r\n    return <Screen />;\r\n  }\r\n  render() {\r\n    if (this.props.list.length === 0) {\r\n      return this.welcomeMessage();\r\n    } else if (this.props.selected === null) {\r\n      return this.nothingSelected();\r\n    } else if (this.props.selected !== null) {\r\n      if (this.props.selected.list.length === 0) {\r\n        return this.addBatches();\r\n      } else {\r\n        return this.screen();\r\n      }\r\n    } else {\r\n      return <div>We cannot figure out the display</div>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TableList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Display);\r\n","class storage {\r\n  constructor(focus) {\r\n    if (focus === \"batch\") {\r\n      this.focus = focus;\r\n      this.list = \"batches-list\";\r\n      this.data_prefix = \"bt-\";\r\n    } else if (focus === \"table\") {\r\n      this.focus = focus;\r\n      this.list = \"tables-list\";\r\n      this.data_prefix = \"td-\";\r\n    }\r\n  }\r\n  getList() {\r\n    let list = sessionStorage.getItem(this.list) || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  getData(id) {\r\n    let data = sessionStorage.getItem(this.data_prefix + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      console.log(data);\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  saveList(list = []) {\r\n    sessionStorage.setItem(this.list, JSON.stringify(list));\r\n  }\r\n  saveData(id, data = {}) {\r\n    sessionStorage.setItem(this.data_prefix + id, JSON.stringify(data));\r\n  }\r\n  deleteData(id) {\r\n    sessionStorage.removeItem(this.data_prefix + id);\r\n  }\r\n  create(name, id) {\r\n    let session = new storage(this.focus);\r\n    let list = session.getList();\r\n    let creation = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      list: []\r\n    };\r\n    list.push(creation);\r\n    session.saveList(list);\r\n    session.saveData(id, data);\r\n  }\r\n  rename(newname, id) {\r\n    let session = new storage(this.focus);\r\n    let list = session.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    session.saveList(newlist);\r\n  }\r\n  delete(id) {\r\n    let session = new storage(this.focus);\r\n    let list = session.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    session.saveList(newlist);\r\n    session.deleteData(id);\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../storage\";\r\nimport {\r\n  CREATE_TABLE,\r\n  SELECT_TABLE,\r\n  RENAME_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BATCH,\r\n  RENAME_BATCH,\r\n  DELETE_BATCH\r\n} from \"./types\";\r\n\r\nlet table = new storage(\"table\");\r\nlet batch = new storage(\"batch\");\r\n\r\nexport const createTableByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(0, 5);\r\n  table.create(name, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: CREATE_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const selectTableById = id => {\r\n  let tableData = table.getData(id);\r\n  return {\r\n    type: SELECT_TABLE,\r\n    table: tableData\r\n  };\r\n};\r\nexport const renameTableById = (newname, id) => {\r\n  table.rename(newname, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: RENAME_TABLE,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteTableById = id => {\r\n  table.delete(id);\r\n  let list = table.getList();\r\n  return {\r\n    type: DELETE_TABLE,\r\n    deleted: id,\r\n    list\r\n  };\r\n};\r\n\r\nexport const createBatchByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(0, 5);\r\n  batch.create(name, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: CREATE_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const renameBatchById = (newname, id) => {\r\n  batch.rename(newname, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: RENAME_BATCH,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteBatchById = id => {\r\n  batch.delete(id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: DELETE_BATCH,\r\n    list\r\n  };\r\n};\r\n","export const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const SELECT_TABLE = \"SELECT_TABLE\";\r\nexport const RENAME_TABLE = \"RENAME_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const RENAME_BATCH = \"RENAME_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  selectTableById,\r\n  renameTableById,\r\n  deleteTableById\r\n} from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      let additional = \"\";\r\n      let SelectBtn = () => {\r\n        return null;\r\n      };\r\n      if (this.props.selected !== null && this.props.selected.id === item.id) {\r\n        additional = \"selected-table\";\r\n      } else {\r\n        SelectBtn = () => {\r\n          return (\r\n            <button onClick={() => this.props.selectTableById(item.id)}>\r\n              Select\r\n            </button>\r\n          );\r\n        };\r\n      }\r\n      return (\r\n        <div key={item.id} className={`table-card ${additional}`}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <SelectBtn />\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteTableById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link to={{ pathname: \"/tables/rename\", id: item.id }}>\r\n              <button>Rename</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <Link to=\"/tables/create\">\r\n              <button>Create A Table</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TableList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectTableById,\r\n    renameTableById,\r\n    deleteTableById\r\n  }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nfunction Former(name) {\r\n  const values = {};\r\n  const FormSubmit = (event, onSubmit = () => {}) => {\r\n    event.preventDefault();\r\n\r\n    onSubmit(values);\r\n  };\r\n  const Form = props => {\r\n    return (\r\n      <form\r\n        onSubmit={event => {\r\n          FormSubmit(event, props.onSubmit);\r\n        }}\r\n      >\r\n        {props.children}\r\n      </form>\r\n    );\r\n  };\r\n  const formProps = {\r\n    onChange: function(name, value) {\r\n      if (name !== undefined) {\r\n        values[name] = value;\r\n      }\r\n    }\r\n  };\r\n  return {\r\n    Form,\r\n    formProps\r\n  };\r\n}\r\n\r\nexport class Input extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n    value: this.props.value || \"\"\r\n  };\r\n  change = event => {\r\n    this.setState({\r\n      name: this.props.name,\r\n      value: event.target.value\r\n    });\r\n    this.props.onChange(this.props.name, event.target.value);\r\n  };\r\n  componentDidMount() {\r\n    this.props.onChange(this.state.name, this.state.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <input\r\n        type={this.props.type || \"text\"}\r\n        name={this.props.name}\r\n        onChange={this.change}\r\n        value={this.state.value}\r\n        className={this.props.className || null}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Former;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTableByName } from \"../../actions\";\r\n\r\nclass CreateTable extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createTableByName(values[\"name\"]);\r\n    this.props.history.push(\"/tables\");\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <Input name=\"name\" {...formProps} />\r\n        <Input name=\"submit\" type=\"submit\" value=\"Submit\" {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createTableByName\r\n  }\r\n)(CreateTable);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameTableById } from \"../../actions\";\r\n\r\nclass RenameTable extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameTableById(values.newname, this.props.location.id);\r\n    this.props.history.push(\"/tables\");\r\n  };\r\n  render() {\r\n    if (this.props.location.id === undefined) {\r\n      this.props.history.push(\"/tables\");\r\n    } else {\r\n      let session = new storage(\"table\");\r\n      let table = session\r\n        .getList()\r\n        .filter(item => item.id === this.props.location.id)[0];\r\n      const { Form, formProps } = Former(\"rename\");\r\n      return (\r\n        <div>\r\n          {table.name}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"newname\" {...formProps} />\r\n            <Input type=\"submit\" value=\"Rename\" {...formProps} />\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameTableById\r\n  }\r\n)(RenameTable);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameBatchById, deleteBatchById } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      return (\r\n        <div className=\"batch-card\" key={item.id}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteBatchById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link to={{ pathname: \"/batches/rename\", id: item.id }}>\r\n              <button>Rename</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <Link to=\"/batches/create\">\r\n              <button>Create A Batch</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.BatchList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    renameBatchById,\r\n    deleteBatchById\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createBatchByName } from \"../../actions\";\r\n\r\nclass CreateBatch extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createBatchByName(values[\"name\"]);\r\n    this.props.history.push(\"/batches\");\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <Input name=\"name\" {...formProps} />\r\n        <Input name=\"submit\" type=\"submit\" value=\"Submit\" {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBatchByName\r\n  }\r\n)(CreateBatch);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameBatchById } from \"../../actions\";\r\n\r\nclass RenameBatch extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameBatchById(values.newname, this.props.location.id);\r\n    this.props.history.push(\"/batches\");\r\n  };\r\n  render() {\r\n    if (this.props.location.id === undefined) {\r\n      this.props.history.push(\"/batches\");\r\n    } else {\r\n      let session = new storage(\"batch\");\r\n      let table = session\r\n        .getList()\r\n        .filter(item => item.id === this.props.location.id)[0];\r\n      const { Form, formProps } = Former(\"rename\");\r\n      return (\r\n        <div>\r\n          {table.name}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"newname\" {...formProps} />\r\n            <Input type=\"submit\" value=\"Rename\" {...formProps} />\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameBatchById\r\n  }\r\n)(RenameBatch);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Tables from \"./tables\";\r\nimport CreateTable from \"./tables/Create\";\r\nimport RenameTable from \"./tables/Rename\";\r\n//Batches Import\r\nimport Batches from \"./batches\";\r\nimport CreateBatch from \"./batches/Create\";\r\nimport RenameBatch from \"./batches/Rename\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n            <Route path=\"/tables\" exact component={Tables} />\r\n            <Route path=\"/tables/create\" exact component={CreateTable} />\r\n            <Route path=\"/tables/rename\" exact component={RenameTable} />\r\n\r\n            <Route path=\"/batches\" exact component={Batches} />\r\n            <Route path=\"/batches/create\" exact component={CreateBatch} />\r\n            <Route path=\"/batches/rename\" exact component={RenameBatch} />\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { CREATE_TABLE, RENAME_TABLE, DELETE_TABLE } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"table\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_TABLE:\r\n    case RENAME_TABLE:\r\n    case DELETE_TABLE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CREATE_BATCH, RENAME_BATCH, DELETE_BATCH } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"batch\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_BATCH:\r\n    case RENAME_BATCH:\r\n    case DELETE_BATCH:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport TableList from \"./TableList\";\r\nimport BatchList from \"./BatchList\";\r\nimport SelectedTable from \"./SelectedTable\";\r\n\r\nexport default combineReducers({ TableList, BatchList, SelectedTable });\r\n","import { SELECT_TABLE, DELETE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let selected_table = action.table || null;\r\n      return selected_table;\r\n    case DELETE_TABLE:\r\n      if (state !== null && action.deleted === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}