{"version":3,"sources":["components/Header.js","storage/index.js","actions/index.js","actions/types.js","components/tables/index.js","components/reusables/Former.js","components/tables/Create.js","components/tables/Rename.js","components/batches/index.js","components/batches/Create.js","components/batches/Rename.js","components/App.js","reducers/TableList.js","reducers/BatchList.js","reducers/index.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","storage","focus","Object","classCallCheck","this","list","data_prefix","sessionStorage","getItem","JSON","parse","ex","id","data","undefined","arguments","length","setItem","stringify","name","session","getList","table","push","saveList","newname","newlist","map","item","filter","batch","renameTableById","rename","type","renameBatchById","Tables","_this","props","key","className","onClick","deleteTableById","pathname","renderList","connect","state","TableList","delete","Input","_Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","value","change","event","setState","target","onChange","inherits","createClass","Former","values","Form","onSubmit","preventDefault","FormSubmit","children","formProps","CreateTable","onFormSubmit","createTableByName","history","_Former","Former_Input","assign","Math","random","toString","split","substr","create","RenameTable","handleSubmit","location","_this2","Batches","deleteBatchById","BatchList","CreateBatch","createBatchByName","RenameBatch","App","BrowserRouter","Route","path","component","exact","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.2c484ebf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/tables\">\r\n            <button>Tables</button>\r\n          </Link>\r\n\r\n          <Link to=\"/batches\">\r\n            <button>Batches</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","class storage {\r\n  constructor(focus) {\r\n    if (focus === \"batch\") {\r\n      this.focus = focus;\r\n      this.list = \"batches-list\";\r\n      this.data_prefix = \"bt-\";\r\n    } else if (focus === \"table\") {\r\n      this.focus = focus;\r\n      this.list = \"tables-list\";\r\n      this.data_prefix = \"td-\";\r\n    }\r\n  }\r\n  getList() {\r\n    let list = sessionStorage.getItem(this.list) || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  getData(id) {\r\n    let data = sessionStorage.getItem(this.data_prefix + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  saveList(list = []) {\r\n    sessionStorage.setItem(this.list, JSON.stringify(list));\r\n  }\r\n  saveData(id, data = {}) {\r\n    sessionStorage.setItem(this.data_prefix + id, JSON.stringify(data));\r\n  }\r\n  create(name, id) {\r\n    let session = new storage(this.focus);\r\n    let list = session.getList();\r\n    let table = {\r\n      name,\r\n      id\r\n    };\r\n    list.push(table);\r\n    session.saveList(list);\r\n  }\r\n  rename(newname, id) {\r\n    let session = new storage(this.focus);\r\n    let list = session.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    session.saveList(newlist);\r\n  }\r\n  delete(id) {\r\n    let session = new storage(this.focus);\r\n    let list = session.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    session.saveList(newlist);\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../storage\";\r\nimport {\r\n  CREATE_TABLE,\r\n  RENAME_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BATCH,\r\n  RENAME_BATCH,\r\n  DELETE_BATCH\r\n} from \"./types\";\r\n\r\nlet table = new storage(\"table\");\r\nlet batch = new storage(\"batch\");\r\n\r\nexport const createTableByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(0, 5);\r\n  table.create(name, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: CREATE_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const renameTableById = (newname, id) => {\r\n  table.rename(newname, id);\r\n  let list = table.getList();\r\n  return {\r\n    type: RENAME_TABLE,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteTableById = id => {\r\n  table.delete(id);\r\n  let list = table.getList();\r\n  return {\r\n    type: DELETE_TABLE,\r\n    list\r\n  };\r\n};\r\n\r\nexport const createBatchByName = name => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(0, 5);\r\n  batch.create(name, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: CREATE_BATCH,\r\n    list\r\n  };\r\n};\r\nexport const renameBatchById = (newname, id) => {\r\n  batch.rename(newname, id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: RENAME_BATCH,\r\n    list\r\n  };\r\n};\r\n\r\nexport const deleteBatchById = id => {\r\n  batch.delete(id);\r\n  let list = batch.getList();\r\n  return {\r\n    type: DELETE_BATCH,\r\n    list\r\n  };\r\n};\r\n","export const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const RENAME_TABLE = \"RENAME_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const RENAME_BATCH = \"RENAME_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameTableById, deleteTableById } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      return (\r\n        <div key={item.id} className=\"table-card\">\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteTableById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link to={{ pathname: \"/tables/rename\", id: item.id }}>\r\n              <button>Rename</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <Link to=\"/tables/create\">\r\n              <button>Create A Table</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TableList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    renameTableById,\r\n    deleteTableById\r\n  }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nfunction Former(name) {\r\n  const values = {};\r\n  const FormSubmit = (event, onSubmit = () => {}) => {\r\n    event.preventDefault();\r\n\r\n    onSubmit(values);\r\n  };\r\n  const Form = props => {\r\n    return (\r\n      <form\r\n        onSubmit={event => {\r\n          FormSubmit(event, props.onSubmit);\r\n        }}\r\n      >\r\n        {props.children}\r\n      </form>\r\n    );\r\n  };\r\n  const formProps = {\r\n    onChange: function(name, value) {\r\n      if (name !== undefined) {\r\n        values[name] = value;\r\n      }\r\n    }\r\n  };\r\n  return {\r\n    Form,\r\n    formProps\r\n  };\r\n}\r\n\r\nexport class Input extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n    value: this.props.value || \"\"\r\n  };\r\n  change = event => {\r\n    this.setState({\r\n      name: this.props.name,\r\n      value: event.target.value\r\n    });\r\n    this.props.onChange(this.props.name, event.target.value);\r\n  };\r\n  componentDidMount() {\r\n    this.props.onChange(this.state.name, this.state.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <input\r\n        type={this.props.type || \"text\"}\r\n        name={this.props.name}\r\n        onChange={this.change}\r\n        value={this.state.value}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Former;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTableByName } from \"../../actions\";\r\n\r\nclass CreateTable extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createTableByName(values[\"name\"]);\r\n    this.props.history.push(\"/tables\");\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <Input name=\"name\" {...formProps} />\r\n        <Input name=\"submit\" type=\"submit\" value=\"Submit\" {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createTableByName\r\n  }\r\n)(CreateTable);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameTableById } from \"../../actions\";\r\n\r\nclass RenameTable extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameTableById(values.newname, this.props.location.id);\r\n    this.props.history.push(\"/tables\");\r\n  };\r\n  render() {\r\n    if (this.props.location.id === undefined) {\r\n      this.props.history.push(\"/tables\");\r\n    } else {\r\n      let session = new storage(\"table\");\r\n      let table = session\r\n        .getList()\r\n        .filter(item => item.id === this.props.location.id)[0];\r\n      const { Form, formProps } = Former(\"rename\");\r\n      return (\r\n        <div>\r\n          {table.name}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"newname\" {...formProps} />\r\n            <Input type=\"submit\" value=\"Rename\" {...formProps} />\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameTableById\r\n  }\r\n)(RenameTable);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameBatchById, deleteBatchById } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  renderList() {\r\n    return this.props.list.map(item => {\r\n      return (\r\n        <div className=\"batch-card\" key={item.id}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteBatchById(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link to={{ pathname: \"/batches/rename\", id: item.id }}>\r\n              <button>Rename</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Batches</h1>\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <Link to=\"/batches/create\">\r\n              <button>Create A Batch</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"list-container\">{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.BatchList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    renameBatchById,\r\n    deleteBatchById\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createBatchByName } from \"../../actions\";\r\n\r\nclass CreateBatch extends Component {\r\n  onFormSubmit = values => {\r\n    this.props.createBatchByName(values[\"name\"]);\r\n    this.props.history.push(\"/batches\");\r\n  };\r\n  render() {\r\n    const { Form, formProps } = Former(\"create\");\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <Input name=\"name\" {...formProps} />\r\n        <Input name=\"submit\" type=\"submit\" value=\"Submit\" {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBatchByName\r\n  }\r\n)(CreateBatch);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../storage\";\r\nimport Former, { Input } from \"../reusables/Former\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { renameBatchById } from \"../../actions\";\r\n\r\nclass RenameBatch extends Component {\r\n  handleSubmit = values => {\r\n    this.props.renameBatchById(values.newname, this.props.location.id);\r\n    this.props.history.push(\"/batches\");\r\n  };\r\n  render() {\r\n    if (this.props.location.id === undefined) {\r\n      this.props.history.push(\"/batches\");\r\n    } else {\r\n      let session = new storage(\"batch\");\r\n      let table = session\r\n        .getList()\r\n        .filter(item => item.id === this.props.location.id)[0];\r\n      const { Form, formProps } = Former(\"rename\");\r\n      return (\r\n        <div>\r\n          {table.name}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"newname\" {...formProps} />\r\n            <Input type=\"submit\" value=\"Rename\" {...formProps} />\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    renameBatchById\r\n  }\r\n)(RenameBatch);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./Header\";\r\n//Tables Import\r\nimport Tables from \"./tables\";\r\nimport CreateTable from \"./tables/Create\";\r\nimport RenameTable from \"./tables/Rename\";\r\n//Batches Import\r\nimport Batches from \"./batches\";\r\nimport CreateBatch from \"./batches/Create\";\r\nimport RenameBatch from \"./batches/Rename\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/tables\" exact component={Tables} />\r\n            <Route path=\"/tables/create\" exact component={CreateTable} />\r\n            <Route path=\"/tables/rename\" exact component={RenameTable} />\r\n\r\n            <Route path=\"/batches\" exact component={Batches} />\r\n            <Route path=\"/batches/create\" exact component={CreateBatch} />\r\n            <Route path=\"/batches/rename\" exact component={RenameBatch} />\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { CREATE_TABLE, RENAME_TABLE, DELETE_TABLE } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"table\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_TABLE:\r\n    case RENAME_TABLE:\r\n    case DELETE_TABLE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CREATE_BATCH, RENAME_BATCH, DELETE_BATCH } from \"../actions/types\";\r\nimport storage from \"../storage\";\r\n\r\nlet session = new storage(\"batch\");\r\n\r\nexport default (state = session.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_BATCH:\r\n    case RENAME_BATCH:\r\n    case DELETE_BATCH:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport TableList from \"./TableList\";\r\nimport BatchList from \"./BatchList\";\r\n\r\nexport default combineReducers({ TableList, BatchList });\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}