{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/Welcome.js","components/display/Screen.js","components/display/index.js","components/App.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","removeItem","id","userdata","assign","tobedeleted","storage","user","collections","local","session","tables","getDataItem","batches","days","places","times","lectures","subjects","teachers","setDataItem","forEach","key","dm","delData","values","s","console","warning","delDataItem","selectCollection","init","type","payload","Welcome","state","ftDisplay","collectionName","collectionDesc","_this2","react_default","a","createElement","onClick","setState","onSubmit","event","preventDefault","props","createCollection","name","desc","className","htmlFor","onChange","target","value","placeholder","required","_this3","displayCreate","disabled","exampleCollection","_this4","map","coll","copyCollection","deleteCollection","firstTime","screen","Component","connect","Collections","collection","set","get","Example","deleted","delete","Screen","_this","objector","table","base","filter","i","baseValue","rows","cols","col","row","block","params","displayAddModal","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","Display","display","display_Screen","deselectCollection","btn","style","textTransform","ref","actor","User","createBlock","collectionID","App","components_Welcome","combineReducers","action","list","concat","toConsumableArray","objectSpread","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.962799f5.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_BLOCK: \"CREATE_BLOCK\",\r\n  UPDATE_BLOCK: \"UPDATE_BLOCK\",\r\n  DELETE_BLOCK: \"DELETE_BLOCK\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    let data = this.getData();\r\n    if (data[id] != null) {\r\n      data[id] = Object.assign(data[id], this.validator(userdata));\r\n    } else {\r\n      data[id] = this.validator(userdata);\r\n    }\r\n    data[id].id = id;\r\n    this.setData(data);\r\n    return this.validator(userdata);\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let data = {};\r\n    Object.keys(this.session).forEach(key => {\r\n      let dm = new datamanager(\"session\", key);\r\n      data[key] = dm.getData();\r\n    });\r\n    return data;\r\n  }\r\n  getDataItem(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  setDataItem(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataItem(\"tables\"),\r\n      days: storage.getDataItem(\"days\"),\r\n      places: storage.getDataItem(\"places\"),\r\n      lectures: storage.getDataItem(\"lectures\"),\r\n      batches: storage.getDataItem(\"batches\"),\r\n      times: storage.getDataItem(\"times\"),\r\n      subjects: storage.getDataItem(\"subjects\"),\r\n      teachers: storage.getDataItem(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTable = (collectionID, tableID, data) => {\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTable = (collectionID, tableID) => {\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateBlock = (collectionID, blockID, data) => {\r\n  return {\r\n    type: types.UPDATE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteBlock = (collectionID, blockID) => {\r\n  return {\r\n    type: types.DELETE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateDay = (collectionID, dayID, data) => {\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteDay = (collectionID, dayID) => {\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTime = (collectionID, timeID, data) => {\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTime = (collectionID, timeID) => {\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updatePlace = (collectionID, placeID, data) => {\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deletePlace = (collectionID, placeID) => {\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateBatch = (collectionID, batchID, data) => {\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteBatch = (collectionID, batchID) => {\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateSubject = (collectionID, subjectID, data) => {\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteSubject = (collectionID, subjectID) => {\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTeacher = (collectionID, teacherID, data) => {\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTeacher = (collectionID, teacherID) => {\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection\r\n} from \"../actions\";\r\n\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return objector.tables.map(table => {\r\n      let base = objector[table.base].filter(i => i.id === table.baseValue)[0];\r\n      let rows = objector[table.rows];\r\n      let cols = objector[table.cols];\r\n      return (\r\n        <div key={table.id}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>{base != null ? base.name : null}</td>\r\n                {cols.map(col => {\r\n                  return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map(row => {\r\n                return (\r\n                  <tr key={\"r\" + row.id}>\r\n                    <td>{row.name}</td>\r\n                    {cols.map(col => {\r\n                      let block = objector[\"lectures\"].filter(\r\n                        block =>\r\n                          block[listKey(table.base)] === base.id &&\r\n                          block[listKey(table.rows)] === row.id &&\r\n                          block[listKey(table.cols)] === col.id\r\n                      );\r\n                      if (block.length === 0) {\r\n                        // if (this.state.mode === \"print\") {\r\n                        //   return <td key={\"emp\" + col.id} />;\r\n                        // }\r\n                        return (\r\n                          <td\r\n                            onClick={() => {\r\n                              let params = {};\r\n                              params[listKey(table.base)] = base.id;\r\n                              params[listKey(table.rows)] = row.id;\r\n                              params[listKey(table.cols)] = col.id;\r\n                              this.props.displayAddModal(params);\r\n                            }}\r\n                            key={\"b\" + col.id}\r\n                          >\r\n                            <button>+</button>\r\n                          </td>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <td key={\"b\" + col.id} className=\"table-block\">\r\n                            {block[0].name}\r\n                          </td>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\n\r\n// import Modal from \"../Modal\";\r\n// import FormEditor from \"../collections/areas/FormEditor\";\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import domtoimage from \"dom-to-image\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createBlock\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\"\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div ref=\"screen\" className=\"full-wrapper flex-center\">\r\n          {this.actor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createBlock\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    if (this.props.user == null) {\r\n      return <Welcome />;\r\n    } else {\r\n      return <Display />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TABLE:\r\n      return action.payload.tables;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      // case types.CREATE_PLACE:\r\n      // case types.UPDATE_PLACE:\r\n      // case types.DELETE_PLACE:\r\n      return action.payload.places;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_BATCH:\r\n    case types.UPDATE_BATCH:\r\n    case types.DELETE_BATCH:\r\n      return action.payload.batches;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.days;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TIME:\r\n      return action.payload.times;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_BLOCK:\r\n      return action.payload.lectures;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_SUBJECT:\r\n    case types.UPDATE_SUBJECT:\r\n    case types.DELETE_SUBJECT:\r\n      return action.payload.subjects;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TEACHER:\r\n      return action.payload.teachers;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}