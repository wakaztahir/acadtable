{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/Welcome.js","components/display/Block.js","components/display/Table.js","components/Modal.js","components/collections/areas/FormEditor.js","components/display/index.js","components/App.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","removeItem","id","userdata","assign","tobedeleted","storage","user","collections","local","session","tables","getDataItem","batches","days","places","times","lectures","subjects","teachers","setDataItem","forEach","key","dm","delData","values","s","console","warning","delDataItem","selectCollection","init","type","payload","Welcome","state","ftDisplay","collectionName","collectionDesc","_this2","react_default","a","createElement","onClick","setState","onSubmit","event","preventDefault","props","createCollection","name","desc","className","htmlFor","onChange","target","value","placeholder","required","_this3","displayCreate","disabled","exampleCollection","_this4","map","coll","copyCollection","deleteCollection","firstTime","screen","Component","connect","Collections","collection","set","get","Example","deleted","delete","Block","string","pattern","indexOf","words","match","replace","push","variable","block","filter","b","batch","day","time","place","teacher","subject","_this","display","p","getTextFor","selected","SelectedCollection","TablesList","DaysList","PlacesList","TimesList","BatchesList","SubjectsList","TeachersList","Table","blocks","base","BaseBlockKey","baseBlockKey","rows","RowsBlockKey","rowsBlockKey","cols","ColsBlockKey","colsBlockKey","mode","col","row","params","displayAddModal","display_Block","deleteBlock","collectionID","BlocksList","blockID","Modal","modalType","content","cancel","message","okFunction","contentModal","yesFunction","cancelFunction","messageModal","confirmModal","yes","children","FormEditor","property","saveForm","k","default","list","save","nounmount","style","width","flexDirection","justifyContent","alignItems","x","show","keyType","newvalue","locked","defaultValue","item","field","Display","download","downloadType","addModal","addModalParams","refs","doc","jsPDF","orientation","fromHTML","domtoimage","toPng","bgcolor","then","dataUrl","link","document","href","click","catch","error","toJpeg","downloadPDF","downloadPNG","downloadJPEG","components_Modal","areas_FormEditor","createBlock","_this$props","objector","ref","table","i","baseValue","display_Table","listName","User","Tables","Days","Places","Times","Blocks","Batches","Subjects","Teachers","App","components_Welcome","combineReducers","action","concat","toConsumableArray","objectSpread","Lectures","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.25f00960.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_BLOCK: \"CREATE_BLOCK\",\r\n  UPDATE_BLOCK: \"UPDATE_BLOCK\",\r\n  DELETE_BLOCK: \"DELETE_BLOCK\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    let data = this.getData();\r\n    if (data[id] != null) {\r\n      data[id] = Object.assign(data[id], this.validator(userdata));\r\n    } else {\r\n      data[id] = this.validator(userdata);\r\n    }\r\n    data[id].id = id;\r\n    this.setData(data);\r\n    return this.validator(userdata);\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let data = {};\r\n    Object.keys(this.session).forEach(key => {\r\n      let dm = new datamanager(\"session\", key);\r\n      data[key] = dm.getData();\r\n    });\r\n    return data;\r\n  }\r\n  getDataItem(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  setDataItem(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataItem(\"tables\"),\r\n      days: storage.getDataItem(\"days\"),\r\n      places: storage.getDataItem(\"places\"),\r\n      lectures: storage.getDataItem(\"lectures\"),\r\n      batches: storage.getDataItem(\"batches\"),\r\n      times: storage.getDataItem(\"times\"),\r\n      subjects: storage.getDataItem(\"subjects\"),\r\n      teachers: storage.getDataItem(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTable = (collectionID, tableID, data) => {\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTable = (collectionID, tableID) => {\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateBlock = (collectionID, blockID, data) => {\r\n  return {\r\n    type: types.UPDATE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteBlock = (collectionID, blockID) => {\r\n  return {\r\n    type: types.DELETE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateDay = (collectionID, dayID, data) => {\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteDay = (collectionID, dayID) => {\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTime = (collectionID, timeID, data) => {\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTime = (collectionID, timeID) => {\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updatePlace = (collectionID, placeID, data) => {\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deletePlace = (collectionID, placeID) => {\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateBatch = (collectionID, batchID, data) => {\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteBatch = (collectionID, batchID) => {\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateSubject = (collectionID, subjectID, data) => {\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteSubject = (collectionID, subjectID) => {\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTeacher = (collectionID, teacherID, data) => {\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTeacher = (collectionID, teacherID) => {\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection\r\n} from \"../actions\";\r\n\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Block extends Component {\r\n  pattern(string) {\r\n    let pattern = [];\r\n    while (string.indexOf(\"%\") > -1) {\r\n      let regExp = /%(.*?)%/;\r\n      let words = string.match(regExp);\r\n      string = string.replace(words[0], \"\");\r\n      pattern.push(words[1]);\r\n    }\r\n    return pattern;\r\n  }\r\n  getTextFor(variable, block) {\r\n    switch (variable) {\r\n      case \"batch\":\r\n        return this.props.batches.filter(b => b.id === block.batch)[0].name;\r\n      case \"day\":\r\n        return this.props.days.filter(b => b.id === block.day)[0].name;\r\n      case \"time\":\r\n        return this.props.times.filter(b => b.id === block.time)[0].name;\r\n      case \"place\":\r\n        return this.props.places.filter(b => b.id === block.place)[0].name;\r\n      case \"teacher\":\r\n        return this.props.teachers.filter(b => b.id === block.teacher)[0].name;\r\n      case \"subject\":\r\n        return this.props.subjects.filter(b => b.id === block.subject)[0].name;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n  render() {\r\n    let block = this.props.block;\r\n    let pattern = this.pattern(block.display);\r\n    return (\r\n      <div className=\"block\">\r\n        {pattern.map(p => {\r\n          return <div key={\"blp\" + p}>{this.getTextFor(p, block)}</div>;\r\n        })}\r\n        <button\r\n          onClick={() => {\r\n            this.props.delete(block.id);\r\n          }}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selected: state.SelectedCollection,\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Block);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Block from \"./Block\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deleteBlock } from \"../../actions\";\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    blocks: this.props.blocks\r\n  };\r\n  render() {\r\n    let base = this.props.base;\r\n    let BaseBlockKey = this.props.baseBlockKey;\r\n    let rows = this.props.rows;\r\n    let RowsBlockKey = this.props.rowsBlockKey;\r\n    let cols = this.props.cols;\r\n    let ColsBlockKey = this.props.colsBlockKey;\r\n    let blocks = this.state.blocks;\r\n    let mode = this.props.mode;\r\n    return (\r\n      <div key={this.props.id}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td>{base != null ? base.name : null}</td>\r\n              {cols.map(col => {\r\n                return <td key={\"c\" + col.id}>{col.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map(row => {\r\n              return (\r\n                <tr key={\"r\" + row.id}>\r\n                  <td>{row.name}</td>\r\n                  {cols.map(col => {\r\n                    let block = blocks.filter(\r\n                      block =>\r\n                        block[BaseBlockKey] === base.id &&\r\n                        block[RowsBlockKey] === row.id &&\r\n                        block[ColsBlockKey] === col.id\r\n                    );\r\n                    if (block.length === 0) {\r\n                      if (mode === \"print\") {\r\n                        return <td key={\"emp\" + col.id} />;\r\n                      }\r\n                      return (\r\n                        <td\r\n                          onClick={() => {\r\n                            let params = {};\r\n                            params[BaseBlockKey] = base.id;\r\n                            params[RowsBlockKey] = row.id;\r\n                            params[ColsBlockKey] = col.id;\r\n                            this.props.displayAddModal(params);\r\n                          }}\r\n                          key={\"b\" + col.id}\r\n                        >\r\n                          <button>+</button>\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <td key={\"b\" + col.id} className=\"table-block\">\r\n                          <Block\r\n                            block={block[0]}\r\n                            delete={id =>\r\n                              this.props.deleteBlock(\r\n                                this.props.collectionID,\r\n                                id\r\n                              )\r\n                            }\r\n                          />\r\n                        </td>\r\n                      );\r\n                    }\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { blocks: state.BlocksList };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    deleteBlock\r\n  }\r\n)(Table);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    modalType: this.props.type == null ? \"message\" : this.props.type\r\n  };\r\n  contentModal(content) {\r\n    return (\r\n      <div className=\"modal\" display={this.state.display ? \"block\" : \"none\"}>\r\n        <div className=\"modal-inside\">\r\n          {this.props.cancel != null ? (\r\n            <div onClick={this.props.cancel} className=\"modal-x\">\r\n              X\r\n            </div>\r\n          ) : null}\r\n          {content}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  messageModal(message = \"\", okFunction = () => {}) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              okFunction();\r\n            }}\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirmModal(\r\n    message = \"Are you sure ?\",\r\n    yesFunction = () => {},\r\n    cancelFunction = () => {}\r\n  ) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              yesFunction();\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              cancelFunction();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.display) {\r\n      switch (this.state.modalType) {\r\n        case \"message\":\r\n        default:\r\n          return this.messageModal(this.props.message);\r\n        case \"confirm\":\r\n          return this.confirmModal(\r\n            this.props.message,\r\n            this.props.yes,\r\n            this.props.cancel\r\n          );\r\n        case \"content\":\r\n          return this.contentModal(this.props.children);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  saveForm = () => {\r\n    let property = this.state.property;\r\n    this.state.keys.forEach(k => {\r\n      if (!k.type || k.type === \"input\") {\r\n        if (property[k.name] == null) {\r\n          property[k.name] =\r\n            this.state.property[k.name] != null\r\n              ? this.state.property[k.name]\r\n              : k.default != null\r\n              ? k.default\r\n              : null;\r\n        }\r\n      } else if (k.type && k.type === \"select\") {\r\n        if (property[k.name] == null) {\r\n          property[k.name] =\r\n            this.state.property[k.name] != null\r\n              ? this.state.property[k.name]\r\n              : k.default != null\r\n              ? k.default\r\n              : k.list.length > 0\r\n              ? k.list[0].id\r\n              : null;\r\n        }\r\n      } else if (k.type && k.type === \"textarea\") {\r\n        property[k.name] =\r\n          this.state.property[k.name] != null\r\n            ? this.state.property[k.name]\r\n            : k.default != null\r\n            ? k.default\r\n            : null;\r\n      }\r\n    });\r\n    this.props.save(property);\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.props.nounmount) {\r\n      this.saveForm();\r\n    }\r\n  }\r\n  render() {\r\n    const field = (keyType, key) => {\r\n      switch (keyType) {\r\n        case \"input\":\r\n        default:\r\n          return (\r\n            <input\r\n              key={key.name + \"inp\"}\r\n              type=\"text\"\r\n              onChange={x => {\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              value={\r\n                this.state.property[key.name] != null\r\n                  ? this.state.property[key.name]\r\n                  : key.default != null\r\n                  ? key.default\r\n                  : \"\"\r\n              }\r\n              style={{ display: \"table-cell\" }}\r\n            />\r\n          );\r\n        case \"select\":\r\n          return (\r\n            <select\r\n              defaultValue={\r\n                this.state.property[key.name] != null\r\n                  ? this.state.property[key.name]\r\n                  : key.default != null\r\n                  ? key.default\r\n                  : key.list.length > 0\r\n                  ? key.list[0].id\r\n                  : null\r\n              }\r\n              onChange={x => {\r\n                let property = this.state.property;\r\n                property[key.name] = x.target.value;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n            >\r\n              {key.list.map(item => {\r\n                return (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          );\r\n        case \"textarea\":\r\n          return (\r\n            <textarea\r\n              key={key.name + \"txt\"}\r\n              onChange={x => {\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              style={{ display: \"table-cell\" }}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? key.default != null\r\n                    ? key.default\r\n                    : \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n            />\r\n          );\r\n      }\r\n    };\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"table\" }}>\r\n          <form\r\n            onSubmit={x => {\r\n              x.preventDefault();\r\n              this.saveForm();\r\n            }}\r\n          >\r\n            {this.state.keys.map(key => {\r\n              if (key.show != null && !key.show) {\r\n                return null;\r\n              }\r\n              let keyType = key.type != null ? key.type : \"input\";\r\n              return (\r\n                <div key={key.name + key.id} style={{ display: \"table-row\" }}>\r\n                  <label\r\n                    htmlFor={key.name + key.id + \"inp\"}\r\n                    style={{ display: \"table-cell\" }}\r\n                  >\r\n                    {key.name}\r\n                  </label>\r\n                  {field(keyType, key)}\r\n                </div>\r\n              );\r\n            })}\r\n            {this.props.children}\r\n            <div style={{ display: \"table-row\" }}>\r\n              <div style={{ display: \"table-cell\" }} />\r\n              <input\r\n                type=\"submit\"\r\n                style={{ display: \"table-cell\", width: \"100%\" }}\r\n                className=\"btn-red\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Table from \"./Table\";\r\n\r\nimport Modal from \"../Modal\";\r\nimport FormEditor from \"../collections/areas/FormEditor\";\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nimport { selectCollection, createBlock } from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    mode: \"edit\",\r\n    download: false,\r\n    downloadType: \"pdf\",\r\n    addModal: false,\r\n    addModalParams: {}\r\n  };\r\n  downloadPDF() {\r\n    let screen = this.refs.screen;\r\n    let doc = new jsPDF({ orientation: \"landscape\" });\r\n    doc.fromHTML(screen);\r\n    doc.save(\"file.pdf\");\r\n  }\r\n  downloadPNG() {\r\n    let screen = this.refs.screen;\r\n    domtoimage\r\n      .toPng(screen, { bgcolor: \"#fff\" })\r\n      .then(function(dataUrl) {\r\n        let link = document.createElement(\"a\");\r\n        link.href = dataUrl;\r\n        link.download = \"file.png\";\r\n        link.target = \"_blank\";\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error converting to PNG Image\");\r\n      });\r\n  }\r\n  downloadJPEG() {\r\n    let screen = this.refs.screen;\r\n    domtoimage\r\n      .toJpeg(screen, { bgcolor: \"#fff\" })\r\n      .then(function(dataUrl) {\r\n        let link = document.createElement(\"a\");\r\n        link.download = \"file.jpeg\";\r\n        link.href = dataUrl;\r\n        link.target = \"_blank\";\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error converting to JPEG Image\");\r\n      });\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      switch (this.state.downloadType) {\r\n        case \"pdf\":\r\n        default:\r\n          this.downloadPDF();\r\n          break;\r\n        case \"png\":\r\n          this.downloadPNG();\r\n          break;\r\n        case \"jpeg\":\r\n          this.downloadJPEG();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  addModal() {\r\n    let params = this.state.addModalParams;\r\n    if (this.state.addModal) {\r\n      let keys = [\r\n        {\r\n          name: \"text\",\r\n          required: true,\r\n          locked: true,\r\n          show: false\r\n        },\r\n        {\r\n          name: \"name\",\r\n          required: true\r\n        },\r\n        { name: \"customText\" },\r\n        {\r\n          name: \"day\",\r\n          type: \"select\",\r\n          list: this.props.days,\r\n          required: true\r\n        },\r\n        {\r\n          name: \"place\",\r\n          type: \"select\",\r\n          list: this.props.places,\r\n          required: true\r\n        },\r\n        {\r\n          name: \"time\",\r\n          type: \"select\",\r\n          list: this.props.times,\r\n          required: true\r\n        },\r\n        {\r\n          name: \"batch\",\r\n          type: \"select\",\r\n          list: this.props.batches,\r\n          required: true\r\n        },\r\n        {\r\n          name: \"subject\",\r\n          type: \"select\",\r\n          list: this.props.subjects,\r\n          required: true\r\n        },\r\n        {\r\n          name: \"teacher\",\r\n          type: \"select\",\r\n          list: this.props.teachers,\r\n          required: true\r\n        },\r\n        {\r\n          name: \"display\",\r\n          type: \"textarea\",\r\n          required: true,\r\n          default: \"%batch%%subject%%teacher%\"\r\n        }\r\n      ];\r\n      Object.keys(params).forEach(p => {\r\n        if (params[p] !== null) {\r\n          keys.forEach(k => {\r\n            if (k != null && k.name === p) {\r\n              k.default = params[p];\r\n              k.show = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return (\r\n        <Modal\r\n          type=\"content\"\r\n          display={true}\r\n          cancel={() => {\r\n            this.setState({ addModal: false, addModalParams: {} });\r\n          }}\r\n        >\r\n          <FormEditor\r\n            property={{}}\r\n            keys={keys}\r\n            save={data => {\r\n              this.props.createBlock(this.props.selected.id, data);\r\n              this.setState({ addModal: false, addModalParams: {} });\r\n            }}\r\n            nounmount={true}\r\n          />\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n  screen() {\r\n    let {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    } = this.props;\r\n    let objector = {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Acadtable</h1>\r\n        <div>{this.addModal()}</div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                mode: \"print\",\r\n                downloadType: \"pdf\",\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download As PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                mode: \"print\",\r\n                downloadType: \"png\",\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download As PNG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                mode: \"print\",\r\n                downloadType: \"jpeg\",\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download As JPEG\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"edit\" });\r\n            }}\r\n            className={this.state.mode === \"edit\" ? \"btn-red\" : \"\"}\r\n          >\r\n            edit\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"print\" });\r\n            }}\r\n            className={this.state.mode === \"print\" ? \"btn-red\" : \"\"}\r\n          >\r\n            print\r\n          </button>\r\n        </div>\r\n        <div ref=\"screen\">\r\n          {tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              i => i.id === table.baseValue\r\n            )[0];\r\n            let rows = objector[table.rows];\r\n            let cols = objector[table.cols];\r\n            return (\r\n              <Table\r\n                id={table.id}\r\n                key={table.id}\r\n                mode={this.state.mode}\r\n                base={base}\r\n                rows={rows}\r\n                cols={cols}\r\n                blocks={blocks}\r\n                displayAddModal={params => {\r\n                  Object.keys(objector).map(listName => {\r\n                    let key = listName;\r\n                    if (\r\n                      params[key] == null &&\r\n                      key !== \"table\" &&\r\n                      key !== \"block\"\r\n                    ) {\r\n                      params[key] = null;\r\n                    }\r\n                    return null;\r\n                  });\r\n                  this.setState({ addModal: true, addModalParams: params });\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections,\r\n    selected: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    blocks: state.Blocks,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    createBlock\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    if (this.props.user == null) {\r\n      return <Welcome />;\r\n    } else {\r\n      return <Display />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TABLE:\r\n      return action.payload.tables;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_PLACE:\r\n    case types.UPDATE_PLACE:\r\n    case types.DELETE_PLACE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_BATCH:\r\n    case types.UPDATE_BATCH:\r\n    case types.DELETE_BATCH:\r\n      return action.payload.batches;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.days;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TIME:\r\n      return action.payload.times;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_BLOCK:\r\n      return action.payload.lectures;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_SUBJECT:\r\n    case types.UPDATE_SUBJECT:\r\n    case types.DELETE_SUBJECT:\r\n      return action.payload.subjects;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TEACHER:\r\n      return action.payload.teachers;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}