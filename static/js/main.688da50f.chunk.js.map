{"version":3,"sources":["components/Header.js","components/display/Welcome.js","components/display/Table.js","engine/storage.js","actions/index.js","actions/types.js","components/display/index.js","components/collections/List.js","components/collections/Create.js","actions/helpers.js","components/collections/areas/FormEditor.js","components/collections/areas/TableEditor.js","components/collections/areas/index.js","components/collections/user/Days.js","components/collections/Edit.js","components/Modal.js","components/collections/index.js","components/App.js","reducers/index.js","reducers/CollectionsList.js","reducers/SelectedCollection.js","reducers/TablesList.js","reducers/PlacesList.js","reducers/BatchesList.js","reducers/DaysList.js","reducers/TimesList.js","reducers/BlocksList.js","reducers/SubjectsList.js","reducers/TeachersList.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","Table","_this","this","base","props","BaseBlockKey","baseBlockKey","rows","RowsBlockKey","rowsBlockKey","cols","ColsBlockKey","colsBlockKey","blocks","mode","key","id","name","map","col","row","block","filter","length","onClick","params","text","storage","list","getList","collection","data","tables","days","times","places","batches","subjects","teachers","push","saveList","saveData","localStorage","getItem","JSON","parse","ex","arguments","undefined","setItem","stringify","newname","newlist","item","removeItem","type","tableData","getData","ListFunctions","all","itemID","createItem","updateItem","deleteItem","selectCollection","payload","selectedCollection","createBlock","collectionID","createDay","createTime","createPlace","createBatch","createSubject","createTeacher","Display","state","_this2","_this$props","objector","getBlockKey","listName","substr","setState","className","table","i","baseValue","display_Table","collections","display_Welcome","selected","screen","connect","CollectionsList","SelectedCollection","TablesList","DaysList","PlacesList","TimesList","BlocksList","BatchesList","SubjectsList","TeachersList","List","selectClass","selectedItem","concat","buttons","button","action","CreateTable","form","handle","event","preventDefault","submit","display","onSubmit","htmlFor","value","onChange","e","target","cancel","click","rand","operator","start","end","Math","random","toString","split","FormEditor","property","keys","saveForm","k","default","save","nounmount","style","width","flexDirection","justifyContent","alignItems","x","show","keyType","newvalue","disabled","locked","required","defaultValue","console","log","field","children","TableEditor","saveTable","items","blist","baseList","rowsList","rowsValue","colsList","areas_FormEditor","Object","objectSpread","Area","array","heading","editor","showCreator","showEditorFor","obj","bypass","create","saveFunction","areas_TableEditor","deleteProperty","deleteActionCreator","createActionCreator","updateActionCreator","creator","padding","Days","forEach","day","prop","EditCollection","editArea","updateState","activeClass","textTransform","margin","areas","createTable","propID","updateTable","deleteTable","updateBlock","deleteBlock","updateDay","deleteDay","user_Days","updateTime","deleteTime","updatePlace","deletePlace","updateBatch","deleteBatch","updateSubject","deleteSubject","updateTeacher","deleteTeacher","blockID","tableID","dayID","timeID","placeID","batchID","subjectID","teacherID","Modal","modalType","content","message","okFunction","contentModal","yesFunction","cancelFunction","messageModal","confirmModal","yes","Collections","createForm","editCollection","modalDisplay","deleteFunction","copyCollection","deleteCollection","Edit","Create","values","createCollection","collections_List","components_Modal","newid","renameCollection","rename","deleted","delete","App","HashRouter","Route","path","component","exact","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.688da50f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/collections\">\r\n            <button>Collections</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Welcome !</span>\r\n        <p>\r\n          You have't created any collections\r\n          <br />\r\n          <Link to=\"/collections\">Click Here</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    let base = this.props.base;\r\n    let BaseBlockKey = this.props.baseBlockKey;\r\n    let rows = this.props.rows;\r\n    let RowsBlockKey = this.props.rowsBlockKey;\r\n    let cols = this.props.cols;\r\n    let ColsBlockKey = this.props.colsBlockKey;\r\n    let blocks = this.props.blocks;\r\n    let mode = this.props.mode;\r\n    return (\r\n      <div key={this.props.id}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td>{base != null ? base.name : null}</td>\r\n              {cols.map(col => {\r\n                return <td key={\"c\" + col.id}>{col.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map(row => {\r\n              return (\r\n                <tr key={\"r\" + row.id}>\r\n                  <td>{row.name}</td>\r\n                  {cols.map(col => {\r\n                    let block = blocks.filter(\r\n                      block =>\r\n                        block[BaseBlockKey] === base.id &&\r\n                        block[RowsBlockKey] === row.id &&\r\n                        block[ColsBlockKey] === col.id\r\n                    );\r\n                    if (block.length === 0) {\r\n                      if (mode === \"print\") {\r\n                        return <td />;\r\n                      }\r\n                      return (\r\n                        <td\r\n                          onClick={() => {\r\n                            let params = {};\r\n                            params[BaseBlockKey] = this.props.id;\r\n                            params[RowsBlockKey] = row.id;\r\n                            params[ColsBlockKey] = col.id;\r\n                          }}\r\n                          key={\"b\" + col.id}\r\n                        >\r\n                          <button>+</button>\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return <td key={\"b\" + col.id}>{block[0].text}</td>;\r\n                    }\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","class storage {\r\n  static create(id, name) {\r\n    let list = storage.getList();\r\n    let collection = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      tables: [],\r\n      blocks: [],\r\n      days: [],\r\n      times: [],\r\n      places: [],\r\n      batches: [],\r\n      subjects: [],\r\n      teachers: []\r\n    };\r\n    list.push(collection);\r\n    storage.saveList(list);\r\n    storage.saveData(id, data);\r\n  }\r\n  static getList() {\r\n    let list = localStorage.getItem(\"collections\") || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  static saveList(list = []) {\r\n    localStorage.setItem(\"collections\", JSON.stringify(list));\r\n  }\r\n\r\n  static getData(id) {\r\n    let data = localStorage.getItem(\"c-\" + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  static saveData(id, data = {}) {\r\n    localStorage.setItem(\"c-\" + id, JSON.stringify(data));\r\n  }\r\n  static rename(id, newname) {\r\n    let list = storage.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    storage.saveList(newlist);\r\n  }\r\n  static delete(id) {\r\n    let list = storage.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    storage.saveList(newlist);\r\n    localStorage.removeItem(\"c-\" + id);\r\n  }\r\n\r\n  //Main User Functions\r\n\r\n  static list(id, type) {\r\n    let tableData = storage.getData(id);\r\n    if (tableData) {\r\n      if (!tableData[type]) {\r\n        tableData[type] = [];\r\n        storage.saveData(id, tableData);\r\n      }\r\n      let ListFunctions = {\r\n        all: function() {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          return list;\r\n        },\r\n        getItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let items = list.filter(item => item.id === itemID);\r\n          return items[0];\r\n        },\r\n        createItem: function(data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list.push(data);\r\n          storage.saveData(this.id, tableData);\r\n          return data;\r\n        },\r\n        updateItem: function(itemID, data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list = list.map(item => {\r\n            if (item.id === itemID) {\r\n              return data;\r\n            }\r\n            return item;\r\n          });\r\n          tableData[this.type] = list;\r\n          storage.saveData(this.id, tableData);\r\n        },\r\n        deleteItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          tableData[this.type] = list.filter(item => item.id !== itemID);\r\n          storage.saveData(this.id, tableData);\r\n        }\r\n      };\r\n      ListFunctions.id = id;\r\n      ListFunctions.type = type;\r\n      return ListFunctions;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../engine/storage\";\r\nimport {\r\n  CREATE_COLLECTION,\r\n  SELECT_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION,\r\n  CREATE_TABLE,\r\n  UPDATE_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BLOCK,\r\n  UPDATE_BLOCK,\r\n  DELETE_BLOCK,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY,\r\n  CREATE_TIME,\r\n  UPDATE_TIME,\r\n  DELETE_TIME,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE,\r\n  CREATE_BATCH,\r\n  UPDATE_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT,\r\n  CREATE_TEACHER,\r\n  UPDATE_TEACHER,\r\n  DELETE_TEACHER\r\n} from \"./types\";\r\n\r\n//COLLECTION ACTIONS\r\n\r\nexport const createCollection = (id, name) => {\r\n  storage.create(id, name);\r\n  let list = storage.getList();\r\n  return {\r\n    type: CREATE_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  return {\r\n    type: SELECT_COLLECTION,\r\n    payload: {\r\n      selectedCollection: storage.getData(id),\r\n      tables: storage.list(id, \"tables\"),\r\n      days: storage.list(id, \"days\"),\r\n      places: storage.list(id, \"places\"),\r\n      times: storage.list(id, \"times\"),\r\n      blocks: storage.list(id, \"blocks\"),\r\n      batches: storage.list(id, \"batches\"),\r\n      subjects: storage.list(id, \"subjects\"),\r\n      teachers: storage.list(id, \"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const copyCollection = (id, newid) => {\r\n  let data = storage.getData(id);\r\n  data.id = newid;\r\n  data.name += \" Copy\";\r\n  storage.create(newid, data.name);\r\n  storage.saveData(newid, data);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  storage.rename(id, newname);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  let deleted = storage.getData(id);\r\n  storage.delete(id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: DELETE_COLLECTION,\r\n    payload: {\r\n      collections: list,\r\n      deleted\r\n    }\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.createItem(data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: CREATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const updateTable = (collectionID, tableID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.updateItem(tableID, data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: UPDATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const deleteTable = (collectionID, tableID) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.deleteItem(tableID);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: DELETE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.createItem(data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: CREATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const updateBlock = (collectionID, blockID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.updateItem(blockID, data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: UPDATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const deleteBlock = (collectionID, blockID) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.deleteItem(blockID);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: DELETE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.createItem(data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: CREATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const updateDay = (collectionID, dayID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.updateItem(dayID, data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: UPDATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = (collectionID, dayID) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.deleteItem(dayID);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: DELETE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.createItem(data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: CREATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const updateTime = (collectionID, timeID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.updateItem(timeID, data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: UPDATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = (collectionID, timeID) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.deleteItem(timeID);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: DELETE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.createItem(data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: CREATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const updatePlace = (collectionID, placeID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.updateItem(placeID, data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: UPDATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = (collectionID, placeID) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.deleteItem(placeID);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: DELETE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.createItem(data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: CREATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const updateBatch = (collectionID, batchID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.updateItem(batchID, data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: UPDATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = (collectionID, batchID) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.deleteItem(batchID);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: DELETE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.createItem(data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: CREATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const updateSubject = (collectionID, subjectID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.updateItem(subjectID, data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: UPDATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = (collectionID, subjectID) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.deleteItem(subjectID);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: DELETE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.createItem(data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: CREATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const updateTeacher = (collectionID, teacherID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.updateItem(teacherID, data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: UPDATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = (collectionID, teacherID) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.deleteItem(teacherID);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: DELETE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\n","export const CREATE_COLLECTION = \"CREATE_COLLECTION\";\r\nexport const SELECT_COLLECTION = \"SELECT_COLLECTION\";\r\nexport const COPY_COLLECTION = \"COPY_COLLECTION\";\r\nexport const RENAME_COLLECTION = \"RENAME_COLLECTION\";\r\nexport const DELETE_COLLECTION = \"DELETE_COLLECTION\";\r\n\r\nexport const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const UPDATE_TABLE = \"UPDATE_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BLOCK = \"CREATE_BLOCK\";\r\nexport const UPDATE_BLOCK = \"UPDATE_BLOCK\";\r\nexport const DELETE_BLOCK = \"DELETE_BLOCK\";\r\n\r\nexport const CREATE_DAY = \"CREATE_DAY\";\r\nexport const UPDATE_DAY = \"UPDATE_DAY\";\r\nexport const DELETE_DAY = \"DELETE_DAY\";\r\n\r\nexport const CREATE_TIME = \"CREATE_TIME\";\r\nexport const UPDATE_TIME = \"UPDATE_TIME\";\r\nexport const DELETE_TIME = \"DELETE_TIME\";\r\n\r\nexport const CREATE_PLACE = \"CREATE_PLACE\";\r\nexport const UPDATE_PLACE = \"UPDATE_PLACE\";\r\nexport const DELETE_PLACE = \"DELETE_PLACE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const UPDATE_BATCH = \"UPDATE_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\r\nexport const UPDATE_SUBJECT = \"UPDATE_SUBJECT\";\r\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\r\n\r\nexport const CREATE_TEACHER = \"CREATE_TEACHER\";\r\nexport const UPDATE_TEACHER = \"UPDATE_TEACHER\";\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport Table from \"./Table\";\r\n\r\nimport {\r\n  selectCollection,\r\n  createBlock,\r\n  createBatch,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    mode: \"edit\"\r\n  };\r\n  screen() {\r\n    let {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    } = this.props;\r\n    let objector = {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    };\r\n\r\n    let getBlockKey = listName => {\r\n      switch (listName) {\r\n        case \"batches\":\r\n          return \"batch\";\r\n        default:\r\n          return listName.substr(0, listName.length - 1);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Acadtable</h1>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"edit\" });\r\n            }}\r\n            className={this.state.mode === \"edit\" ? \"btn-red\" : \"\"}\r\n          >\r\n            edit\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"print\" });\r\n            }}\r\n            className={this.state.mode === \"print\" ? \"btn-red\" : \"\"}\r\n          >\r\n            print\r\n          </button>\r\n        </div>\r\n        {tables.map(table => {\r\n          let base = objector[table.base].filter(\r\n            i => i.id === table.baseValue\r\n          )[0];\r\n          let rows = objector[table.rows];\r\n          let cols = objector[table.cols];\r\n          return (\r\n            <Table\r\n              id={table.id}\r\n              key={table.id}\r\n              mode={this.state.mode}\r\n              base={base}\r\n              baseBlockKey={getBlockKey(table.base)}\r\n              rows={rows}\r\n              rowsBlockKey={getBlockKey(table.rows)}\r\n              cols={cols}\r\n              colsBlockKey={getBlockKey(table.cols)}\r\n              blocks={blocks}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.collections.length === 0) {\r\n      return <Welcome />;\r\n    } else if (this.props.selected === null) {\r\n      if (this.props.collections.length === 1) {\r\n        this.props.selectCollection(this.props.collections[0].id);\r\n      }\r\n      return (\r\n        <div>\r\n          <span>Please select a collection</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selected: state.SelectedCollection,\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    blocks: state.BlocksList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBlock,\r\n    createBatch,\r\n    createDay,\r\n    createTime,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject,\r\n    selectCollection\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-container\">\r\n        {this.props.list.map(item => {\r\n          let selectClass =\r\n            this.props.selected === item.id ? \"selected-card\" : \"\";\r\n          let selectedItem = this.props.selected === item.id ? true : false;\r\n          return (\r\n            <div key={item.id} className={`table-card card-box ${selectClass}`}>\r\n              <div className=\"card-title\">{item.name}</div>\r\n              <div className=\"buttons-list blue\">\r\n                {this.props.buttons.map(button => {\r\n                  let restrictSelected =\r\n                    button.selected == null ? false : button.selected;\r\n                  if (restrictSelected) {\r\n                    if (selectedItem) {\r\n                      return null;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <button\r\n                      onClick={() => {\r\n                        button.action(item.id);\r\n                      }}\r\n                      key={button.name}\r\n                    >\r\n                      {button.name}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CreateTable extends Component {\r\n  state = {\r\n    form: {\r\n      name: \"\"\r\n    }\r\n  };\r\n  handle = event => {\r\n    event.preventDefault();\r\n    this.props.submit(this.state.form);\r\n  };\r\n  render() {\r\n    if (this.props.display === \"form\") {\r\n      return (\r\n        <form onSubmit={this.handle} className=\"row-block\">\r\n          <label htmlFor=\"name\" className=\"item\">\r\n            {this.props.name} :\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"item\"\r\n            value={this.state.form.name}\r\n            onChange={e => {\r\n              this.setState({\r\n                form: {\r\n                  name: e.target.value\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          <input type=\"submit\" className=\"item\" />\r\n          <button\r\n            onClick={() => {\r\n              this.props.cancel();\r\n            }}\r\n            className=\"item\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <button onClick={this.props.click}>Create A Collection</button>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CreateTable;\r\n","export const rand = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  saveForm = () => {\r\n    let property = this.state.property;\r\n    this.state.keys.map(k => {\r\n      if (k.type && k.type === \"select\") {\r\n        if (property[k.name] === null) {\r\n          property[k.name] =\r\n            this.state.property[k.name] != null\r\n              ? this.state.property[k.name]\r\n              : k.list.length > 0\r\n              ? k.list[0].id\r\n              : null;\r\n        }\r\n      } else if (k.type && k.type === \"textarea\") {\r\n        property[k.name] =\r\n          this.state.property[k.name] != null\r\n            ? this.state.property[k.name]\r\n            : k.default != null\r\n            ? k.default\r\n            : null;\r\n      }\r\n      return null;\r\n    });\r\n    this.props.save(property);\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.props.nounmount) {\r\n      this.saveForm();\r\n    }\r\n  }\r\n  render() {\r\n    const field = (keyType, key) => {\r\n      switch (keyType) {\r\n        case \"input\":\r\n        default:\r\n          return (\r\n            <input\r\n              key={key.name + \"inp\"}\r\n              type=\"text\"\r\n              onChange={x => {\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n              style={{ display: \"table-cell\" }}\r\n            />\r\n          );\r\n        case \"select\":\r\n          return (\r\n            <select\r\n              defaultValue={\r\n                this.state.property[key.name] != null\r\n                  ? this.state.property[key.name]\r\n                  : key.list.length > 0\r\n                  ? key.list[0].id\r\n                  : null\r\n              }\r\n              onChange={x => {\r\n                let property = this.state.property;\r\n                property[key.name] = x.target.value;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n            >\r\n              {key.list.map(item => {\r\n                return (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          );\r\n        case \"textarea\":\r\n          return (\r\n            <textarea\r\n              key={key.name + \"txt\"}\r\n              onChange={x => {\r\n                console.log(x.target.value);\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              style={{ display: \"table-cell\" }}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? key.default != null\r\n                    ? key.default\r\n                    : \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n            />\r\n          );\r\n      }\r\n    };\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"table\" }}>\r\n          <form\r\n            onSubmit={x => {\r\n              x.preventDefault();\r\n              this.saveForm();\r\n            }}\r\n          >\r\n            {this.state.keys.map(key => {\r\n              if (key.show != null && !key.show) {\r\n                return null;\r\n              }\r\n              let keyType = key.type != null ? key.type : \"input\";\r\n              return (\r\n                <div key={key.name + key.id} style={{ display: \"table-row\" }}>\r\n                  <label\r\n                    htmlFor={key.name + key.id + \"inp\"}\r\n                    style={{ display: \"table-cell\" }}\r\n                  >\r\n                    {key.name}\r\n                  </label>\r\n                  {field(keyType, key)}\r\n                </div>\r\n              );\r\n            })}\r\n            {this.props.children}\r\n            <div style={{ display: \"table-row\" }}>\r\n              <div style={{ display: \"table-cell\" }} />\r\n              <input\r\n                type=\"submit\"\r\n                style={{ display: \"table-cell\", width: \"100%\" }}\r\n                className=\"btn-red\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport FormEditor from \"./FormEditor\";\r\n\r\nclass TableEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  saveTable = () => {\r\n    let property = this.state.property;\r\n    if (property.base == null) {\r\n      property.base = this.props.items[0].name;\r\n    }\r\n    if (property.baseValue == null) {\r\n      property.baseValue =\r\n        this.props.items[0].list.length > 0\r\n          ? this.props.items[0].list[0].id\r\n          : null;\r\n    }\r\n    if (property.rows == null) {\r\n      property.rows = this.props.items[1].name;\r\n    }\r\n    if (property.cols == null) {\r\n      property.cols = this.props.items[2].name;\r\n    }\r\n    this.props.save(property);\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.props.nounmount) {\r\n      this.saveTable();\r\n    }\r\n  }\r\n  render() {\r\n    let items = this.props.items;\r\n    let base =\r\n      this.state.property.base != null\r\n        ? this.state.property.base\r\n        : items[0].name;\r\n    let blist = items.filter(i => i.name === base)[0];\r\n    let baseList = blist != null ? blist.list : [];\r\n    let rowsList = items.filter(i => i.name !== base);\r\n    let rowsValue =\r\n      this.state.property.rows != null\r\n        ? this.state.property.rows\r\n        : items[1].name;\r\n    let colsList = rowsList.filter(i => i.name !== rowsValue);\r\n    let property = this.state.property;\r\n    return (\r\n      <FormEditor\r\n        property={this.state.property}\r\n        keys={this.props.keys}\r\n        save={this.saveTable}\r\n        nounmount={this.props.nounmount}\r\n      >\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"base\" style={{ display: \"table-cell\" }}>\r\n            Base\r\n          </label>\r\n          <select\r\n            name=\"base\"\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, base: x.target.value }\r\n              });\r\n            }}\r\n            style={{ display: \"table-cell\" }}\r\n            defaultValue={\r\n              this.state.property.base != null\r\n                ? this.state.property.base\r\n                : items[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {items.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, baseValue: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.baseValue != null\r\n                ? this.state.property.baseValue\r\n                : baseList.length > 0\r\n                ? baseList[0].id\r\n                : null\r\n            }\r\n            required={true}\r\n          >\r\n            {baseList.map(item => {\r\n              return (\r\n                <option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n            Rows\r\n          </label>\r\n          <select\r\n            id=\"rows\"\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, rows: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.rows != null\r\n                ? this.state.property.rows\r\n                : rowsList[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {rowsList.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n            Columns\r\n          </label>\r\n          <select\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, cols: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.cols != null\r\n                ? this.state.property.cols\r\n                : colsList[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {colsList.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </FormEditor>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { rand } from \"../../../actions/helpers\";\r\n\r\nimport FormEditor from \"./FormEditor\";\r\nimport TableEditor from \"./TableEditor\";\r\n\r\nclass Area extends Component {\r\n  state = {\r\n    array: this.props.array,\r\n    name: this.props.name,\r\n    heading: this.props.heading,\r\n    editor: this.props.editor || \"FormEditor\",\r\n    showCreator: false,\r\n    showEditorFor: null\r\n  };\r\n  editor = (obj, bypass = false, create) => {\r\n    if (this.state.showEditorFor === obj || bypass) {\r\n      let saveFunction = bypass ? create : this.save;\r\n      switch (this.state.editor) {\r\n        case \"FormEditor\":\r\n        default:\r\n          return (\r\n            <FormEditor\r\n              property={obj}\r\n              keys={this.props.keys}\r\n              save={saveFunction}\r\n              nounmount={bypass}\r\n            />\r\n          );\r\n        case \"TableEditor\":\r\n          return (\r\n            <TableEditor\r\n              property={obj}\r\n              items={this.props.items}\r\n              keys={this.props.keys}\r\n              save={saveFunction}\r\n              nounmount={bypass}\r\n            />\r\n          );\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  deleteProperty = obj => {\r\n    this.props.deleteActionCreator(obj.id);\r\n    let array = this.state.array.filter(item => item.id !== obj.id);\r\n    this.setState({ array: array });\r\n  };\r\n  create = obj => {\r\n    console.log(\"Creating In Storage\");\r\n    console.log(obj);\r\n    obj.id = rand(this.state.name);\r\n    this.props.createActionCreator(obj);\r\n  };\r\n  save = obj => {\r\n    console.log(\"Saving Changes into Storage\");\r\n    this.props.updateActionCreator(obj.id, obj);\r\n    if (this.state.showEditorFor === obj) {\r\n      this.setState({ showEditorFor: null });\r\n    }\r\n  };\r\n  creator = () => {\r\n    if (this.state.showCreator) {\r\n      let keys = {};\r\n      this.props.keys.map(k => {\r\n        keys[k.name] = null;\r\n        return null;\r\n      });\r\n      return this.editor(keys, true, this.create);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>{this.state.heading}</h2>\r\n          <div>{this.props.children}</div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ showCreator: !this.state.showCreator });\r\n              }}\r\n              className={this.state.showCreator ? \"\" : \"btn-red\"}\r\n            >\r\n              {this.state.showCreator ? \"Cancel\" : \"Create\"}\r\n            </button>\r\n          </div>\r\n          <div>\r\n            {this.creator()}\r\n            <ul style={{ padding: \"0px\" }}>\r\n              {this.state.array.map(obj => {\r\n                return (\r\n                  <li\r\n                    key={obj.id}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        property: obj\r\n                      })\r\n                    }\r\n                    className=\"area-item\"\r\n                  >\r\n                    <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                      <div>\r\n                        <h3>{obj.name}</h3>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <div className=\"buttons-list\">\r\n                          <button\r\n                            onClick={() => {\r\n                              this.setState({ showEditorFor: obj });\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button onClick={() => this.deleteProperty(obj)}>\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {this.editor(obj)}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Area;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { rand } from \"../../../actions/helpers\";\r\n\r\nclass Days extends Component {\r\n  render() {\r\n    let days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            days.forEach(day => {\r\n              let prop = {};\r\n              prop.name = day;\r\n              prop.id = rand(\"day\");\r\n              this.props.create(prop);\r\n            });\r\n          }}\r\n        >\r\n          Add All Days\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Days;\r\n","import React, { Component } from \"react\";\r\nimport storage from \"../../engine/storage\";\r\n\r\nimport Area from \"./areas\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport UserDays from \"./user/Days.js\";\r\n\r\nimport {\r\n  createBlock,\r\n  updateBlock,\r\n  deleteBlock,\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  createDay,\r\n  updateDay,\r\n  deleteDay,\r\n  createTime,\r\n  updateTime,\r\n  deleteTime,\r\n  createPlace,\r\n  updatePlace,\r\n  deletePlace,\r\n  createBatch,\r\n  updateBatch,\r\n  deleteBatch,\r\n  createSubject,\r\n  updateSubject,\r\n  deleteSubject,\r\n  createTeacher,\r\n  updateTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass EditCollection extends Component {\r\n  state = {\r\n    ...storage.getData(this.props.collectionID),\r\n    editArea: \"lectures\"\r\n  };\r\n  updateState = () => {\r\n    this.setState({ ...storage.getData(this.props.collectionID) });\r\n  };\r\n  render() {\r\n    const UserArea = () => {\r\n      switch (this.state.editArea) {\r\n        case \"tables\":\r\n          return (\r\n            <Area\r\n              array={this.state.tables}\r\n              createActionCreator={data => {\r\n                this.props.createTable(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTable(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTable(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"table\"\r\n              editor=\"TableEditor\"\r\n              heading=\"Tables\"\r\n              items={[\r\n                { name: \"days\", list: this.state.days, required: true },\r\n                { name: \"times\", list: this.state.times, required: true },\r\n                { name: \"batches\", list: this.state.batches, required: true },\r\n                { name: \"places\", list: this.state.places, required: true },\r\n                { name: \"subjects\", list: this.state.subjects, required: true },\r\n                { name: \"teachers\", list: this.state.teachers, required: true }\r\n              ]}\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n                // { name: \"options\" },\r\n                // { name: \"settings\" }\r\n              ]}\r\n            />\r\n          );\r\n        case \"lectures\":\r\n        default:\r\n          return (\r\n            <Area\r\n              array={this.state.blocks}\r\n              createActionCreator={data => {\r\n                this.props.createBlock(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBlock(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBlock(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"block\"\r\n              heading=\"Lectures\"\r\n              keys={[\r\n                {\r\n                  name: \"text\",\r\n                  required: true,\r\n                  locked: true,\r\n                  show: false\r\n                },\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                },\r\n                { name: \"customText\" },\r\n                {\r\n                  name: \"day\",\r\n                  type: \"select\",\r\n                  list: this.state.days,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"place\",\r\n                  type: \"select\",\r\n                  list: this.state.places,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"time\",\r\n                  type: \"select\",\r\n                  list: this.state.times,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"batch\",\r\n                  type: \"select\",\r\n                  list: this.state.batches,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"subject\",\r\n                  type: \"select\",\r\n                  list: this.state.subjects,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"teacher\",\r\n                  type: \"select\",\r\n                  list: this.state.teachers,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"display\",\r\n                  type: \"textarea\",\r\n                  required: true,\r\n                  default: \"%batch%\\n%subject%\\n%teacher%\"\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"days\":\r\n          return (\r\n            <Area\r\n              array={this.state.days}\r\n              createActionCreator={data => {\r\n                this.props.createDay(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateDay(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteDay(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"day\"\r\n              heading=\"Days\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            >\r\n              <UserDays\r\n                create={data => {\r\n                  this.props.createDay(this.state.id, data);\r\n                  this.updateState();\r\n                }}\r\n              />\r\n            </Area>\r\n          );\r\n        case \"times\":\r\n          return (\r\n            <Area\r\n              array={this.state.times}\r\n              createActionCreator={data => {\r\n                this.props.createTime(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTime(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTime(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"time\"\r\n              heading=\"Times\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"places\":\r\n          return (\r\n            <Area\r\n              array={this.state.places}\r\n              createActionCreator={data => {\r\n                this.props.createPlace(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updatePlace(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deletePlace(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"place\"\r\n              heading=\"Places\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"batches\":\r\n          return (\r\n            <Area\r\n              array={this.state.batches}\r\n              createActionCreator={data => {\r\n                this.props.createBatch(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBatch(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBatch(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"batch\"\r\n              heading=\"Batches\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"subjects\":\r\n          return (\r\n            <Area\r\n              array={this.state.subjects}\r\n              createActionCreator={data => {\r\n                this.props.createSubject(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateSubject(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteSubject(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"subject\"\r\n              heading=\"Subjects\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"teachers\":\r\n          return (\r\n            <Area\r\n              array={this.state.teachers}\r\n              createActionCreator={data => {\r\n                this.props.createTeacher(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTeacher(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTeacher(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"teacher\"\r\n              heading=\"Teachers\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n      }\r\n    };\r\n    let MenuItems = [\r\n      \"lectures\",\r\n      \"tables\",\r\n      \"batches\",\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"buttons-list\">\r\n          <button onClick={this.props.cancel}>Back</button>\r\n        </div>\r\n        <h1>Collection : {this.state.name}</h1>\r\n        <div>\r\n          {MenuItems.map(item => {\r\n            let activeClass = \"\";\r\n            if (item === this.state.editArea) {\r\n              activeClass = \"btn-red\";\r\n            }\r\n            return (\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ editArea: item });\r\n                }}\r\n                style={{ textTransform: \"capitalize\", margin: \"2px\" }}\r\n                className={activeClass}\r\n                key={item}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <UserArea />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBlock,\r\n    updateBlock,\r\n    deleteBlock,\r\n    createTable,\r\n    updateTable,\r\n    deleteTable,\r\n    createDay,\r\n    updateDay,\r\n    deleteDay,\r\n    createTime,\r\n    updateTime,\r\n    deleteTime,\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace,\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch,\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject,\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(EditCollection);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    modalType: this.props.type == null ? \"message\" : this.props.type\r\n  };\r\n  contentModal(content) {\r\n    return (\r\n      <div className=\"modal\" display={this.state.display ? \"block\" : \"none\"}>\r\n        <div className=\"modal-inside\">{content}</div>\r\n      </div>\r\n    );\r\n  }\r\n  messageModal(message = \"\", okFunction = () => {}) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              okFunction();\r\n            }}\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirmModal(\r\n    message = \"Are you sure ?\",\r\n    yesFunction = () => {},\r\n    cancelFunction = () => {}\r\n  ) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              yesFunction();\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              cancelFunction();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.display) {\r\n      switch (this.state.modalType) {\r\n        case \"message\":\r\n        default:\r\n          return this.messageModal(this.props.message);\r\n        case \"confirm\":\r\n          return this.confirmModal(\r\n            this.props.message,\r\n            this.props.yes,\r\n            this.props.cancel\r\n          );\r\n        case \"content\":\r\n          return this.contentModal(this.props.children);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nimport List from \"./List\";\r\nimport Create from \"./Create\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Modal from \"../Modal\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  copyCollection,\r\n  renameCollection,\r\n  deleteCollection\r\n} from \"../../actions\";\r\n\r\nimport { rand } from \"../../actions/helpers\";\r\n\r\nclass Collections extends Component {\r\n  state = {\r\n    createForm: false,\r\n    editCollection: null,\r\n    modalDisplay: false,\r\n    deleteFunction: () => {}\r\n  };\r\n  displayDeleteModal() {\r\n    this.setState({ modalDisplay: true });\r\n  }\r\n  render() {\r\n    let list = this.props.collections;\r\n\r\n    //Collection Buttons\r\n    let buttons = [];\r\n    buttons.push({\r\n      name: \"select\",\r\n      action: id => {\r\n        this.props.selectCollection(id);\r\n      },\r\n      selected: true\r\n    });\r\n    buttons.push({\r\n      name: \"copy\",\r\n      action: id => {\r\n        this.props.copyCollection(id, rand(\"collection\"));\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"edit\",\r\n      action: id => {\r\n        this.setState({\r\n          editCollection: id\r\n        });\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"delete\",\r\n      action: id => {\r\n        this.setState({\r\n          modalDisplay: true,\r\n          deleteFunction: () => {\r\n            this.props.deleteCollection(id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    if (this.state.editCollection != null) {\r\n      return (\r\n        <Edit\r\n          collectionID={this.state.editCollection}\r\n          cancel={() => {\r\n            this.setState({ editCollection: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Collections</h1>\r\n        <Create\r\n          name=\"collection\"\r\n          display={this.state.createForm ? \"form\" : \"button\"}\r\n          click={() => {\r\n            this.setState({ createForm: true });\r\n          }}\r\n          submit={values => {\r\n            this.props.createCollection(rand(\"collection\"), values.name);\r\n            this.setState({ createForm: false });\r\n          }}\r\n          cancel={() => {\r\n            this.setState({ createForm: false });\r\n          }}\r\n        />\r\n        <List\r\n          selected={\r\n            this.props.selectedCollection != null\r\n              ? this.props.selectedCollection.id\r\n              : null\r\n          }\r\n          list={list}\r\n          buttons={buttons}\r\n        />\r\n        <Modal\r\n          display={this.state.modalDisplay}\r\n          type=\"confirm\"\r\n          yes={() => {\r\n            this.state.deleteFunction();\r\n            this.setState({ modalDisplay: false });\r\n          }}\r\n          cancel={() => this.setState({ modalDisplay: false })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selectedCollection: state.SelectedCollection\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    renameCollection,\r\n    deleteCollection\r\n  }\r\n)(Collections);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n//Header Import\r\nimport Header from \"./Header\";\r\n\r\n//Display Import\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Collections from \"./collections\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n\r\n            <Route path=\"/collections\" exact component={Collections} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport CollectionsList from \"./CollectionsList\";\r\nimport SelectedCollection from \"./SelectedCollection\";\r\nimport TablesList from \"./TablesList\";\r\nimport BatchesList from \"./BatchesList\";\r\nimport PlacesList from \"./PlacesList\";\r\nimport DaysList from \"./DaysList\";\r\nimport TimesList from \"./TimesList\";\r\nimport BlocksList from \"./BlocksList\";\r\nimport SubjectsList from \"./SubjectsList\";\r\nimport TeachersList from \"./TeachersList\";\r\n\r\nexport default combineReducers({\r\n  CollectionsList,\r\n  SelectedCollection,\r\n  TablesList,\r\n  PlacesList,\r\n  BatchesList,\r\n  DaysList,\r\n  TimesList,\r\n  BlocksList,\r\n  SubjectsList,\r\n  TeachersList\r\n});\r\n","import {\r\n  CREATE_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION\r\n} from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = storage.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_COLLECTION:\r\n    case RENAME_COLLECTION:\r\n    case DELETE_COLLECTION:\r\n      return action.payload.collections;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, DELETE_COLLECTION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n      return action.payload.selectedCollection || null;\r\n    case DELETE_COLLECTION:\r\n      if (state !== null && action.payload.deleted.id === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TABLE:\r\n      return action.payload.tables.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_PLACE:\r\n    case UPDATE_PLACE:\r\n    case DELETE_PLACE:\r\n      return action.payload.places.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_BATCH,\r\n  UPDATE_BATCH,\r\n  DELETE_BATCH\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BATCH:\r\n    case UPDATE_BATCH:\r\n    case DELETE_BATCH:\r\n      return action.payload.batches.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_DAY:\r\n    case UPDATE_DAY:\r\n    case DELETE_DAY:\r\n      return action.payload.days.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TIME } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TIME:\r\n      return action.payload.times.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_BLOCK } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BLOCK:\r\n      return action.payload.blocks.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_SUBJECT:\r\n    case UPDATE_SUBJECT:\r\n    case DELETE_SUBJECT:\r\n      return action.payload.subjects.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TEACHER } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TEACHER:\r\n      return action.payload.teachers.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}