{"version":3,"sources":["components/Header.js","engine/storage.js","actions/index.js","actions/types.js","components/display/Welcome.js","components/display/Block.js","components/display/Table.js","components/display/index.js","components/collections/List.js","components/collections/Create.js","actions/helpers.js","components/collections/areas/FormEditor.js","components/collections/areas/TableEditor.js","components/collections/areas/index.js","components/collections/user/Days.js","components/collections/Edit.js","components/Modal.js","components/collections/index.js","components/App.js","reducers/index.js","reducers/CollectionsList.js","reducers/SelectedCollection.js","reducers/TablesList.js","reducers/PlacesList.js","reducers/BatchesList.js","reducers/DaysList.js","reducers/TimesList.js","reducers/BlocksList.js","reducers/SubjectsList.js","reducers/TeachersList.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","storage","id","name","list","getList","collection","data","tables","blocks","days","times","places","batches","subjects","teachers","push","saveList","saveData","localStorage","getItem","JSON","parse","ex","arguments","length","undefined","setItem","stringify","newname","newlist","map","item","filter","removeItem","type","tableData","getData","ListFunctions","all","this","itemID","createItem","updateItem","deleteItem","selectCollection","payload","selectedCollection","Welcome","_this","onClick","console","log","props","exampleCollection","connect","create","Example","collections","Block","string","pattern","indexOf","words","match","replace","variable","block","b","batch","day","time","place","teacher","subject","display","className","p","key","getTextFor","state","TablesList","DaysList","PlacesList","TimesList","BatchesList","SubjectsList","TeachersList","Table","base","BaseBlockKey","baseBlockKey","rows","RowsBlockKey","rowsBlockKey","cols","ColsBlockKey","colsBlockKey","mode","col","row","params","display_Block","Display","download","downloadType","screen","refs","doc","jsPDF","orientation","fromHTML","save","domtoimage","toPng","bgcolor","then","dataUrl","link","document","href","target","click","catch","error","toJpeg","downloadPDF","downloadPNG","downloadJPEG","_this2","_this$props","objector","getBlockKey","listName","substr","setState","ref","table","i","baseValue","display_Table","display_Welcome","selected","CollectionsList","SelectedCollection","BlocksList","List","selectClass","selectedItem","concat","buttons","button","action","CreateTable","form","handle","event","preventDefault","submit","onSubmit","htmlFor","value","onChange","e","cancel","rand","operator","start","end","Math","random","toString","split","FormEditor","property","keys","saveForm","k","default","nounmount","style","width","flexDirection","justifyContent","alignItems","x","show","keyType","newvalue","disabled","locked","required","defaultValue","field","children","TableEditor","saveTable","items","blist","baseList","rowsList","rowsValue","colsList","areas_FormEditor","Object","objectSpread","Area","array","heading","editor","showCreator","showEditorFor","obj","bypass","saveFunction","areas_TableEditor","deleteProperty","deleteActionCreator","createActionCreator","updateActionCreator","creator","padding","Days","forEach","prop","EditCollection","collectionID","editArea","updateState","activeClass","textTransform","margin","areas","createTable","propID","updateTable","deleteTable","createBlock","updateBlock","deleteBlock","createDay","updateDay","deleteDay","user_Days","createTime","updateTime","deleteTime","createPlace","updatePlace","deletePlace","createBatch","updateBatch","deleteBatch","createSubject","updateSubject","deleteSubject","createTeacher","updateTeacher","deleteTeacher","blockID","tableID","dayID","timeID","placeID","batchID","subjectID","teacherID","Modal","modalType","content","message","okFunction","contentModal","yesFunction","cancelFunction","messageModal","confirmModal","yes","Collections","createForm","editCollection","modalDisplay","deleteFunction","copyCollection","deleteCollection","Edit","Create","values","createCollection","collections_List","components_Modal","newid","renameCollection","rename","deleted","delete","App","HashRouter","components_Header","Route","path","exact","component","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.0b966bc5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/collections\">\r\n            <button>Collections</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","class storage {\r\n  static create(id, name) {\r\n    let list = storage.getList();\r\n    let collection = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id,\r\n      tables: [],\r\n      blocks: [],\r\n      days: [],\r\n      times: [],\r\n      places: [],\r\n      batches: [],\r\n      subjects: [],\r\n      teachers: []\r\n    };\r\n    list.push(collection);\r\n    storage.saveList(list);\r\n    storage.saveData(id, data);\r\n  }\r\n  static getList() {\r\n    let list = localStorage.getItem(\"collections\") || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  static saveList(list = []) {\r\n    localStorage.setItem(\"collections\", JSON.stringify(list));\r\n  }\r\n\r\n  static getData(id) {\r\n    let data = localStorage.getItem(\"c-\" + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  static saveData(id, data = {}) {\r\n    localStorage.setItem(\"c-\" + id, JSON.stringify(data));\r\n  }\r\n  static rename(id, newname) {\r\n    let list = storage.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    storage.saveList(newlist);\r\n  }\r\n  static delete(id) {\r\n    let list = storage.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    storage.saveList(newlist);\r\n    localStorage.removeItem(\"c-\" + id);\r\n  }\r\n\r\n  //Main User Functions\r\n\r\n  static list(id, type) {\r\n    let tableData = storage.getData(id);\r\n    if (tableData) {\r\n      if (!tableData[type]) {\r\n        tableData[type] = [];\r\n        storage.saveData(id, tableData);\r\n      }\r\n      let ListFunctions = {\r\n        all: function() {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          return list;\r\n        },\r\n        getItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let items = list.filter(item => item.id === itemID);\r\n          return items[0];\r\n        },\r\n        createItem: function(data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list.push(data);\r\n          storage.saveData(this.id, tableData);\r\n          return data;\r\n        },\r\n        updateItem: function(itemID, data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          list = list.map(item => {\r\n            if (item.id === itemID) {\r\n              return data;\r\n            }\r\n            return item;\r\n          });\r\n          tableData[this.type] = list;\r\n          storage.saveData(this.id, tableData);\r\n        },\r\n        deleteItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          tableData[this.type] = list.filter(item => item.id !== itemID);\r\n          storage.saveData(this.id, tableData);\r\n        }\r\n      };\r\n      ListFunctions.id = id;\r\n      ListFunctions.type = type;\r\n      return ListFunctions;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../engine/storage\";\r\nimport {\r\n  EXAMPLE_COLLECTION,\r\n  CREATE_COLLECTION,\r\n  SELECT_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION,\r\n  CREATE_TABLE,\r\n  UPDATE_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BLOCK,\r\n  UPDATE_BLOCK,\r\n  DELETE_BLOCK,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY,\r\n  CREATE_TIME,\r\n  UPDATE_TIME,\r\n  DELETE_TIME,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE,\r\n  CREATE_BATCH,\r\n  UPDATE_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT,\r\n  CREATE_TEACHER,\r\n  UPDATE_TEACHER,\r\n  DELETE_TEACHER,\r\n  COPY_COLLECTION\r\n} from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.create(\"example\", \"Example\");\r\n  let list = storage.getList();\r\n  storage.saveData(\"example\", Example);\r\n  return {\r\n    type: EXAMPLE_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\n\r\nexport const createCollection = (id, name) => {\r\n  storage.create(id, name);\r\n  let list = storage.getList();\r\n  return {\r\n    type: CREATE_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  return {\r\n    type: SELECT_COLLECTION,\r\n    payload: {\r\n      selectedCollection: storage.getData(id),\r\n      tables: storage.list(id, \"tables\"),\r\n      days: storage.list(id, \"days\"),\r\n      places: storage.list(id, \"places\"),\r\n      times: storage.list(id, \"times\"),\r\n      blocks: storage.list(id, \"blocks\"),\r\n      batches: storage.list(id, \"batches\"),\r\n      subjects: storage.list(id, \"subjects\"),\r\n      teachers: storage.list(id, \"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const copyCollection = (id, newid) => {\r\n  let data = storage.getData(id);\r\n  data.id = newid;\r\n  data.name += \" Copy\";\r\n  storage.create(newid, data.name);\r\n  storage.saveData(newid, data);\r\n  let list = storage.getList();\r\n  return {\r\n    type: COPY_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  storage.rename(id, newname);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_COLLECTION,\r\n    payload: {\r\n      collections: list\r\n    }\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  let deleted = storage.getData(id);\r\n  storage.delete(id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: DELETE_COLLECTION,\r\n    payload: {\r\n      collections: list,\r\n      deleted\r\n    }\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.createItem(data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: CREATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const updateTable = (collectionID, tableID, data) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.updateItem(tableID, data);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: UPDATE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\nexport const deleteTable = (collectionID, tableID) => {\r\n  let tables = storage.list(collectionID, \"tables\");\r\n  tables.deleteItem(tableID);\r\n  tables = storage.list(collectionID, \"tables\");\r\n  return {\r\n    type: DELETE_TABLE,\r\n    payload: {\r\n      tables\r\n    }\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.createItem(data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: CREATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const updateBlock = (collectionID, blockID, data) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.updateItem(blockID, data);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: UPDATE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\nexport const deleteBlock = (collectionID, blockID) => {\r\n  let blocks = storage.list(collectionID, \"blocks\");\r\n  blocks.deleteItem(blockID);\r\n  blocks = storage.list(collectionID, \"blocks\");\r\n  return {\r\n    type: DELETE_BLOCK,\r\n    payload: {\r\n      blocks\r\n    }\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.createItem(data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: CREATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const updateDay = (collectionID, dayID, data) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.updateItem(dayID, data);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: UPDATE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = (collectionID, dayID) => {\r\n  let days = storage.list(collectionID, \"days\");\r\n  days.deleteItem(dayID);\r\n  days = storage.list(collectionID, \"days\");\r\n  return {\r\n    type: DELETE_DAY,\r\n    payload: {\r\n      days\r\n    }\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.createItem(data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: CREATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const updateTime = (collectionID, timeID, data) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.updateItem(timeID, data);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: UPDATE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = (collectionID, timeID) => {\r\n  let times = storage.list(collectionID, \"times\");\r\n  times.deleteItem(timeID);\r\n  times = storage.list(collectionID, \"times\");\r\n  return {\r\n    type: DELETE_TIME,\r\n    payload: {\r\n      times\r\n    }\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.createItem(data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: CREATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const updatePlace = (collectionID, placeID, data) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.updateItem(placeID, data);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: UPDATE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = (collectionID, placeID) => {\r\n  let places = storage.list(collectionID, \"places\");\r\n  places.deleteItem(placeID);\r\n  places = storage.list(collectionID, \"places\");\r\n  return {\r\n    type: DELETE_PLACE,\r\n    payload: {\r\n      places\r\n    }\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.createItem(data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: CREATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const updateBatch = (collectionID, batchID, data) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.updateItem(batchID, data);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: UPDATE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = (collectionID, batchID) => {\r\n  let batches = storage.list(collectionID, \"batches\");\r\n  batches.deleteItem(batchID);\r\n  batches = storage.list(collectionID, \"batches\");\r\n  return {\r\n    type: DELETE_BATCH,\r\n    payload: {\r\n      batches\r\n    }\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.createItem(data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: CREATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const updateSubject = (collectionID, subjectID, data) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.updateItem(subjectID, data);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: UPDATE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = (collectionID, subjectID) => {\r\n  let subjects = storage.list(collectionID, \"subjects\");\r\n  subjects.deleteItem(subjectID);\r\n  subjects = storage.list(collectionID, \"subjects\");\r\n  return {\r\n    type: DELETE_SUBJECT,\r\n    payload: {\r\n      subjects\r\n    }\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.createItem(data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: CREATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const updateTeacher = (collectionID, teacherID, data) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.updateItem(teacherID, data);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: UPDATE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = (collectionID, teacherID) => {\r\n  let teachers = storage.list(collectionID, \"teachers\");\r\n  teachers.deleteItem(teacherID);\r\n  teachers = storage.list(collectionID, \"teachers\");\r\n  return {\r\n    type: DELETE_TEACHER,\r\n    payload: {\r\n      teachers\r\n    }\r\n  };\r\n};\r\n","export const EXAMPLE_COLLECTION = \"EXAMPLE_COLLECTION\";\r\n\r\nexport const CREATE_COLLECTION = \"CREATE_COLLECTION\";\r\nexport const SELECT_COLLECTION = \"SELECT_COLLECTION\";\r\nexport const COPY_COLLECTION = \"COPY_COLLECTION\";\r\nexport const RENAME_COLLECTION = \"RENAME_COLLECTION\";\r\nexport const DELETE_COLLECTION = \"DELETE_COLLECTION\";\r\n\r\nexport const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const UPDATE_TABLE = \"UPDATE_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BLOCK = \"CREATE_BLOCK\";\r\nexport const UPDATE_BLOCK = \"UPDATE_BLOCK\";\r\nexport const DELETE_BLOCK = \"DELETE_BLOCK\";\r\n\r\nexport const CREATE_DAY = \"CREATE_DAY\";\r\nexport const UPDATE_DAY = \"UPDATE_DAY\";\r\nexport const DELETE_DAY = \"DELETE_DAY\";\r\n\r\nexport const CREATE_TIME = \"CREATE_TIME\";\r\nexport const UPDATE_TIME = \"UPDATE_TIME\";\r\nexport const DELETE_TIME = \"DELETE_TIME\";\r\n\r\nexport const CREATE_PLACE = \"CREATE_PLACE\";\r\nexport const UPDATE_PLACE = \"UPDATE_PLACE\";\r\nexport const DELETE_PLACE = \"DELETE_PLACE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const UPDATE_BATCH = \"UPDATE_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\r\nexport const UPDATE_SUBJECT = \"UPDATE_SUBJECT\";\r\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\r\n\r\nexport const CREATE_TEACHER = \"CREATE_TEACHER\";\r\nexport const UPDATE_TEACHER = \"UPDATE_TEACHER\";\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { exampleCollection } from \"./../../actions/\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Welcome !</span>\r\n        <p>You have't created any collections</p>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              console.log(\"Loading The Example\");\r\n              this.props.exampleCollection();\r\n            }}\r\n          >\r\n            Load An Example\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <Link to=\"/collections\">Click Here To Create Collections</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { exampleCollection }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Block extends Component {\r\n  pattern(string) {\r\n    let pattern = [];\r\n    while (string.indexOf(\"%\") > -1) {\r\n      let regExp = /%(.*?)%/;\r\n      let words = string.match(regExp);\r\n      string = string.replace(words[0], \"\");\r\n      pattern.push(words[1]);\r\n    }\r\n    return pattern;\r\n  }\r\n  getTextFor(variable, block) {\r\n    switch (variable) {\r\n      case \"batch\":\r\n        return this.props.batches.filter(b => b.id === block.batch)[0].name;\r\n      case \"day\":\r\n        return this.props.days.filter(b => b.id === block.day)[0].name;\r\n      case \"time\":\r\n        return this.props.times.filter(b => b.id === block.time)[0].name;\r\n      case \"place\":\r\n        return this.props.places.filter(b => b.id === block.place)[0].name;\r\n      case \"teacher\":\r\n        return this.props.teachers.filter(b => b.id === block.teacher)[0].name;\r\n      case \"subject\":\r\n        return this.props.subjects.filter(b => b.id === block.subject)[0].name;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n  render() {\r\n    let block = this.props.block;\r\n    let pattern = this.pattern(block.display);\r\n    return (\r\n      <div className=\"block\">\r\n        {pattern.map(p => {\r\n          return <div key={\"blp\" + p}>{this.getTextFor(p, block)}</div>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Block);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Block from \"./Block\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    let base = this.props.base;\r\n    let BaseBlockKey = this.props.baseBlockKey;\r\n    let rows = this.props.rows;\r\n    let RowsBlockKey = this.props.rowsBlockKey;\r\n    let cols = this.props.cols;\r\n    let ColsBlockKey = this.props.colsBlockKey;\r\n    let blocks = this.props.blocks;\r\n    let mode = this.props.mode;\r\n    return (\r\n      <div key={this.props.id}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td>{base != null ? base.name : null}</td>\r\n              {cols.map(col => {\r\n                return <td key={\"c\" + col.id}>{col.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map(row => {\r\n              return (\r\n                <tr key={\"r\" + row.id}>\r\n                  <td>{row.name}</td>\r\n                  {cols.map(col => {\r\n                    let block = blocks.filter(\r\n                      block =>\r\n                        block[BaseBlockKey] === base.id &&\r\n                        block[RowsBlockKey] === row.id &&\r\n                        block[ColsBlockKey] === col.id\r\n                    );\r\n                    if (block.length === 0) {\r\n                      if (mode === \"print\") {\r\n                        return <td key={\"emp\" + col.id} />;\r\n                      }\r\n                      return (\r\n                        <td\r\n                          onClick={() => {\r\n                            let params = {};\r\n                            params[BaseBlockKey] = this.props.id;\r\n                            params[RowsBlockKey] = row.id;\r\n                            params[ColsBlockKey] = col.id;\r\n                          }}\r\n                          key={\"b\" + col.id}\r\n                        >\r\n                          <button>+</button>\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <td key={\"b\" + col.id} className=\"table-block\">\r\n                          <Block block={block[0]} />\r\n                        </td>\r\n                      );\r\n                    }\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport Table from \"./Table\";\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nimport { selectCollection } from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    mode: \"edit\",\r\n    download: false,\r\n    downloadType: \"pdf\"\r\n  };\r\n  downloadPDF() {\r\n    let screen = this.refs.screen;\r\n    let doc = new jsPDF({ orientation: \"landscape\" });\r\n    doc.fromHTML(screen);\r\n    doc.save(\"file.pdf\");\r\n  }\r\n  downloadPNG() {\r\n    let screen = this.refs.screen;\r\n    domtoimage\r\n      .toPng(screen, { bgcolor: \"#fff\" })\r\n      .then(function(dataUrl) {\r\n        let link = document.createElement(\"a\");\r\n        link.href = dataUrl;\r\n        link.download = \"file.png\";\r\n        link.target = \"_blank\";\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error converting to PNG Image\");\r\n      });\r\n  }\r\n  downloadJPEG() {\r\n    let screen = this.refs.screen;\r\n    domtoimage\r\n      .toJpeg(screen, { bgcolor: \"#fff\" })\r\n      .then(function(dataUrl) {\r\n        let link = document.createElement(\"a\");\r\n        link.download = \"file.jpeg\";\r\n        link.href = dataUrl;\r\n        link.target = \"_blank\";\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error converting to JPEG Image\");\r\n      });\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      switch (this.state.downloadType) {\r\n        case \"pdf\":\r\n        default:\r\n          this.downloadPDF();\r\n          break;\r\n        case \"png\":\r\n          this.downloadPNG();\r\n          break;\r\n        case \"jpeg\":\r\n          this.downloadJPEG();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  screen() {\r\n    let {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    } = this.props;\r\n    let objector = {\r\n      tables,\r\n      blocks,\r\n      batches,\r\n      days,\r\n      times,\r\n      places,\r\n      subjects,\r\n      teachers\r\n    };\r\n\r\n    let getBlockKey = listName => {\r\n      switch (listName) {\r\n        case \"batches\":\r\n          return \"batch\";\r\n        default:\r\n          return listName.substr(0, listName.length - 1);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Acadtable</h1>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                mode: \"print\",\r\n                downloadType: \"pdf\",\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download As PDF\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                mode: \"print\",\r\n                downloadType: \"png\",\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download As PNG\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                mode: \"print\",\r\n                downloadType: \"jpeg\",\r\n                download: true\r\n              });\r\n            }}\r\n          >\r\n            Download As JPEG\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"edit\" });\r\n            }}\r\n            className={this.state.mode === \"edit\" ? \"btn-red\" : \"\"}\r\n          >\r\n            edit\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ mode: \"print\" });\r\n            }}\r\n            className={this.state.mode === \"print\" ? \"btn-red\" : \"\"}\r\n          >\r\n            print\r\n          </button>\r\n        </div>\r\n        <div ref=\"screen\">\r\n          {tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              i => i.id === table.baseValue\r\n            )[0];\r\n            let rows = objector[table.rows];\r\n            let cols = objector[table.cols];\r\n            return (\r\n              <Table\r\n                id={table.id}\r\n                key={table.id}\r\n                mode={this.state.mode}\r\n                base={base}\r\n                baseBlockKey={getBlockKey(table.base)}\r\n                rows={rows}\r\n                rowsBlockKey={getBlockKey(table.rows)}\r\n                cols={cols}\r\n                colsBlockKey={getBlockKey(table.cols)}\r\n                blocks={blocks}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.collections.length === 0) {\r\n      return <Welcome />;\r\n    } else if (this.props.selected === null) {\r\n      if (this.props.collections.length === 1) {\r\n        this.props.selectCollection(this.props.collections[0].id);\r\n      }\r\n      return (\r\n        <div>\r\n          <span>Please select a collection</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selected: state.SelectedCollection,\r\n    tables: state.TablesList,\r\n    days: state.DaysList,\r\n    places: state.PlacesList,\r\n    times: state.TimesList,\r\n    blocks: state.BlocksList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-container\">\r\n        {this.props.list.map(item => {\r\n          let selectClass =\r\n            this.props.selected === item.id ? \"selected-card\" : \"\";\r\n          let selectedItem = this.props.selected === item.id ? true : false;\r\n          return (\r\n            <div key={item.id} className={`table-card card-box ${selectClass}`}>\r\n              <div className=\"card-title\">{item.name}</div>\r\n              <div className=\"buttons-list blue\">\r\n                {this.props.buttons.map(button => {\r\n                  let restrictSelected =\r\n                    button.selected == null ? false : button.selected;\r\n                  if (restrictSelected) {\r\n                    if (selectedItem) {\r\n                      return null;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <button\r\n                      onClick={() => {\r\n                        button.action(item.id);\r\n                      }}\r\n                      key={button.name}\r\n                    >\r\n                      {button.name}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CreateTable extends Component {\r\n  state = {\r\n    form: {\r\n      name: \"\"\r\n    }\r\n  };\r\n  handle = event => {\r\n    event.preventDefault();\r\n    this.props.submit(this.state.form);\r\n  };\r\n  render() {\r\n    if (this.props.display === \"form\") {\r\n      return (\r\n        <form onSubmit={this.handle} className=\"row-block\">\r\n          <label htmlFor=\"name\" className=\"item\">\r\n            {this.props.name} :\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"item\"\r\n            value={this.state.form.name}\r\n            onChange={e => {\r\n              this.setState({\r\n                form: {\r\n                  name: e.target.value\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          <input type=\"submit\" className=\"item\" />\r\n          <button\r\n            onClick={() => {\r\n              this.props.cancel();\r\n            }}\r\n            className=\"item\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"buttons-list\">\r\n          <li>\r\n            <button onClick={this.props.click}>Create A Collection</button>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CreateTable;\r\n","export const rand = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  saveForm = () => {\r\n    let property = this.state.property;\r\n    this.state.keys.map(k => {\r\n      if (k.type && k.type === \"select\") {\r\n        if (property[k.name] === null) {\r\n          property[k.name] =\r\n            this.state.property[k.name] != null\r\n              ? this.state.property[k.name]\r\n              : k.list.length > 0\r\n              ? k.list[0].id\r\n              : null;\r\n        }\r\n      } else if (k.type && k.type === \"textarea\") {\r\n        property[k.name] =\r\n          this.state.property[k.name] != null\r\n            ? this.state.property[k.name]\r\n            : k.default != null\r\n            ? k.default\r\n            : null;\r\n      }\r\n      return null;\r\n    });\r\n    this.props.save(property);\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.props.nounmount) {\r\n      this.saveForm();\r\n    }\r\n  }\r\n  render() {\r\n    const field = (keyType, key) => {\r\n      switch (keyType) {\r\n        case \"input\":\r\n        default:\r\n          return (\r\n            <input\r\n              key={key.name + \"inp\"}\r\n              type=\"text\"\r\n              onChange={x => {\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n              style={{ display: \"table-cell\" }}\r\n            />\r\n          );\r\n        case \"select\":\r\n          return (\r\n            <select\r\n              defaultValue={\r\n                this.state.property[key.name] != null\r\n                  ? this.state.property[key.name]\r\n                  : key.list.length > 0\r\n                  ? key.list[0].id\r\n                  : null\r\n              }\r\n              onChange={x => {\r\n                let property = this.state.property;\r\n                property[key.name] = x.target.value;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n            >\r\n              {key.list.map(item => {\r\n                return (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          );\r\n        case \"textarea\":\r\n          return (\r\n            <textarea\r\n              key={key.name + \"txt\"}\r\n              onChange={x => {\r\n                console.log(x.target.value);\r\n                let newvalue = x.target.value;\r\n                let property = this.state.property;\r\n                property[key.name] = newvalue;\r\n                this.setState({ property });\r\n              }}\r\n              disabled={key.locked == null ? false : key.locked}\r\n              required={key.required == null ? false : key.required}\r\n              style={{ display: \"table-cell\" }}\r\n              value={\r\n                this.state.property[key.name] == null\r\n                  ? key.default != null\r\n                    ? key.default\r\n                    : \"\"\r\n                  : this.state.property[key.name]\r\n              }\r\n            />\r\n          );\r\n      }\r\n    };\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"table\" }}>\r\n          <form\r\n            onSubmit={x => {\r\n              x.preventDefault();\r\n              this.saveForm();\r\n            }}\r\n          >\r\n            {this.state.keys.map(key => {\r\n              if (key.show != null && !key.show) {\r\n                return null;\r\n              }\r\n              let keyType = key.type != null ? key.type : \"input\";\r\n              return (\r\n                <div key={key.name + key.id} style={{ display: \"table-row\" }}>\r\n                  <label\r\n                    htmlFor={key.name + key.id + \"inp\"}\r\n                    style={{ display: \"table-cell\" }}\r\n                  >\r\n                    {key.name}\r\n                  </label>\r\n                  {field(keyType, key)}\r\n                </div>\r\n              );\r\n            })}\r\n            {this.props.children}\r\n            <div style={{ display: \"table-row\" }}>\r\n              <div style={{ display: \"table-cell\" }} />\r\n              <input\r\n                type=\"submit\"\r\n                style={{ display: \"table-cell\", width: \"100%\" }}\r\n                className=\"btn-red\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport FormEditor from \"./FormEditor\";\r\n\r\nclass TableEditor extends Component {\r\n  state = {\r\n    property: this.props.property,\r\n    keys: this.props.keys\r\n  };\r\n  saveTable = () => {\r\n    let property = this.state.property;\r\n    if (property.base == null) {\r\n      property.base = this.props.items[0].name;\r\n    }\r\n    if (property.baseValue == null) {\r\n      property.baseValue =\r\n        this.props.items[0].list.length > 0\r\n          ? this.props.items[0].list[0].id\r\n          : null;\r\n    }\r\n    if (property.rows == null) {\r\n      property.rows = this.props.items[1].name;\r\n    }\r\n    if (property.cols == null) {\r\n      property.cols = this.props.items[2].name;\r\n    }\r\n    this.props.save(property);\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.props.nounmount) {\r\n      this.saveTable();\r\n    }\r\n  }\r\n  render() {\r\n    let items = this.props.items;\r\n    let base =\r\n      this.state.property.base != null\r\n        ? this.state.property.base\r\n        : items[0].name;\r\n    let blist = items.filter(i => i.name === base)[0];\r\n    let baseList = blist != null ? blist.list : [];\r\n    let rowsList = items.filter(i => i.name !== base);\r\n    let rowsValue =\r\n      this.state.property.rows != null\r\n        ? this.state.property.rows\r\n        : items[1].name;\r\n    let colsList = rowsList.filter(i => i.name !== rowsValue);\r\n    let property = this.state.property;\r\n    return (\r\n      <FormEditor\r\n        property={this.state.property}\r\n        keys={this.props.keys}\r\n        save={this.saveTable}\r\n        nounmount={this.props.nounmount}\r\n      >\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"base\" style={{ display: \"table-cell\" }}>\r\n            Base\r\n          </label>\r\n          <select\r\n            name=\"base\"\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, base: x.target.value }\r\n              });\r\n            }}\r\n            style={{ display: \"table-cell\" }}\r\n            defaultValue={\r\n              this.state.property.base != null\r\n                ? this.state.property.base\r\n                : items[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {items.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, baseValue: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.baseValue != null\r\n                ? this.state.property.baseValue\r\n                : baseList.length > 0\r\n                ? baseList[0].id\r\n                : null\r\n            }\r\n            required={true}\r\n          >\r\n            {baseList.map(item => {\r\n              return (\r\n                <option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n            Rows\r\n          </label>\r\n          <select\r\n            id=\"rows\"\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, rows: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.rows != null\r\n                ? this.state.property.rows\r\n                : rowsList[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {rowsList.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div style={{ display: \"table-row\" }}>\r\n          <label htmlFor=\"rows\" style={{ display: \"table-cell\" }}>\r\n            Columns\r\n          </label>\r\n          <select\r\n            style={{ display: \"table-cell\" }}\r\n            onChange={x => {\r\n              this.setState({\r\n                property: { ...property, cols: x.target.value }\r\n              });\r\n            }}\r\n            defaultValue={\r\n              this.state.property.cols != null\r\n                ? this.state.property.cols\r\n                : colsList[0].name\r\n            }\r\n            required={true}\r\n          >\r\n            {colsList.map(item => {\r\n              return (\r\n                <option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </FormEditor>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableEditor;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { rand } from \"../../../actions/helpers\";\r\n\r\nimport FormEditor from \"./FormEditor\";\r\nimport TableEditor from \"./TableEditor\";\r\n\r\nclass Area extends Component {\r\n  state = {\r\n    array: this.props.array,\r\n    name: this.props.name,\r\n    heading: this.props.heading,\r\n    editor: this.props.editor || \"FormEditor\",\r\n    showCreator: false,\r\n    showEditorFor: null\r\n  };\r\n  editor = (obj, bypass = false, create) => {\r\n    if (this.state.showEditorFor === obj || bypass) {\r\n      let saveFunction = bypass ? create : this.save;\r\n      switch (this.state.editor) {\r\n        case \"FormEditor\":\r\n        default:\r\n          return (\r\n            <FormEditor\r\n              property={obj}\r\n              keys={this.props.keys}\r\n              save={saveFunction}\r\n              nounmount={bypass}\r\n            />\r\n          );\r\n        case \"TableEditor\":\r\n          return (\r\n            <TableEditor\r\n              property={obj}\r\n              items={this.props.items}\r\n              keys={this.props.keys}\r\n              save={saveFunction}\r\n              nounmount={bypass}\r\n            />\r\n          );\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  deleteProperty = obj => {\r\n    this.props.deleteActionCreator(obj.id);\r\n    let array = this.state.array.filter(item => item.id !== obj.id);\r\n    this.setState({ array: array });\r\n  };\r\n  create = obj => {\r\n    console.log(\"Creating In Storage\");\r\n    console.log(obj);\r\n    obj.id = rand(this.state.name);\r\n    this.props.createActionCreator(obj);\r\n  };\r\n  save = obj => {\r\n    console.log(\"Saving Changes into Storage\");\r\n    this.props.updateActionCreator(obj.id, obj);\r\n    if (this.state.showEditorFor === obj) {\r\n      this.setState({ showEditorFor: null });\r\n    }\r\n  };\r\n  creator = () => {\r\n    if (this.state.showCreator) {\r\n      let keys = {};\r\n      this.props.keys.map(k => {\r\n        keys[k.name] = null;\r\n        return null;\r\n      });\r\n      return this.editor(keys, true, this.create);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>{this.state.heading}</h2>\r\n          <div>{this.props.children}</div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ showCreator: !this.state.showCreator });\r\n              }}\r\n              className={this.state.showCreator ? \"\" : \"btn-red\"}\r\n            >\r\n              {this.state.showCreator ? \"Cancel\" : \"Create\"}\r\n            </button>\r\n          </div>\r\n          <div>\r\n            {this.creator()}\r\n            <ul style={{ padding: \"0px\" }}>\r\n              {this.state.array.map(obj => {\r\n                return (\r\n                  <li\r\n                    key={obj.id}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        property: obj\r\n                      })\r\n                    }\r\n                    className=\"area-item\"\r\n                  >\r\n                    <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                      <div>\r\n                        <h3>{obj.name}</h3>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <div className=\"buttons-list\">\r\n                          <button\r\n                            onClick={() => {\r\n                              this.setState({ showEditorFor: obj });\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button onClick={() => this.deleteProperty(obj)}>\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {this.editor(obj)}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Area;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { rand } from \"../../../actions/helpers\";\r\n\r\nclass Days extends Component {\r\n  render() {\r\n    let days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            days.forEach(day => {\r\n              let prop = {};\r\n              prop.name = day;\r\n              prop.id = rand(\"day\");\r\n              this.props.create(prop);\r\n            });\r\n          }}\r\n        >\r\n          Add All Days\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Days;\r\n","import React, { Component } from \"react\";\r\nimport storage from \"../../engine/storage\";\r\n\r\nimport Area from \"./areas\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport UserDays from \"./user/Days.js\";\r\n\r\nimport {\r\n  createBlock,\r\n  updateBlock,\r\n  deleteBlock,\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  createDay,\r\n  updateDay,\r\n  deleteDay,\r\n  createTime,\r\n  updateTime,\r\n  deleteTime,\r\n  createPlace,\r\n  updatePlace,\r\n  deletePlace,\r\n  createBatch,\r\n  updateBatch,\r\n  deleteBatch,\r\n  createSubject,\r\n  updateSubject,\r\n  deleteSubject,\r\n  createTeacher,\r\n  updateTeacher,\r\n  deleteTeacher\r\n} from \"../../actions\";\r\n\r\nclass EditCollection extends Component {\r\n  state = {\r\n    ...storage.getData(this.props.collectionID),\r\n    editArea: \"lectures\"\r\n  };\r\n  updateState = () => {\r\n    this.setState({ ...storage.getData(this.props.collectionID) });\r\n  };\r\n  render() {\r\n    const UserArea = () => {\r\n      switch (this.state.editArea) {\r\n        case \"tables\":\r\n          return (\r\n            <Area\r\n              array={this.state.tables}\r\n              createActionCreator={data => {\r\n                this.props.createTable(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTable(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTable(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"table\"\r\n              editor=\"TableEditor\"\r\n              heading=\"Tables\"\r\n              items={[\r\n                { name: \"days\", list: this.state.days, required: true },\r\n                { name: \"times\", list: this.state.times, required: true },\r\n                { name: \"batches\", list: this.state.batches, required: true },\r\n                { name: \"places\", list: this.state.places, required: true },\r\n                { name: \"subjects\", list: this.state.subjects, required: true },\r\n                { name: \"teachers\", list: this.state.teachers, required: true }\r\n              ]}\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n                // { name: \"options\" },\r\n                // { name: \"settings\" }\r\n              ]}\r\n            />\r\n          );\r\n        case \"lectures\":\r\n        default:\r\n          return (\r\n            <Area\r\n              array={this.state.blocks}\r\n              createActionCreator={data => {\r\n                this.props.createBlock(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBlock(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBlock(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"block\"\r\n              heading=\"Lectures\"\r\n              keys={[\r\n                {\r\n                  name: \"text\",\r\n                  required: true,\r\n                  locked: true,\r\n                  show: false\r\n                },\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                },\r\n                { name: \"customText\" },\r\n                {\r\n                  name: \"day\",\r\n                  type: \"select\",\r\n                  list: this.state.days,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"place\",\r\n                  type: \"select\",\r\n                  list: this.state.places,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"time\",\r\n                  type: \"select\",\r\n                  list: this.state.times,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"batch\",\r\n                  type: \"select\",\r\n                  list: this.state.batches,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"subject\",\r\n                  type: \"select\",\r\n                  list: this.state.subjects,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"teacher\",\r\n                  type: \"select\",\r\n                  list: this.state.teachers,\r\n                  required: true\r\n                },\r\n                {\r\n                  name: \"display\",\r\n                  type: \"textarea\",\r\n                  required: true,\r\n                  default: \"%batch%%subject%%teacher%\"\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"days\":\r\n          return (\r\n            <Area\r\n              array={this.state.days}\r\n              createActionCreator={data => {\r\n                this.props.createDay(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateDay(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteDay(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"day\"\r\n              heading=\"Days\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            >\r\n              <UserDays\r\n                create={data => {\r\n                  this.props.createDay(this.state.id, data);\r\n                  this.updateState();\r\n                }}\r\n              />\r\n            </Area>\r\n          );\r\n        case \"times\":\r\n          return (\r\n            <Area\r\n              array={this.state.times}\r\n              createActionCreator={data => {\r\n                this.props.createTime(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTime(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTime(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"time\"\r\n              heading=\"Times\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"places\":\r\n          return (\r\n            <Area\r\n              array={this.state.places}\r\n              createActionCreator={data => {\r\n                this.props.createPlace(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updatePlace(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deletePlace(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"place\"\r\n              heading=\"Places\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"batches\":\r\n          return (\r\n            <Area\r\n              array={this.state.batches}\r\n              createActionCreator={data => {\r\n                this.props.createBatch(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateBatch(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteBatch(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"batch\"\r\n              heading=\"Batches\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"subjects\":\r\n          return (\r\n            <Area\r\n              array={this.state.subjects}\r\n              createActionCreator={data => {\r\n                this.props.createSubject(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateSubject(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteSubject(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"subject\"\r\n              heading=\"Subjects\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        case \"teachers\":\r\n          return (\r\n            <Area\r\n              array={this.state.teachers}\r\n              createActionCreator={data => {\r\n                this.props.createTeacher(this.state.id, data);\r\n                this.updateState();\r\n              }}\r\n              updateActionCreator={(propID, data) => {\r\n                this.props.updateTeacher(this.state.id, propID, data);\r\n                this.updateState();\r\n              }}\r\n              deleteActionCreator={propID => {\r\n                this.props.deleteTeacher(this.state.id, propID);\r\n                this.updateState();\r\n              }}\r\n              name=\"teacher\"\r\n              heading=\"Teachers\"\r\n              keys={[\r\n                {\r\n                  name: \"name\",\r\n                  required: true,\r\n                  locked: false\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n      }\r\n    };\r\n    let MenuItems = [\r\n      \"lectures\",\r\n      \"tables\",\r\n      \"batches\",\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"buttons-list\">\r\n          <button onClick={this.props.cancel}>Back</button>\r\n        </div>\r\n        <h1>Collection : {this.state.name}</h1>\r\n        <div>\r\n          {MenuItems.map(item => {\r\n            let activeClass = \"\";\r\n            if (item === this.state.editArea) {\r\n              activeClass = \"btn-red\";\r\n            }\r\n            return (\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ editArea: item });\r\n                }}\r\n                style={{ textTransform: \"capitalize\", margin: \"2px\" }}\r\n                className={activeClass}\r\n                key={item}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <UserArea />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createBlock,\r\n    updateBlock,\r\n    deleteBlock,\r\n    createTable,\r\n    updateTable,\r\n    deleteTable,\r\n    createDay,\r\n    updateDay,\r\n    deleteDay,\r\n    createTime,\r\n    updateTime,\r\n    deleteTime,\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace,\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch,\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject,\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(EditCollection);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    modalType: this.props.type == null ? \"message\" : this.props.type\r\n  };\r\n  contentModal(content) {\r\n    return (\r\n      <div className=\"modal\" display={this.state.display ? \"block\" : \"none\"}>\r\n        <div className=\"modal-inside\">{content}</div>\r\n      </div>\r\n    );\r\n  }\r\n  messageModal(message = \"\", okFunction = () => {}) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              okFunction();\r\n            }}\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirmModal(\r\n    message = \"Are you sure ?\",\r\n    yesFunction = () => {},\r\n    cancelFunction = () => {}\r\n  ) {\r\n    return this.contentModal(\r\n      <div>\r\n        <div className=\"modal-message\">{message}</div>\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              yesFunction();\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              cancelFunction();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.display) {\r\n      switch (this.state.modalType) {\r\n        case \"message\":\r\n        default:\r\n          return this.messageModal(this.props.message);\r\n        case \"confirm\":\r\n          return this.confirmModal(\r\n            this.props.message,\r\n            this.props.yes,\r\n            this.props.cancel\r\n          );\r\n        case \"content\":\r\n          return this.contentModal(this.props.children);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nimport List from \"./List\";\r\nimport Create from \"./Create\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Modal from \"../Modal\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  copyCollection,\r\n  renameCollection,\r\n  deleteCollection\r\n} from \"../../actions\";\r\n\r\nimport { rand } from \"../../actions/helpers\";\r\n\r\nclass Collections extends Component {\r\n  state = {\r\n    createForm: false,\r\n    editCollection: null,\r\n    modalDisplay: false,\r\n    deleteFunction: () => {}\r\n  };\r\n  displayDeleteModal() {\r\n    this.setState({ modalDisplay: true });\r\n  }\r\n  render() {\r\n    let list = this.props.collections;\r\n\r\n    //Collection Buttons\r\n    let buttons = [];\r\n    buttons.push({\r\n      name: \"select\",\r\n      action: id => {\r\n        this.props.selectCollection(id);\r\n      },\r\n      selected: true\r\n    });\r\n    buttons.push({\r\n      name: \"copy\",\r\n      action: id => {\r\n        this.props.copyCollection(id, rand(\"collection\"));\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"edit\",\r\n      action: id => {\r\n        this.setState({\r\n          editCollection: id\r\n        });\r\n      }\r\n    });\r\n    buttons.push({\r\n      name: \"delete\",\r\n      action: id => {\r\n        this.setState({\r\n          modalDisplay: true,\r\n          deleteFunction: () => {\r\n            this.props.deleteCollection(id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    if (this.state.editCollection != null) {\r\n      return (\r\n        <Edit\r\n          collectionID={this.state.editCollection}\r\n          cancel={() => {\r\n            this.setState({ editCollection: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Collections</h1>\r\n        <Create\r\n          name=\"collection\"\r\n          display={this.state.createForm ? \"form\" : \"button\"}\r\n          click={() => {\r\n            this.setState({ createForm: true });\r\n          }}\r\n          submit={values => {\r\n            this.props.createCollection(rand(\"collection\"), values.name);\r\n            this.setState({ createForm: false });\r\n          }}\r\n          cancel={() => {\r\n            this.setState({ createForm: false });\r\n          }}\r\n        />\r\n        <List\r\n          selected={\r\n            this.props.selectedCollection != null\r\n              ? this.props.selectedCollection.id\r\n              : null\r\n          }\r\n          list={list}\r\n          buttons={buttons}\r\n        />\r\n        <Modal\r\n          display={this.state.modalDisplay}\r\n          type=\"confirm\"\r\n          yes={() => {\r\n            this.state.deleteFunction();\r\n            this.setState({ modalDisplay: false });\r\n          }}\r\n          cancel={() => this.setState({ modalDisplay: false })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.CollectionsList,\r\n    selectedCollection: state.SelectedCollection\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    renameCollection,\r\n    deleteCollection\r\n  }\r\n)(Collections);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n//Header Import\r\nimport Header from \"./Header\";\r\n\r\n//Display Import\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Collections from \"./collections\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Header />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n            <Route path=\"/collections\" exact component={Collections} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport CollectionsList from \"./CollectionsList\";\r\nimport SelectedCollection from \"./SelectedCollection\";\r\nimport TablesList from \"./TablesList\";\r\nimport BatchesList from \"./BatchesList\";\r\nimport PlacesList from \"./PlacesList\";\r\nimport DaysList from \"./DaysList\";\r\nimport TimesList from \"./TimesList\";\r\nimport BlocksList from \"./BlocksList\";\r\nimport SubjectsList from \"./SubjectsList\";\r\nimport TeachersList from \"./TeachersList\";\r\n\r\nexport default combineReducers({\r\n  CollectionsList,\r\n  SelectedCollection,\r\n  TablesList,\r\n  PlacesList,\r\n  BatchesList,\r\n  DaysList,\r\n  TimesList,\r\n  BlocksList,\r\n  SubjectsList,\r\n  TeachersList\r\n});\r\n","import {\r\n  EXAMPLE_COLLECTION,\r\n  CREATE_COLLECTION,\r\n  COPY_COLLECTION,\r\n  RENAME_COLLECTION,\r\n  DELETE_COLLECTION\r\n} from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = storage.getList(), action) => {\r\n  switch (action.type) {\r\n    case EXAMPLE_COLLECTION:\r\n    case CREATE_COLLECTION:\r\n    case COPY_COLLECTION:\r\n    case RENAME_COLLECTION:\r\n    case DELETE_COLLECTION:\r\n      return action.payload.collections;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, DELETE_COLLECTION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n      return action.payload.selectedCollection || null;\r\n    case DELETE_COLLECTION:\r\n      if (state !== null && action.payload.deleted.id === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TABLE:\r\n      return action.payload.tables.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_PLACE,\r\n  UPDATE_PLACE,\r\n  DELETE_PLACE\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_PLACE:\r\n    case UPDATE_PLACE:\r\n    case DELETE_PLACE:\r\n      return action.payload.places.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_BATCH,\r\n  UPDATE_BATCH,\r\n  DELETE_BATCH\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BATCH:\r\n    case UPDATE_BATCH:\r\n    case DELETE_BATCH:\r\n      return action.payload.batches.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_DAY,\r\n  UPDATE_DAY,\r\n  DELETE_DAY\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_DAY:\r\n    case UPDATE_DAY:\r\n    case DELETE_DAY:\r\n      return action.payload.days.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TIME } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TIME:\r\n      return action.payload.times.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_BLOCK } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_BLOCK:\r\n      return action.payload.blocks.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_COLLECTION,\r\n  CREATE_SUBJECT,\r\n  UPDATE_SUBJECT,\r\n  DELETE_SUBJECT\r\n} from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_SUBJECT:\r\n    case UPDATE_SUBJECT:\r\n    case DELETE_SUBJECT:\r\n      return action.payload.subjects.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_COLLECTION, CREATE_TEACHER } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_COLLECTION:\r\n    case CREATE_TEACHER:\r\n      return action.payload.teachers.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}