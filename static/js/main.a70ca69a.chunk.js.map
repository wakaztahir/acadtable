{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/App.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","id","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","createCollection","background","init","collection","set","type","payload","selectCollection","getDataKey","createTable","table","createLecture","lecture","createDay","day","createTime","time","createPlace","place","DefaultSetupSettings","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","name","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","value","onChange","x","setState","objectSpread","target","onClick","_this3","className","htmlFor","placeholder","_this4","style","color","_this5","objects","textTransform","map","obj","finish","title","_this6","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","concat","getMinutes","getTime","setMinutes","push","i","desc","toLocaleDateString","toUpperCase","baseValue","props","back","Component","connect","Welcome","ftDisplay","collectionName","collectionDesc","onSubmit","preventDefault","required","displayCreate","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","Screen","objector","filter","col","row","block","params","subject","st","batch","bh","teacher","tr","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","display","creator","action","_this2$state$creator","_this2$state$creator2","updateTable","defaultValue","item","marginRight","deleteTable","quicker","margin","disabled","baseName","fontWeight","tableID","mode","updateLecture","list","y","tm","pc","dy","deleteLecture","lectureID","createBatch","updateBatch","deleteBatch","batchID","updateDay","deleteDay","dayID","updateTime","deleteTime","timeID","updatePlace","deletePlace","placeID","createSubject","updateSubject","deleteSubject","subjectID","createTeacher","updateTeacher","deleteTeacher","teacherID","Display","display_Screen","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","ref","actor","User","App","components_Welcome","combineReducers","toConsumableArray","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.a70ca69a.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    id: \"example\",\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = data => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = data => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = data => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08:00\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01:00\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <span>Monday to </span>&nbsp;&nbsp;\r\n          <select\r\n            name=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ stage: \"times\" });\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\"\r\n      //   \"batches\",\r\n      //   \"subjects\",\r\n      //   \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name: \"Quick Collection\",\r\n        desc: `Collection created on ${new Date().toLocaleDateString()}. Created with love and forged with the heart of pain , no i am just kidding.`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place\r\n        },\r\n        true\r\n      );\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case null:\r\n      case \"days\":\r\n      default:\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"screen\">\r\n        {objector.tables.map(table => {\r\n          let base = objector[table.base].filter(\r\n            i => i.id === table.baseValue\r\n          )[0];\r\n          let rows = objector[table.rows];\r\n          let cols = objector[table.cols];\r\n          return (\r\n            <table key={table.id} className=\"screen-table\">\r\n              <thead>\r\n                <tr>\r\n                  <td>{base != null ? base.name : null}</td>\r\n                  {cols.map(col => {\r\n                    return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rows.map(row => {\r\n                  return (\r\n                    <tr key={\"r\" + row.id}>\r\n                      <td>{row.name}</td>\r\n                      {cols.map(col => {\r\n                        let block = objector[\"lectures\"].filter(\r\n                          block =>\r\n                            block[listKey(table.base)] === base.id &&\r\n                            block[listKey(table.rows)] === row.id &&\r\n                            block[listKey(table.cols)] === col.id\r\n                        );\r\n                        if (block.length === 0) {\r\n                          // if (this.state.mode === \"print\") {\r\n                          //   return <td key={\"emp\" + col.id} />;\r\n                          // }\r\n                          return (\r\n                            <td\r\n                              onClick={() => {\r\n                                let params = {};\r\n                                params[listKey(table.base)] = base.id;\r\n                                params[listKey(table.rows)] = row.id;\r\n                                params[listKey(table.cols)] = col.id;\r\n                                //this.props.displayAddModal(params);\r\n                              }}\r\n                              key={\"b\" + col.id}\r\n                              className=\"table-block empty-block\"\r\n                            >\r\n                              <button>+</button>\r\n                            </td>\r\n                          );\r\n                        } else {\r\n                          let lecture = block[0];\r\n                          let subject = this.props.subjects.filter(\r\n                            st => st.id === lecture.subject\r\n                          )[0].name;\r\n                          let batch = this.props.batches.filter(\r\n                            bh => bh.id === lecture.batch\r\n                          )[0].name;\r\n                          let teacher = this.props.teachers.filter(\r\n                            tr => tr.id === lecture.teacher\r\n                          )[0].name;\r\n                          return (\r\n                            <td key={\"b\" + col.id} className=\"table-block\">\r\n                              <span>{batch}</span>\r\n                              <span>{subject}</span>\r\n                              <span>{teacher}</span>\r\n                            </td>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\n// downloadPDF() {\r\n//   let screen = this.refs.screen;\r\n//   let doc = new jsPDF({ orientation: \"landscape\" });\r\n//   doc.fromHTML(screen);\r\n//   doc.save(\"file.pdf\");\r\n// }\r\n// downloadPNG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toPng(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.href = dataUrl;\r\n//       link.download = \"file.png\";\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to PNG Image\");\r\n//     });\r\n// }\r\n// downloadJPEG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toJpeg(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.download = \"file.jpeg\";\r\n//       link.href = dataUrl;\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to JPEG Image\");\r\n//     });\r\n// }\r\n// componentDidUpdate() {\r\n//   if (this.state.download) {\r\n//     switch (this.state.downloadType) {\r\n//       case \"pdf\":\r\n//       default:\r\n//         this.downloadPDF();\r\n//         break;\r\n//       case \"png\":\r\n//         this.downloadPNG();\r\n//         break;\r\n//       case \"jpeg\":\r\n//         this.downloadJPEG();\r\n//         break;\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.rows &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                defaultValue={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {objector[this.state.creator.base].map(item => {\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              defaultValue={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              defaultValue={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              style={{ marginRight: \"1em\" }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.props.deleteTable(this.state.creator.id);\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            if (base.length === 0) {\r\n              console.warning(\"Table Base Not Found\", table);\r\n              return null;\r\n            }\r\n            let baseName = base[0].name;\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>{baseName}</strong> Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createLecture, updateLecture, deleteLecture } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let {\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.createLecture({\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            } else {\r\n              let {\r\n                id,\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.updateLecture(id, {\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          {Object.keys(objector).map(key => {\r\n            let list = objector[key];\r\n            return (\r\n              <div className=\"form-row\" key={key}>\r\n                <label\r\n                  htmlFor={key + \"sct\"}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {key}\r\n                </label>\r\n                <select\r\n                  name={key}\r\n                  id={key + \"sct\"}\r\n                  value={this.state.creator[key]}\r\n                  required={true}\r\n                  onChange={x => {\r\n                    let y = {};\r\n                    y[key] = x.target.value;\r\n                    this.setState({ creator: { ...this.state.creator, ...y } });\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.lectures.map(lecture => {\r\n            let subject = this.props.subjects.filter(\r\n              st => st.id === lecture.subject\r\n            )[0].name;\r\n            let batch = this.props.batches.filter(\r\n              bh => bh.id === lecture.batch\r\n            )[0].name;\r\n            let teacher = this.props.teachers.filter(\r\n              tr => tr.id === lecture.teacher\r\n            )[0].name;\r\n            let time = this.props.times.filter(tm => tm.id === lecture.time)[0]\r\n              .name;\r\n            let place = this.props.places.filter(\r\n              pc => pc.id === lecture.place\r\n            )[0].name;\r\n            let day = this.props.days.filter(dy => dy.id === lecture.day)[0]\r\n              .name;\r\n            return (\r\n              <div key={lecture.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  {subject != null ? <span>{subject}</span> : null}\r\n                  {batch != null ? <span>{batch}</span> : null}\r\n                  {teacher != null ? <span>{teacher}</span> : null}\r\n                  {time != null ? <span>{time}</span> : null}\r\n                  {place != null ? <span>{place}</span> : null}\r\n                  {day != null ? <span>{day}</span> : null}\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...lecture,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteLecture(lecture.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createBatch, updateBatch, deleteBatch } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Batch\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map(batch => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createDay, updateDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Day\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map(day => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTime, updateTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Time\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map(time => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createPlace, updatePlace, deletePlace } from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Place\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map(place => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createSubject, updateSubject, deleteSubject } from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Subject\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map(subject => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTeacher, updateTeacher, deleteTeacher } from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Teacher\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map(teacher => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\n// import Modal from \"../Modal\";\r\n// import FormEditor from \"../collections/areas/FormEditor\";\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import domtoimage from \"dom-to-image\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\"\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen />;\r\n      case \"tables\":\r\n        return <Tables />;\r\n      case \"lectures\":\r\n        return <Lectures />;\r\n      case \"batches\":\r\n        return <Batches />;\r\n      case \"days\":\r\n        return <Days />;\r\n      case \"times\":\r\n        return <Times />;\r\n      case \"places\":\r\n        return <Places />;\r\n      case \"subjects\":\r\n        return <Subjects />;\r\n      case \"teachers\":\r\n        return <Teachers />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div ref=\"screen\" className=\"full-wrapper flex-center\">\r\n          {this.actor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    if (this.props.user == null) {\r\n      return <Welcome />;\r\n    } else {\r\n      return <Display />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}