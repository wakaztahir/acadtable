{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","components/modals/ColorsPanel.js","components/modals/LectureModal.js","actions/downloader.js","components/modals/Exporter.js","components/modals/TableActions.js","components/display/Screen.js","components/display/others/Tables.js","components/display/others/Lectures.js","components/display/others/Batches.js","components/display/others/Days.js","components/display/others/Times.js","components/display/others/Places.js","components/display/others/Subjects.js","components/display/others/Teachers.js","components/display/index.js","components/Modal.js","components/modals/AreaEditor.js","components/modals/ObjectEditor.js","components/Menu.js","components/App.js","registerServiceWorker.js","reducers/System.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","COLORS","TABLE_HEADER_COLOR","TABLE_FOOTER_COLOR","DEFAULT_LECTURE","id","day","time","place","subject","teacher","batch","color","display","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","reverse","keyList","keyName","listKey","listName","lectureValidator","lectures","lect","ex","lectFind","filter","l","value","message","secLectFind","batchValidator","batches","batchFind","b","name","dayValidator","days","dayFind","d","timeValidator","times","timeFind","t","placeValidator","places","placeFind","p","subjectValidator","subjects","subjectFind","s","teacherValidator","teachers","teacherFind","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","collections","getDataItem","key","delDataItem","delData","values","forEach","window","onbeforeunload","onunload","showModal","type","content","actions","buttons","payload","unshowModal","unshowMenu","createCollection","background","init","collection","set","selectCollection","getDataKey","deselectCollection","createTable","table","updateTable","tableID","deleteTable","createLecture","lecture","updateLecture","lectureID","deleteLecture","createDay","updateDay","dayID","swapDay","withID","current","future","i","newDays","setDataKey","deleteDay","createTime","updateTime","timeID","swapTime","newTimes","deleteTime","createPlace","updatePlace","placeID","swapPlace","newPlaces","deletePlace","createBatch","updateBatch","batchID","swapBatch","newBatches","deleteBatch","createSubject","updateSubject","subjectID","swapSubject","newSubjects","deleteSubject","createTeacher","updateTeacher","teacherID","swapTeacher","newTeachers","deleteTeacher","DefaultSetupSettings","info","desc","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","className","htmlFor","onChange","setState","objectSpread","target","placeholder","required","style","onClick","_this3","x","_this4","_this5","_this6","onSubmit","e","preventDefault","concat","toConsumableArray","map","item","index","y","_this7","_this8","_this9","objects","textTransform","obj","finish","title","_this10","slice","indexOf","timeChanger","modifier","parseInt","Date","setHours","timeStringer","hours","getHours","getMinutes","getTime","setMinutes","push","toLocaleDateString","toUpperCase","baseValue","header","text","footer","sidebar","props","back","Component","connect","Welcome","ftDisplay","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","Collections","newid","get","Example","deleted","delete","ColorsPanel","addClass","change","LectureModal","params","toEdit","edit","mode","list","defaultValue","margin","modals_ColorsPanel","multiple","selectedOptions","_ref","selected","_ref2","size","creator","marginTop","validation","Lectures","Days","Times","Places","Batches","Subjects","Teachers","downloadPDF","querySelectorAll","doc","jsPDF","orientation","unit","format","offsetWidth","offsetHeight","drawTable","on","tableWidth","tableHeight","domtoimage","toPng","bgcolor","width","height","then","dataUrl","addPage","addImage","internal","pageSize","getWidth","getHeight","catch","log","downloadPNG","link","document","href","download","click","error","downloadJPEG","toJpeg","Exporter","tableMode","downloader","TableActions","objector","_this2$state$creator","val1Table","val1Key","val2Table","val2Key","baseName","thing","fontStyle","rowtext","func","flexDirection","create","copy","addrowcol","Tables","Screen","refs","element","tochange","additional","showMenu","modals_TableActions","modals_Exporter","minWidth","ref","colSpan","onContextMenu","menu","clientX","clientY","moveBlock","block","rowsLine","col","colsLine","row","rindex","cindex","modals_LectureModal","tableBase","rname","cname","loot","th","User","DefaultCreator","action","DefaultQuicker","quicker","_this2$state$creator2","marginRight","fontWeight","listshow","showitem","itemlist","lectCard","st","bh","tr","tm","pc","dy","marginLeft","paddingBottom","marginBottom","dayObj","timeObj","placeObj","Display","changeDisplay","display_Screen","actor","others_Tables","others_Lectures","others_Batches","others_Days","others_Times","others_Places","others_Subjects","others_Teachers","btn","Modal","modal","button","waiting","confirm","implement","System","AreaEditor","update","ObjectEditor","updateValue","Menu","area","switcher","request","modals_ObjectEditor","_obj$additional","modals_AreaEditor","direction","way","mover","man","range","otherLecture","defineProperty","otherValidator","key2","list2","index2","dealing","ele","menuItems","editor","move","moveEle","up","down","Excerpt","construct","menuh","winw","innerWidth","winh","innerHeight","top","bottom","left","right","swapTable","newTables","App","onerror","onscroll","position","components_Welcome","components_Modal","components_Menu","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initial_state","combineReducers","find","store","createStore","rootReducer","ReactDOM","render","es","components_App","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c9ffedda.chunk.js","sourcesContent":["export default {\r\n  //SYSTEM ACTIONS\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  UNSHOW_MODAL: \"UNSHOW_MODAL\",\r\n  SHOW_MENU: \"SHOW_MENU\",\r\n  UNSHOW_MENU: \"UNSHOW_MENU\",\r\n\r\n  //USER ACTIONS\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  SWAP_TABLE: \"SWAP_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  SWAP_DAY: \"SWAP_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  SWAP_TIME: \"SWAP_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  SWAP_PLACE: \"SWAP_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  SWAP_BATCH: \"SWAP_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  SWAP_SUBJECT: \"SWAP_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  SWAP_TEACHER: \"SWAP_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const COLORS = [\r\n  \"transparent\",\r\n  \"rgba(66,133,244,.3)\",\r\n  \"rgba(219,68,55,.3)\",\r\n  \"rgba(244,160,0,.3)\",\r\n  \"rgba(15,157,88,.3)\"\r\n];\r\n\r\nexport const LECTURE_COLOR = \"transparent\";\r\nexport const DAY_COLOR = \"transparent\";\r\nexport const TIME_COLOR = \"transparent\";\r\nexport const PLACE_COLOR = \"transparent\";\r\nexport const BATCH_COLOR = \"transparent\";\r\nexport const SUBJECT_COLOR = \"transparent\";\r\nexport const TEACHER_COLOR = \"transparent\";\r\nexport const TABLE_HEADER_COLOR = \"transparent\";\r\nexport const TABLE_FOOTER_COLOR = \"transparent\";\r\n\r\nexport const DEFAULT_LECTURE = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: [\"batch\", \"subject\", \"teacher\"]\r\n};\r\n\r\nexport const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"lecture\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const reverse = id => {\r\n  let operator = id[0] + id[1];\r\n  switch (operator) {\r\n    case \"cn\":\r\n      operator = \"collection\";\r\n      break;\r\n    case \"tl\":\r\n      operator = \"table\";\r\n      break;\r\n    case \"bk\":\r\n      operator = \"lecture\";\r\n      break;\r\n    case \"dy\":\r\n      operator = \"day\";\r\n      break;\r\n    case \"tm\":\r\n      operator = \"time\";\r\n      break;\r\n    case \"pl\":\r\n      operator = \"place\";\r\n      break;\r\n    case \"bh\":\r\n      operator = \"batch\";\r\n      break;\r\n    case \"st\":\r\n      operator = \"subject\";\r\n      break;\r\n    case \"tr\":\r\n      operator = \"teacher\";\r\n      break;\r\n    default:\r\n      operator = null;\r\n      break;\r\n  }\r\n  return operator;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n\r\nexport const lectureValidator = (lectures, lect, ex = { id: \"exception\" }) => {\r\n  let lectFind = lectures.filter(\r\n    l =>\r\n      l.time === lect.time &&\r\n      l.day === lect.day &&\r\n      l.place === lect.place &&\r\n      l.id !== lect.id\r\n  );\r\n  if (lectFind.length > 0 && lectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"There's already a lecture on the same day,time & place.\"\r\n    };\r\n  } else {\r\n    let secLectFind = lectures.filter(\r\n      l =>\r\n        l.batch === lect.batch &&\r\n        l.time === lect.time &&\r\n        l.day === lect.day &&\r\n        l.id !== lect.id\r\n    );\r\n    if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n      return {\r\n        value: false,\r\n        message:\r\n          \"This batch/class is already taking lecture on the same time & day.\"\r\n      };\r\n    } else {\r\n      let secLectFind = lectures.filter(\r\n        l =>\r\n          l.teacher === lect.teacher &&\r\n          l.time === lect.time &&\r\n          l.day === lect.day &&\r\n          l.id !== lect.id\r\n      );\r\n      if (secLectFind.length > 0 && secLectFind[0].id !== ex.id) {\r\n        return {\r\n          value: false,\r\n          message:\r\n            \"One teacher cannot teach two batches/classes at the same time.\"\r\n        };\r\n      } else {\r\n        return {\r\n          value: true,\r\n          message: \"\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const batchValidator = (batches, batch, ex = { id: \"exception\" }) => {\r\n  let batchFind = batches.filter(\r\n    b => b.name === batch.name && b.id !== batch.id\r\n  );\r\n  if (batchFind.length > 0 && batchFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A batch with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const dayValidator = (days, day, ex = { id: \"exception\" }) => {\r\n  let dayFind = days.filter(d => d.name === day.name && d.id !== day.id);\r\n  if (dayFind.length > 0 && dayFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A day with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const timeValidator = (times, time, ex = { id: \"exception\" }) => {\r\n  let timeFind = times.filter(t => t.name === time.name && t.id !== time.id);\r\n  if (timeFind.length > 0 && timeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A time with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const placeValidator = (places, place, ex = { id: \"exception\" }) => {\r\n  let placeFind = places.filter(\r\n    p => p.name === place.name && p.id !== place.id\r\n  );\r\n  if (placeFind.length > 0 && placeFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A place with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const subjectValidator = (\r\n  subjects,\r\n  subject,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let subjectFind = subjects.filter(\r\n    s => s.name === subject.name && s.id !== subject.id\r\n  );\r\n  if (subjectFind.length > 0 && subjectFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A subject with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\nexport const teacherValidator = (\r\n  teachers,\r\n  teacher,\r\n  ex = { id: \"exception\" }\r\n) => {\r\n  let teacherFind = teachers.filter(\r\n    t => t.name === teacher.name && t.id !== teacher.id\r\n  );\r\n  if (teacherFind.length > 0 && teacherFind[0].id !== ex.id) {\r\n    return {\r\n      value: false,\r\n      message: \"A teacher with same name already exists.\"\r\n    };\r\n  } else {\r\n    return {\r\n      value: true,\r\n      message: \"\"\r\n    };\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    data.id = this.id;\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key].setData(data);\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    this.local = null;\r\n    this.session = null;\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//SYSTEM ACTIONS\r\n\r\nexport const showModal = (\r\n  type = \"waiting\",\r\n  content = null,\r\n  actions = null,\r\n  buttons = null\r\n) => {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    payload: {\r\n      display: true,\r\n      type,\r\n      content,\r\n      actions,\r\n      buttons\r\n    }\r\n  };\r\n};\r\nexport const unshowModal = () => {\r\n  return {\r\n    type: types.UNSHOW_MODAL,\r\n    payload: {\r\n      display: false,\r\n      type: null,\r\n      message: null,\r\n      buttons: null\r\n    }\r\n  };\r\n};\r\n\r\nexport const showMenu = type => {\r\n  return {\r\n    type: types.SHOW_MENU,\r\n    payload: {\r\n      display: true,\r\n      type\r\n    }\r\n  };\r\n};\r\n\r\nexport const unshowMenu = () => {\r\n  return {\r\n    type: types.UNSHOW_MENU,\r\n    payload: {\r\n      display: false\r\n    }\r\n  };\r\n};\r\n\r\n//USER ACTIONS\r\nexport const exampleCollection = () => {\r\n  let id =\r\n    \"exm\" +\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 6);\r\n  storage.init(id);\r\n  let collection = storage.set({\r\n    id,\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\",\r\n    time: new Date().toLocaleDateString()\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}, background = null) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  if (background != null) {\r\n    return collection;\r\n  }\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (data, background = null) => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  if (background !== null) {\r\n    return table;\r\n  }\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const swapTable = (tableID, withID) => {\r\n  let tables = Object.values(storage.getDataKey(\"tables\"));\r\n  let current = tables.filter(table => table.id === tableID)[0];\r\n  let future = tables.filter(table => table.id === withID)[0];\r\n  for (let i = 0; i < tables.length; i++) {\r\n    if (tables[i].id === tableID) {\r\n      tables[i] = future;\r\n    } else if (tables[i].id === withID) {\r\n      tables[i] = current;\r\n    }\r\n  }\r\n  let newTables = {};\r\n  tables.forEach(table => {\r\n    newTables[table.id] = table;\r\n  });\r\n  storage.setDataKey(\"tables\", newTables);\r\n  return {\r\n    type: types.SWAP_TABLE,\r\n    payload: {\r\n      tables: storage.getDataKey(\"tables\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (data, background = null) => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  if (background !== null) {\r\n    return day;\r\n  }\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const swapDay = (dayID, withID) => {\r\n  let days = Object.values(storage.getDataKey(\"days\"));\r\n  let current = days.filter(day => day.id === dayID)[0];\r\n  let future = days.filter(day => day.id === withID)[0];\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (days[i].id === dayID) {\r\n      days[i] = future;\r\n    } else if (days[i].id === withID) {\r\n      days[i] = current;\r\n    }\r\n  }\r\n  let newDays = {};\r\n  days.forEach(day => {\r\n    newDays[day.id] = day;\r\n  });\r\n  storage.setDataKey(\"days\", newDays);\r\n  return {\r\n    type: types.SWAP_DAY,\r\n    payload: {\r\n      days: storage.getDataKey(\"days\")\r\n    }\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (data, background = null) => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  if (background !== null) {\r\n    return time;\r\n  }\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const swapTime = (timeID, withID) => {\r\n  let times = Object.values(storage.getDataKey(\"times\"));\r\n  let current = times.filter(time => time.id === timeID)[0];\r\n  let future = times.filter(time => time.id === withID)[0];\r\n  for (let i = 0; i < times.length; i++) {\r\n    if (times[i].id === timeID) {\r\n      times[i] = future;\r\n    } else if (times[i].id === withID) {\r\n      times[i] = current;\r\n    }\r\n  }\r\n  let newTimes = {};\r\n  times.forEach(time => {\r\n    newTimes[time.id] = time;\r\n  });\r\n  storage.setDataKey(\"times\", newTimes);\r\n  return {\r\n    type: types.SWAP_TIME,\r\n    payload: {\r\n      times: storage.getDataKey(\"times\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (data, background = null) => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  if (background !== null) {\r\n    return place;\r\n  }\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const swapPlace = (placeID, withID) => {\r\n  let places = Object.values(storage.getDataKey(\"places\"));\r\n  let current = places.filter(place => place.id === placeID)[0];\r\n  let future = places.filter(place => place.id === withID)[0];\r\n  for (let i = 0; i < places.length; i++) {\r\n    if (places[i].id === placeID) {\r\n      places[i] = future;\r\n    } else if (places[i].id === withID) {\r\n      places[i] = current;\r\n    }\r\n  }\r\n  let newPlaces = {};\r\n  places.forEach(place => {\r\n    newPlaces[place.id] = place;\r\n  });\r\n  storage.setDataKey(\"places\", newPlaces);\r\n  return {\r\n    type: types.SWAP_PLACE,\r\n    payload: {\r\n      places: storage.getDataKey(\"places\")\r\n    }\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (data, background = null) => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  if (background != null) {\r\n    return batch;\r\n  }\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const swapBatch = (batchID, withID) => {\r\n  let batches = Object.values(storage.getDataKey(\"batches\"));\r\n  let current = batches.filter(batch => batch.id === batchID)[0];\r\n  let future = batches.filter(batch => batch.id === withID)[0];\r\n  for (let i = 0; i < batches.length; i++) {\r\n    if (batches[i].id === batchID) {\r\n      batches[i] = future;\r\n    } else if (batches[i].id === withID) {\r\n      batches[i] = current;\r\n    }\r\n  }\r\n  let newBatches = {};\r\n  batches.forEach(batch => {\r\n    newBatches[batch.id] = batch;\r\n  });\r\n  storage.setDataKey(\"batches\", newBatches);\r\n  return {\r\n    type: types.SWAP_BATCH,\r\n    payload: {\r\n      batches: storage.getDataKey(\"batches\")\r\n    }\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (data, background = null) => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  if (background != null) {\r\n    return subject;\r\n  }\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const swapSubject = (subjectID, withID) => {\r\n  let subjects = Object.values(storage.getDataKey(\"subjects\"));\r\n  let current = subjects.filter(subject => subject.id === subjectID)[0];\r\n  let future = subjects.filter(subject => subject.id === withID)[0];\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    if (subjects[i].id === subjectID) {\r\n      subjects[i] = future;\r\n    } else if (subjects[i].id === withID) {\r\n      subjects[i] = current;\r\n    }\r\n  }\r\n  let newSubjects = {};\r\n  subjects.forEach(subject => {\r\n    newSubjects[subject.id] = subject;\r\n  });\r\n  storage.setDataKey(\"subjects\", newSubjects);\r\n  return {\r\n    type: types.SWAP_SUBJECT,\r\n    payload: {\r\n      subjects: storage.getDataKey(\"subjects\")\r\n    }\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (data, background = null) => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  if (background != null) {\r\n    return teacher;\r\n  }\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const swapTeacher = (teacherID, withID) => {\r\n  let teachers = Object.values(storage.getDataKey(\"teachers\"));\r\n  let current = teachers.filter(teacher => teacher.id === teacherID)[0];\r\n  let future = teachers.filter(teacher => teacher.id === withID)[0];\r\n  for (let i = 0; i < teachers.length; i++) {\r\n    if (teachers[i].id === teacherID) {\r\n      teachers[i] = future;\r\n    } else if (teachers[i].id === withID) {\r\n      teachers[i] = current;\r\n    }\r\n  }\r\n  let newTeachers = {};\r\n  teachers.forEach(teacher => {\r\n    newTeachers[teacher.id] = teacher;\r\n  });\r\n  storage.setDataKey(\"teachers\", newTeachers);\r\n  return {\r\n    type: types.SWAP_TEACHER,\r\n    payload: {\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createTable,\r\n  createBatch,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../actions\";\r\n\r\nimport storage from \"../actions/storage\";\r\n\r\nconst DefaultSetupSettings = {\r\n  info: {\r\n    name: \"\",\r\n    desc: \"\"\r\n  },\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"08\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"1\",\r\n    to: \"10\"\r\n  },\r\n  batches: [],\r\n  subjects: [],\r\n  teachers: [],\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  info() {\r\n    return (\r\n      <div>\r\n        <div className=\"welcome-dialogue form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cName\" className=\"big-label\">\r\n              Collection Name\r\n            </label>\r\n            <input\r\n              id=\"cName\"\r\n              type=\"text\"\r\n              onChange={event =>\r\n                this.setState({\r\n                  info: { ...this.state.info, name: event.target.value }\r\n                })\r\n              }\r\n              value={this.state.info.name}\r\n              className=\"big-input\"\r\n              placeholder=\"my first collection...\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"desc\" className=\"big-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"cdesc\"\r\n              className=\"big-desc\"\r\n              onChange={event => {\r\n                this.setState({\r\n                  info: { ...this.state.info, desc: event.target.value }\r\n                });\r\n              }}\r\n              value={this.state.info.desc}\r\n              placeholder=\"this is the best collection ever...\"\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            Don't refresh/reload/exit during setup...\r\n          </h4>\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ stage: \"days\" });\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <label htmlFor=\"days\">Monday to </label>&nbsp;&nbsp;\r\n          <select\r\n            id=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"info\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  batches() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Batches/Classes , Press enter to add a batch quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ batches: [...this.state.batches, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Batch Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.batches.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        batches: this.state.batches.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  subjects() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Subjects , Just like you added Batches/Classes.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ subjects: [...this.state.subjects, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Subject Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.subjects.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        subjects: this.state.subjects.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"batches\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  teachers() {\r\n    return (\r\n      <div>\r\n        <h2>Add some Teachers , Press enter to add teachers quickly.</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            let value = e.target[0].value;\r\n            if (value.length > 1) {\r\n              this.setState({ teachers: [...this.state.teachers, value] });\r\n              e.target[0].value = \"\";\r\n            }\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"batch\">Teacher Name &nbsp;</label>\r\n            <input type=\"text\" className=\"big-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <span />\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n        <div className=\"block-list\">\r\n          {this.state.teachers.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"block\"\r\n                key={\r\n                  item +\r\n                  Math.random()\r\n                    .toString()\r\n                    .substr(3, 6)\r\n                }\r\n              >\r\n                <span className=\"block-txt\">{item}</span>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        teachers: this.state.teachers.filter(\r\n                          (x, y) => y !== index\r\n                        )\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4 style={{ color: \"rgb(150,150,150)\" }}>Add at least three...</h4>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"subjects\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\",\r\n      \"batches\",\r\n      \"subjects\",\r\n      \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (obj === this.state.tables.base) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                if (\r\n                  obj === this.state.tables.rows ||\r\n                  obj === this.state.tables.base\r\n                ) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"teachers\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.finish()}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {\r\n    let days = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\"\r\n    ];\r\n    days = days.slice(0, days.indexOf(this.state.days.to) + 1);\r\n    const timeChanger = (time, modifier) => {\r\n      time = parseInt(time);\r\n      if (time === 12) {\r\n        time = 0;\r\n      }\r\n      if (modifier === \"PM\") {\r\n        time += 12;\r\n      }\r\n      return time;\r\n    };\r\n    let from = new Date();\r\n    from.setHours(\r\n      timeChanger(this.state.times.fromTime, this.state.times.fromMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let to = new Date();\r\n    to.setHours(\r\n      timeChanger(this.state.times.toTime, this.state.times.toMeridian),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    let times = [];\r\n    const timeStringer = time => {\r\n      let hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\r\n      time = `${hours.toString().length === 1 ? `0${hours}` : hours}:${\r\n        time.getMinutes().toString().length === 1\r\n          ? `0${time.getMinutes()}`\r\n          : time.getMinutes()\r\n      } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n      return time;\r\n    };\r\n    while (from.getTime() < to.getTime()) {\r\n      let start = timeStringer(from);\r\n      from.setMinutes(\r\n        from.getMinutes() + parseInt(this.state.times.lectureTime)\r\n      );\r\n      times.push(start + \" - \" + timeStringer(from));\r\n    }\r\n    let places = [];\r\n    for (\r\n      let i = parseInt(this.state.places.from);\r\n      i <= parseInt(this.state.places.to);\r\n      i++\r\n    ) {\r\n      places.push(`${this.state.places.name} ${i}`);\r\n    }\r\n    let batches = this.state.batches;\r\n    let subjects = this.state.subjects;\r\n    let teachers = this.state.teachers;\r\n\r\n    /// CREATING A COLLECTION\r\n    let collection = createCollection(\r\n      {\r\n        name:\r\n          this.state.info.name.length > 0\r\n            ? this.state.info.name\r\n            : \"Quick Collection\",\r\n        desc: `${this.state.info.desc}`,\r\n        time: `${new Date().toLocaleDateString()}`\r\n      },\r\n      true\r\n    );\r\n    days = days.map(day => {\r\n      return createDay(\r\n        {\r\n          name: `${day[0].toUpperCase()}${day.substr(1, day.length)}`,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    times = times.map(time => {\r\n      return createTime(\r\n        {\r\n          name: time,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n    places = places.map(place => {\r\n      return createPlace(\r\n        {\r\n          name: place,\r\n          color: \"transparent\"\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    batches = batches.map(batch => {\r\n      return createBatch({\r\n        name: batch,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    subjects = subjects.map(subject => {\r\n      return createSubject({\r\n        name: subject,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n\r\n    teachers = teachers.map(teacher => {\r\n      return createTeacher({\r\n        name: teacher,\r\n        color: \"transparent\"\r\n      });\r\n    });\r\n    /// CREATING TABLES\r\n    let tables = [];\r\n    let objector = { days, times, places, batches, subjects, teachers };\r\n    let tFor = objector[this.state.tables.base];\r\n    tFor.forEach(base => {\r\n      tables.push({\r\n        base: this.state.tables.base,\r\n        baseValue: base.id,\r\n        rows: this.state.tables.rows,\r\n        cols: this.state.tables.cols,\r\n        header: { text: \"Quick Table\", color: \"transparent\" },\r\n        footer: { text: \"Quick Table\", color: \"transparent\" },\r\n        sidebar: { text: \"Acadtable\", color: \"transparent\" }\r\n      });\r\n    });\r\n    tables = tables.map(table => {\r\n      return createTable(table, true);\r\n    });\r\n    storage.save();\r\n    this.props.selectCollection(collection.id);\r\n  }\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case \"info\":\r\n      case null:\r\n      default:\r\n        return this.info();\r\n      case \"days\":\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"batches\":\r\n        return this.batches();\r\n      case \"subjects\":\r\n        return this.subjects();\r\n      case \"teachers\":\r\n        return this.teachers();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    selectCollection\r\n  }\r\n)(QuickSetup);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection,\r\n  showModal\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null\r\n  };\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Start by creating a collection or loading an example.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            className=\"black-btn\"\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Runs quick setup to create a collection</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <button\r\n            onClick={() =>\r\n              this.props.createCollection({\r\n                name: \"Empty Collection\",\r\n                desc: \"probably an empty collection...\",\r\n                time: new Date().toLocaleDateString()\r\n              })\r\n            }\r\n          >\r\n            Empty Collection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"quickSetup\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={this.props.exampleCollection}>\r\n              Reload Example\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                this.props.createCollection({\r\n                  name: \"Empty Collection\",\r\n                  desc: \"probably an empty collection...\",\r\n                  time: new Date().toLocaleDateString()\r\n                })\r\n              }\r\n            >\r\n              Empty Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-head-special\">#{coll.id}</div>\r\n                <div className=\"card-special\">{coll.time}</div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.showModal(\"confirm\", \"Are you sure ?\", [\r\n                        () => {\r\n                          this.props.deleteCollection(coll.id);\r\n                        }\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection,\r\n    showModal\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { COLORS } from \"../../actions/helpers\";\r\n\r\nclass ColorsPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div style={this.props.style == null ? {} : this.props.style}>\r\n        {COLORS.map(color => {\r\n          let addClass = color === this.props.color ? \"selected\" : \"\";\r\n          return (\r\n            <span\r\n              className={\"color-btn \" + addClass}\r\n              style={{ background: color }}\r\n              key={\"color\" + color}\r\n              onClick={() => {\r\n                this.props.change(color);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorsPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  createLecture,\r\n  updateLecture,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions/\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  dayValidator,\r\n  timeValidator,\r\n  batchValidator,\r\n  placeValidator,\r\n  teacherValidator,\r\n  subjectValidator,\r\n  DAY_COLOR,\r\n  TIME_COLOR,\r\n  PLACE_COLOR,\r\n  BATCH_COLOR,\r\n  SUBJECT_COLOR,\r\n  TEACHER_COLOR,\r\n  DEFAULT_LECTURE\r\n} from \"../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"./ColorsPanel\";\r\n\r\nclass LectureModal extends Component {\r\n  state = {\r\n    params: this.props.params,\r\n    display: \"main\"\r\n  };\r\n  render() {\r\n    let params = this.props.params;\r\n    let info = {\r\n      ...DEFAULT_LECTURE,\r\n      ...params\r\n    };\r\n    let toEdit = this.props.edit;\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div className=\"full-wrapper\">\r\n          <form\r\n            className=\"full-wrapper form-table flex-center\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              let i = 0;\r\n              while (e.target[i] != null) {\r\n                if (e.target[i].name != null || e.target[i].name !== \"\") {\r\n                  info[e.target[i].name] = e.target[i].value;\r\n                  i++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              info.color = this.state.params.color;\r\n              info.display =\r\n                this.state.params.display !== undefined\r\n                  ? this.state.params.display\r\n                  : info.display;\r\n              if (this.props.mode === \"create\") {\r\n                let validator = lectureValidator(this.props.lectures, info);\r\n                if (validator.value) {\r\n                  this.props.createLecture(info);\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else if (this.props.mode === \"update\") {\r\n                let validator = lectureValidator(this.props.lectures, info, {\r\n                  id: info.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(info.id, info);\r\n\r\n                  this.props.unshowModal();\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {toEdit.map(key => {\r\n              let list = this.props[keyList(key)];\r\n              let value = params[key] != null ? params[key] : null;\r\n              if (value == null || this.props.mode === \"update\") {\r\n                return (\r\n                  <div key={\"inp\" + key} className=\"form-row \">\r\n                    <label\r\n                      htmlFor={key}\r\n                      style={{\r\n                        textTransform: \"capitalize\"\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {key} &nbsp;{\" \"}\r\n                    </label>{\" \"}\r\n                    <select\r\n                      id={key}\r\n                      name={key}\r\n                      defaultValue={\r\n                        info[key] != null\r\n                          ? info[key]\r\n                          : list.length > 0\r\n                          ? list[0].id\r\n                          : null\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      {list.map(item => {\r\n                        return (\r\n                          <option value={item.id} key={item.id}>\r\n                            {\" \"}\r\n                            {item.name}{\" \"}\r\n                          </option>\r\n                        );\r\n                      })}{\" \"}\r\n                    </select>{\" \"}\r\n                    <button\r\n                      style={{\r\n                        margin: \"0 0.5em\"\r\n                      }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          display: key\r\n                        });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>{\" \"}\r\n                  </div>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}{\" \"}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\"> Color </label>{\" \"}\r\n              <ColorsPanel\r\n                color={this.state.params.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    params: {\r\n                      ...this.state.params,\r\n                      color\r\n                    }\r\n                  });\r\n                }}\r\n              />{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\"> Display </label>{\" \"}\r\n              <select\r\n                name=\"\"\r\n                id=\"\"\r\n                multiple\r\n                value={info.display}\r\n                onChange={ex => {\r\n                  this.setState({\r\n                    params: {\r\n                      ...this.state.params,\r\n                      display: [...ex.target.selectedOptions]\r\n                        .filter(({ selected }) => selected)\r\n                        .map(({ value }) => value)\r\n                    }\r\n                  });\r\n                }}\r\n                size=\"6\"\r\n              >\r\n                <option value=\"batch\"> Batch </option>{\" \"}\r\n                <option value=\"teacher\"> Teacher </option>{\" \"}\r\n                <option value=\"subject\"> Subject </option>{\" \"}\r\n                <option value=\"place\"> Place </option>{\" \"}\r\n                <option value=\"day\"> Day </option>{\" \"}\r\n                <option value=\"time\"> Time </option>{\" \"}\r\n              </select>\r\n              <span\r\n                className=\"info\"\r\n                style={{\r\n                  display: \"inline\"\r\n                }}\r\n              >\r\n                <span>\r\n                  These things will be displayed in the table in the order of\r\n                  selection, Hold control to select multiple options{\" \"}\r\n                </span>{\" \"}\r\n              </span>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"form-row\">\r\n              <span>\r\n                <button onClick={this.props.unshowModal}> Cancel </button>{\" \"}\r\n              </span>{\" \"}\r\n              &nbsp;{\" \"}\r\n              <input\r\n                type=\"submit\"\r\n                style={{\r\n                  textTransform: \"capitalize\"\r\n                }}\r\n                className=\"black-btn\"\r\n                value={this.props.mode || \"create\"}\r\n              />{\" \"}\r\n            </div>{\" \"}\r\n          </form>{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      let creator, validator;\r\n      let color = \"transparent\";\r\n      switch (this.state.display) {\r\n        case \"day\":\r\n          creator = this.props.createDay;\r\n          color = DAY_COLOR;\r\n          validator = data => {\r\n            return dayValidator(this.props.days, data);\r\n          };\r\n          break;\r\n        case \"time\":\r\n          creator = this.props.createTime;\r\n          color = TIME_COLOR;\r\n          validator = data => {\r\n            return timeValidator(this.props.times, data);\r\n          };\r\n          break;\r\n        case \"place\":\r\n          creator = this.props.createPlace;\r\n          color = PLACE_COLOR;\r\n          validator = data => {\r\n            return placeValidator(this.props.places, data);\r\n          };\r\n          break;\r\n        case \"subject\":\r\n          creator = this.props.createSubject;\r\n          color = SUBJECT_COLOR;\r\n          validator = data => {\r\n            return subjectValidator(this.props.subjects, data);\r\n          };\r\n          break;\r\n        case \"batch\":\r\n          creator = this.props.createBatch;\r\n          color = BATCH_COLOR;\r\n          validator = data => {\r\n            return batchValidator(this.props.batches, data);\r\n          };\r\n          break;\r\n        case \"teacher\":\r\n          creator = this.props.createTeacher;\r\n          color = TEACHER_COLOR;\r\n          validator = data => {\r\n            return teacherValidator(this.props.teachers, data);\r\n          };\r\n          break;\r\n        default:\r\n          creator = null;\r\n          break;\r\n      }\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"main\"\r\n              });\r\n            }}\r\n          >\r\n            Back{\" \"}\r\n          </button>{\" \"}\r\n          <div\r\n            style={{\r\n              marginTop: \"1em\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {creator != null ? (\r\n              <form\r\n                className=\"form-table\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  let name = e.target[0].value;\r\n                  let data = {\r\n                    name,\r\n                    color\r\n                  };\r\n                  let validation = validator(data);\r\n                  if (validation.value) {\r\n                    creator(data);\r\n                  } else {\r\n                    this.props.showModal(\"message\", validation.message);\r\n                  }\r\n                  this.setState({\r\n                    display: \"main\"\r\n                  });\r\n                }}\r\n              >\r\n                <div className=\"form-row\">\r\n                  <label\r\n                    htmlFor=\"\"\r\n                    style={{\r\n                      textTransform: \"capitalize\"\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {this.state.display} &nbsp;{\" \"}\r\n                  </label>{\" \"}\r\n                  <input type=\"text\" />\r\n                </div>{\" \"}\r\n                <div className=\"form-row\">\r\n                  <span />\r\n                  <input type=\"submit\" />\r\n                </div>{\" \"}\r\n              </form>\r\n            ) : null}{\" \"}\r\n          </div>{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    showModal,\r\n    unshowModal,\r\n    updateLecture,\r\n    createDay,\r\n    createTime,\r\n    createBatch,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject\r\n  }\r\n)(LectureModal);\r\n","import jsPDF from \"jspdf\";\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const downloadPDF = (screen, finish) => {\r\n  let tables = screen.querySelectorAll(\".screen-table\");\r\n  let doc = new jsPDF({\r\n    orientation: \"landscape\",\r\n    unit: \"px\",\r\n    format: [tables[0].offsetWidth + 16, tables[0].offsetHeight + 16]\r\n  });\r\n  const drawTable = on => {\r\n    if (tables[on] != null) {\r\n      let table = tables[on];\r\n      let tableWidth = table.offsetWidth + 16;\r\n      let tableHeight = table.offsetHeight + 16;\r\n      domtoimage\r\n        .toPng(table, {\r\n          bgcolor: \"#fff\",\r\n          width: tableWidth + tableWidth / 2,\r\n          height: tableHeight + tableHeight / 2\r\n        })\r\n        .then(dataUrl => {\r\n          if (on > 0) {\r\n            doc.addPage([tableWidth + 30, tableHeight + 40], \"landscape\");\r\n          }\r\n          doc.addImage(\r\n            dataUrl,\r\n            \"PNG\",\r\n            30,\r\n            40,\r\n            doc.internal.pageSize.getWidth() - 60,\r\n            doc.internal.pageSize.getHeight() - 80\r\n          );\r\n          drawTable(++on);\r\n        })\r\n        .catch(ex => {\r\n          console.log(ex);\r\n        });\r\n    } else {\r\n      doc.save(\"file.pdf\");\r\n      finish();\r\n    }\r\n  };\r\n  if (tables.length > 0) {\r\n    drawTable(0);\r\n  }\r\n};\r\nexport const downloadPNG = (screen, finish) => {\r\n  domtoimage\r\n    .toPng(screen, {\r\n      bgcolor: \"#fff\",\r\n      width: screen.offsetWidth + 60,\r\n      height: screen.offsetHeight + 80\r\n    })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.href = dataUrl;\r\n      link.download = \"file.png\";\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to PNG Image\");\r\n    });\r\n};\r\nexport const downloadJPEG = (screen, finish) => {\r\n  domtoimage\r\n    .toJpeg(screen, {\r\n      bgcolor: \"#fff\",\r\n      width: screen.offsetWidth + 60,\r\n      height: screen.offsetHeight + 80\r\n    })\r\n    .then(function(dataUrl) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"file.jpeg\";\r\n      link.href = dataUrl;\r\n      link.target = \"_blank\";\r\n      link.click();\r\n      finish();\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error converting to JPEG Image\");\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  downloadPNG,\r\n  downloadJPEG,\r\n  downloadPDF\r\n} from \"../../actions/downloader\";\r\n\r\nclass Exporter extends Component {\r\n  render() {\r\n    let screen = this.props.screen;\r\n    return (\r\n      <div>\r\n        <h1>Export As</h1>\r\n        <label htmlFor=\"\">Document Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"pdfrender render\",\r\n              downloader: downloadPDF,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PDF\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"\">Image Form</label>&nbsp;&nbsp;&nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadPNG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          PNG\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          onClick={() => {\r\n            screen.props.showModal();\r\n            screen.setState({\r\n              tableMode: \"imgrender render\",\r\n              downloader: downloadJPEG,\r\n              download: true\r\n            });\r\n          }}\r\n        >\r\n          JPEG\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            screen.props.unshowModal();\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Exporter;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createLecture,\r\n  deleteLecture,\r\n  unshowModal,\r\n  createTable,\r\n  deleteTable,\r\n  createDay,\r\n  createTime,\r\n  createBatch,\r\n  createPlace,\r\n  createTeacher,\r\n  createSubject\r\n} from \"../../actions\";\r\n\r\nimport ColorsPanel from \"./ColorsPanel\";\r\n\r\nimport {\r\n  listKey,\r\n  TABLE_HEADER_COLOR,\r\n  TABLE_FOOTER_COLOR\r\n} from \"../../actions/helpers\";\r\n\r\nclass TableActions extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\",\r\n      header: { text: \"\", color: TABLE_HEADER_COLOR },\r\n      footer: { text: \"\", color: TABLE_FOOTER_COLOR }\r\n    }\r\n  };\r\n  create() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n\r\n              let {\r\n                base,\r\n                baseValue,\r\n                rows,\r\n                cols,\r\n                header,\r\n                footer\r\n              } = this.state.creator;\r\n              this.props.createTable({\r\n                base,\r\n                baseValue,\r\n                rows,\r\n                cols,\r\n                header,\r\n                footer\r\n              });\r\n\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.header.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: {\r\n                        ...this.state.creator.header,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.header.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: { ...this.state.creator.header, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.footer.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: {\r\n                        ...this.state.creator.footer,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.footer.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: { ...this.state.creator.footer, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row submit-row\">\r\n              <div>\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value=\"Create Table\"\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  copy() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <form\r\n          className=\"form-table\"\r\n          onSubmit={ex => {\r\n            ex.preventDefault();\r\n            let from = ex.target[0].value;\r\n            let to = ex.target[1].value;\r\n            if (from !== to) {\r\n              let val1Table = this.props.tables.filter(\r\n                table => table.id === to\r\n              )[0];\r\n              let val1Key = listKey(val1Table.base);\r\n              let lectsDels = this.props.lectures.filter(\r\n                lecture => lecture[val1Key] === val1Table.baseValue\r\n              );\r\n              lectsDels.forEach(l => this.props.deleteLecture(l.id));\r\n\r\n              let val2Table = this.props.tables.filter(\r\n                table => table.id === from\r\n              )[0];\r\n              let val2Key = listKey(val2Table.base);\r\n              let lectsCret = this.props.lectures.filter(\r\n                lecture => lecture[val2Key] === val2Table.baseValue\r\n              );\r\n              lectsCret.forEach(l => {\r\n                let lecture = { ...l };\r\n                lecture[val2Key] = val1Table.baseValue;\r\n                this.props.createLecture(lecture);\r\n              });\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"fromtable\">From </label>&nbsp;\r\n            <select\r\n              name=\"from\"\r\n              id=\"fromtable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"totable\">To </label>&nbsp;\r\n            <select\r\n              name=\"to\"\r\n              id=\"totable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row submit-row\">\r\n            <span />\r\n            <input type=\"submit\" value=\"Copy Table\" />\r\n          </div>\r\n        </form>\r\n        <span style={{ color: \"rgba(222,55,33,.8)\", fontStyle: \"italic\" }}>\r\n          The other table will be overwritten\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  delete() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <form\r\n          className=\"form-table\"\r\n          onSubmit={ex => {\r\n            ex.preventDefault();\r\n            this.props.deleteTable(ex.target[0].value);\r\n            this.props.unshowModal();\r\n          }}\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"fromtable\">Select Table </label>&nbsp;\r\n            <select\r\n              name=\"tableid\"\r\n              id=\"fromtable\"\r\n              defaultValue={this.props.tables[0].id}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table.id} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row submit-row\">\r\n            <span />\r\n            <input type=\"submit\" value=\"Delete\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  addrowcol(thing) {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <form\r\n          className=\"form-table\"\r\n          onSubmit={ex => {\r\n            ex.preventDefault();\r\n            let rows = ex.target[0].value;\r\n            let rowtext = ex.target[1].value;\r\n            let key = listKey(rows);\r\n            key = key[0].toUpperCase() + key.substr(1, key.length);\r\n            let func = this.props[\"create\" + key];\r\n            func({ name: rowtext });\r\n            this.props.unshowModal();\r\n          }}\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"fromtable\">Select Table </label>&nbsp;\r\n            <select\r\n              name=\"tableid\"\r\n              id=\"fromtable\"\r\n              defaultValue={this.props.tables[0]}\r\n            >\r\n              {this.props.tables.map(table => {\r\n                let baseName =\r\n                  this.props[table.base].filter(\r\n                    thing => thing.id === table.baseValue\r\n                  )[0].name + \" Table\";\r\n                return (\r\n                  <option value={table[thing]} key={table.id}>\r\n                    {baseName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rowtext\">\r\n              {thing === \"rows\" ? \"Row\" : \"Column\"} Text\r\n            </label>\r\n            <input type=\"text\" id=\"rowtext\" name=\"rowtext\" />\r\n          </div>\r\n          <div className=\"form-row submit-row\">\r\n            <span />\r\n            <input\r\n              type=\"submit\"\r\n              value={thing === \"rows\" ? \"Add Row\" : \"Add Column\"}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"main\") {\r\n      return (\r\n        <div>\r\n          <h1>What to do ?</h1>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"create\" });\r\n              }}\r\n            >\r\n              Create A Table\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"copy\" });\r\n              }}\r\n            >\r\n              Copy A Table\r\n            </button>\r\n            <br />\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"delete\" });\r\n              }}\r\n            >\r\n              Delete A Table\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"addrow\" });\r\n              }}\r\n            >\r\n              Add Another Row\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"addcol\" });\r\n              }}\r\n            >\r\n              Add Another Column\r\n            </button>\r\n            <br />\r\n\r\n            <button\r\n              onClick={() => {\r\n                this.props.unshowModal();\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      switch (this.state.display) {\r\n        case \"create\":\r\n        default:\r\n          return this.create();\r\n        case \"copy\":\r\n          return this.copy();\r\n        case \"delete\":\r\n          return this.delete();\r\n        case \"addrow\":\r\n          return this.addrowcol(\"rows\");\r\n        case \"addcol\":\r\n          return this.addrowcol(\"cols\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    deleteLecture,\r\n    unshowModal,\r\n    createTable,\r\n    deleteTable,\r\n    createPlace,\r\n    createBatch,\r\n    createDay,\r\n    createSubject,\r\n    createTeacher,\r\n    createTime\r\n  }\r\n)(TableActions);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowModal,\r\n  showMenu,\r\n  unshowMenu,\r\n  updateTable,\r\n  updateLecture,\r\n  deleteLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapPlace,\r\n  swapTeacher,\r\n  swapSubject,\r\n  swapTime,\r\n  updateBatch,\r\n  updateDay,\r\n  updatePlace,\r\n  updateSubject,\r\n  updateTeacher,\r\n  updateTime,\r\n  deleteBatch,\r\n  deleteDay,\r\n  deletePlace,\r\n  deleteSubject,\r\n  deleteTeacher,\r\n  deleteTime\r\n} from \"../../actions\";\r\n\r\nimport { listKey, keyList } from \"../../actions/helpers\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nimport \"../../resources/render.css\";\r\n\r\nimport LectureModal from \"../modals/LectureModal\";\r\nimport Exporter from \"../modals/Exporter\";\r\nimport TableActions from \"../modals/TableActions\";\r\n\r\nclass Screen extends Component {\r\n  state = {\r\n    tableMode: \"\",\r\n    downloader: null,\r\n    download: false\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.download) {\r\n      this.state.downloader(this.refs.screen, () => {\r\n        this.props.unshowModal();\r\n        this.setState({ tableMode: \"\", downloader: null, download: false });\r\n      });\r\n    }\r\n    this.props.user.save();\r\n  }\r\n  menu(event, element, tochange = null, additional = null) {\r\n    this.props.showMenu({\r\n      event,\r\n      element,\r\n      tochange,\r\n      additional\r\n    });\r\n    return false;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    //ALL IMPLEMENTATION\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ marginTop: \"1rem\", flexDirection: \"row\" }}\r\n          className=\"flex-center\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\"content\", <TableActions screen={this} />);\r\n            }}\r\n          >\r\n            Table Actions\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\"content\", <Exporter screen={this} />);\r\n            }}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n        <p style={{ color: \"rgba(0,0,0,.6)\" }}>* Don't forget to right click</p>\r\n        <div className=\"flex-center\" style={{ minWidth: \"50em\" }}>\r\n          <div className={`screen ${this.state.tableMode}`} ref=\"screen\">\r\n            {objector.tables.map(table => {\r\n              let base = objector[table.base].filter(\r\n                i => i.id === table.baseValue\r\n              )[0];\r\n              let rows = objector[table.rows];\r\n              let cols = objector[table.cols];\r\n              if (base == null) {\r\n                return null;\r\n              }\r\n              return (\r\n                <table key={table.id} className=\"screen-table\">\r\n                  <thead>\r\n                    <tr\r\n                      className=\"table-header\"\r\n                      style={{ background: table.header.color }}\r\n                    >\r\n                      <td\r\n                        colSpan={cols.length + 1}\r\n                        onContextMenu={x => {\r\n                          x.preventDefault();\r\n                          return this.menu(\r\n                            { x: x.clientX, y: x.clientY },\r\n                            table,\r\n                            \"header\"\r\n                          );\r\n                        }}\r\n                      >\r\n                        <span>{table.header.text}</span>\r\n                      </td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th\r\n                        className=\"main-block\"\r\n                        onContextMenu={x => {\r\n                          x.preventDefault();\r\n                          return this.menu(\r\n                            { x: x.clientX, y: x.clientY },\r\n                            base,\r\n                            null,\r\n                            { moveBlock: true, block: table, rowsLine: true }\r\n                          );\r\n                        }}\r\n                      >\r\n                        {base != null ? (\r\n                          <div>\r\n                            <span>{base.name}</span>\r\n                          </div>\r\n                        ) : null}\r\n                      </th>\r\n\r\n                      {/* COLOUMNS HEADINGS */}\r\n\r\n                      {cols.map(col => {\r\n                        return (\r\n                          <th\r\n                            key={\"c\" + col.id}\r\n                            className=\"col-block\"\r\n                            onContextMenu={x => {\r\n                              x.preventDefault();\r\n                              return this.menu(\r\n                                { x: x.clientX, y: x.clientY },\r\n                                col,\r\n                                null,\r\n                                { colsLine: true }\r\n                              );\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              <span>{col.name}</span>\r\n                            </div>\r\n                          </th>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n\r\n                    {/* ROWS MAPPING */}\r\n\r\n                    {rows.map((row, rindex) => {\r\n                      return (\r\n                        <tr key={\"r\" + row.id}>\r\n                          <th\r\n                            className=\"row-block\"\r\n                            onContextMenu={x => {\r\n                              x.preventDefault();\r\n                              return this.menu(\r\n                                { x: x.clientX, y: x.clientY },\r\n                                row,\r\n                                null,\r\n                                { rowsLine: true }\r\n                              );\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              <span>{row.name}</span>\r\n                            </div>\r\n                          </th>\r\n\r\n                          {/* COLOUMNS MAPPING */}\r\n\r\n                          {cols.map((col, cindex) => {\r\n                            let block = objector[\"lectures\"].filter(\r\n                              block =>\r\n                                block[listKey(table.base)] === base.id &&\r\n                                block[listKey(table.rows)] === row.id &&\r\n                                block[listKey(table.cols)] === col.id\r\n                            );\r\n                            if (block.length === 0) {\r\n                              // if (this.state.mode === \"print\") {\r\n                              //   return <td key={\"emp\" + col.id} />;\r\n                              // }\r\n                              return (\r\n                                <td\r\n                                  onClick={() => {\r\n                                    let params = {};\r\n                                    params[listKey(table.base)] = base.id;\r\n                                    params[listKey(table.rows)] = row.id;\r\n                                    params[listKey(table.cols)] = col.id;\r\n                                    let toEdit = [\r\n                                      \"day\",\r\n                                      \"time\",\r\n                                      \"place\",\r\n                                      \"batch\",\r\n                                      \"subject\",\r\n                                      \"teacher\"\r\n                                    ];\r\n                                    this.props.showModal(\r\n                                      \"content\",\r\n                                      <LectureModal\r\n                                        params={params}\r\n                                        edit={toEdit.filter(p => {\r\n                                          if (\r\n                                            Object.keys(params).indexOf(p) < 0\r\n                                          ) {\r\n                                            return p;\r\n                                          }\r\n                                          return null;\r\n                                        })}\r\n                                        mode=\"create\"\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  key={\"emp\" + col.id}\r\n                                  className=\"table-block empty-block\"\r\n                                >\r\n                                  <button>+</button>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              let lecture = { ...block[0] };\r\n                              return (\r\n                                <td\r\n                                  key={\"b\" + col.id}\r\n                                  className=\"table-block\"\r\n                                  style={{\r\n                                    background: lecture.color\r\n                                  }}\r\n                                  onContextMenu={x => {\r\n                                    x.preventDefault();\r\n                                    return this.menu(\r\n                                      { x: x.clientX, y: x.clientY },\r\n                                      lecture,\r\n                                      null,\r\n                                      {\r\n                                        tableBase: table.base,\r\n                                        base: base,\r\n                                        rname: table.rows,\r\n                                        cname: table.cols,\r\n                                        rows,\r\n                                        cols,\r\n                                        rindex,\r\n                                        cindex,\r\n                                        lecture\r\n                                      }\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {lecture.display.map(thing => {\r\n                                    let loot = this.props[\r\n                                      keyList(thing)\r\n                                    ].filter(th => th.id === lecture[thing])[0];\r\n                                    return (\r\n                                      <span\r\n                                        key={loot.name + lecture.id + \"thing\"}\r\n                                      >\r\n                                        {loot.name}\r\n                                      </span>\r\n                                    );\r\n                                  })}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    <tr\r\n                      className=\"table-footer\"\r\n                      style={{ background: table.footer.color }}\r\n                    >\r\n                      <td\r\n                        colSpan={cols.length + 1}\r\n                        onContextMenu={x => {\r\n                          x.preventDefault();\r\n                          return this.menu(\r\n                            { x: x.clientX, y: x.clientY },\r\n                            table,\r\n                            \"footer\"\r\n                          );\r\n                        }}\r\n                      >\r\n                        <span>{table.footer.text}</span>\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowModal,\r\n    showMenu,\r\n    unshowMenu,\r\n    updateTable,\r\n    updateLecture,\r\n    deleteLecture,\r\n    swapBatch,\r\n    swapDay,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTeacher,\r\n    swapTime,\r\n    updateBatch,\r\n    updateDay,\r\n    updatePlace,\r\n    updateSubject,\r\n    updateTeacher,\r\n    updateTime,\r\n    deleteBatch,\r\n    deleteDay,\r\n    deletePlace,\r\n    deleteSubject,\r\n    deleteTeacher,\r\n    deleteTime\r\n  }\r\n)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  listKey,\r\n  TABLE_HEADER_COLOR,\r\n  TABLE_FOOTER_COLOR,\r\n} from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nimport {\r\n  createTable,\r\n  updateTable,\r\n  deleteTable,\r\n  showModal,\r\n  unshowModal\r\n} from \"../../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  action: \"create\",\r\n  id: null,\r\n  base: \"days\",\r\n  baseValue: null,\r\n  rows: \"times\",\r\n  cols: \"places\",\r\n  header: { text: \"\", color: TABLE_HEADER_COLOR },\r\n  footer: { text: \"\", color: TABLE_FOOTER_COLOR }\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  base: \"days\",\r\n  rows: \"places\",\r\n  cols: \"times\",\r\n  header: \"\",\r\n  footer: \"\"\r\n};\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.action === \"create\") {\r\n                let {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.createTable({\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              } else if (this.state.creator.action === \"update\") {\r\n                let {\r\n                  id,\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                } = this.state.creator;\r\n                this.props.updateTable(id, {\r\n                  base,\r\n                  baseValue,\r\n                  rows,\r\n                  cols,\r\n                  header,\r\n                  footer,\r\n                  sidebar\r\n                });\r\n              }\r\n              this.setState({ display: \"main\" });\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Table of </label>\r\n              <select\r\n                defaultValue={this.state.creator.base}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: { ...this.state.creator, base: event.target.value }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector).map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {this.state.creator.base != null &&\r\n            objector[this.state.creator.base].length > 0 ? (\r\n              <div className=\"form-row\">\r\n                <label\r\n                  htmlFor=\"baseValue\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {listKey(this.state.creator.base)}\r\n                </label>\r\n                <select\r\n                  value={\r\n                    this.state.creator.baseValue == null\r\n                      ? objector[this.state.creator.base][0].id\r\n                      : this.state.creator.baseValue\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      creator: {\r\n                        ...this.state.creator,\r\n                        baseValue: event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                >\r\n                  {this.state.creator.baseValue !== null\r\n                    ? objector[this.state.creator.base].filter(\r\n                        item => item.id === this.state.creator.baseValue\r\n                      ).length > 0\r\n                      ? null\r\n                      : this.setState({\r\n                          creator: { ...this.state.creator, baseValue: null }\r\n                        })\r\n                    : null}\r\n                  {objector[this.state.creator.base].map(item => {\r\n                    if (this.state.creator.baseValue == null) {\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, baseValue: item.id }\r\n                      });\r\n                    }\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                value={this.state.creator.rows}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      rows: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(key => key !== this.state.creator.base)\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"rows\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                value={this.state.creator.cols}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      cols: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {Object.keys(objector)\r\n                  .filter(\r\n                    key =>\r\n                      key !== this.state.creator.base &&\r\n                      key !== this.state.creator.rows\r\n                  )\r\n                  .map(key => {\r\n                    return (\r\n                      <option key={\"cols\" + key} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.header.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: {\r\n                        ...this.state.creator.header,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.header.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      header: { ...this.state.creator.header, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.creator.footer.text}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: {\r\n                        ...this.state.creator.footer,\r\n                        text: e.target.value\r\n                      }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <ColorsPanel\r\n                color={this.state.creator.footer.color}\r\n                change={color => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      footer: { ...this.state.creator.footer, color }\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n                style={{ marginRight: \"1em\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <div>\r\n                {this.state.creator.action === \"update\" ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTable(this.state.creator.id);\r\n                      this.setState({ display: \"main\" });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                ) : null}\r\n                <input\r\n                  type=\"submit\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  value={this.state.creator.action}\r\n                  className=\"black-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    let objects = Object.keys(objector);\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Table Settings</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"base\">Tables for</label>\r\n              <select\r\n                type=\"text\"\r\n                value={this.state.quicker.base}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, base: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  return (\r\n                    <option key={\"base\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"rows\">Rows </label>\r\n              <select\r\n                id=\"rows\"\r\n                type=\"text\"\r\n                value={this.state.quicker.rows}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, rows: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (obj === this.state.quicker.base) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"row\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cols\">Columns </label>\r\n              <select\r\n                id=\"cols\"\r\n                type=\"text\"\r\n                value={this.state.quicker.cols}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, cols: x.target.value }\r\n                  })\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {objects.map(obj => {\r\n                  if (\r\n                    obj === this.state.quicker.rows ||\r\n                    obj === this.state.quicker.base\r\n                  ) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <option key={\"col\" + obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"header-tarea\">Header</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.header}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, header: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Footer</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ width: \"20rem\" }}\r\n                value={this.state.quicker.footer}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, footer: e.target.value }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let tables = [];\r\n                let tFor = objector[this.state.quicker.base];\r\n                tFor.forEach(base => {\r\n                  tables.push({\r\n                    base: this.state.quicker.base,\r\n                    baseValue: base.id,\r\n                    rows: this.state.quicker.rows,\r\n                    cols: this.state.quicker.cols,\r\n                    header: {\r\n                      text: this.state.quicker.header,\r\n                      color: \"transparent\"\r\n                    },\r\n                    footer: {\r\n                      text: this.state.quicker.footer,\r\n                      color: \"transparent\"\r\n                    },\r\n                    sidebar: {\r\n                      text: this.state.quicker.sidebar,\r\n                      color: \"transparent\"\r\n                    }\r\n                  });\r\n                });\r\n                tables.forEach(table => {\r\n                  this.props.createTable(table);\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Tables\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\"\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"quick\"\r\n              });\r\n            }}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              this.props.showModal(\r\n                \"confirm\",\r\n                \"All tables will be deleted , Are you sure ?\",\r\n                [\r\n                  () => {\r\n                    this.props.tables.forEach(table => {\r\n                      this.props.deleteTable(table.id);\r\n                    });\r\n                    this.props.unshowModal();\r\n                  },\r\n                  () => {\r\n                    this.props.unshowModal();\r\n                  }\r\n                ]\r\n              );\r\n            }}\r\n          >\r\n            Delete All Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            let baseName;\r\n            if (base.length === 0) {\r\n              console.log(\"Table Base Not Found\", table);\r\n              baseName = null;\r\n            } else {\r\n              baseName = base[0].name;\r\n            }\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>\r\n                    {baseName != null ? (\r\n                      baseName\r\n                    ) : (\r\n                      <span className=\"warning\">Error</span>\r\n                    )}\r\n                  </strong>{\" \"}\r\n                  Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable, showModal, unshowModal }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  keyList,\r\n  lectureValidator,\r\n  LECTURE_COLOR\r\n} from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nimport {\r\n  createLecture,\r\n  updateLecture,\r\n  deleteLecture,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  day: null,\r\n  time: null,\r\n  place: null,\r\n  subject: null,\r\n  teacher: null,\r\n  batch: null,\r\n  color: LECTURE_COLOR,\r\n  display: [\"batch\", \"subject\", \"teacher\"],\r\n  mode: \"create\"\r\n};\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    listshow: \"all\",\r\n    showitem: \"all\",\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              if (this.state.creator.mode === \"create\") {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color,\r\n                  display: this.state.creator.display\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture);\r\n                if (validator.value) {\r\n                  this.props.createLecture(lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              } else {\r\n                let lecture = {\r\n                  batch: this.state.creator.batch,\r\n                  subject: this.state.creator.subject,\r\n                  teacher: this.state.creator.teacher,\r\n                  place: this.state.creator.place,\r\n                  day: this.state.creator.day,\r\n                  time: this.state.creator.time,\r\n                  color: this.state.creator.color,\r\n                  display: this.state.creator.display\r\n                };\r\n                let validator = lectureValidator(this.props.lectures, lecture, {\r\n                  id: this.state.creator.id\r\n                });\r\n                if (validator.value) {\r\n                  this.props.updateLecture(this.state.creator.id, lecture);\r\n                  this.setState({ display: \"main\" });\r\n                } else {\r\n                  this.props.showModal(\"message\", validator.message);\r\n                }\r\n              }\r\n            }}\r\n            className=\"form-table\"\r\n          >\r\n            {Object.keys(objector).map(key => {\r\n              let list = objector[key];\r\n              if (this.state.creator[key] != null) {\r\n                if (\r\n                  list.filter(item => item.id === this.state.creator[key])\r\n                    .length === 0\r\n                ) {\r\n                  if (list.length > 0) {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = list[0].id;\r\n                    this.setState({ creator });\r\n                  } else {\r\n                    let creator = { ...this.state.creator };\r\n                    creator[key] = null;\r\n                    this.setState({ creator });\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <div className=\"form-row\" key={key}>\r\n                  <label\r\n                    htmlFor={key + \"sct\"}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {key}\r\n                  </label>\r\n                  <select\r\n                    name={key}\r\n                    id={key + \"sct\"}\r\n                    value={this.state.creator[key] || \"\"}\r\n                    required={true}\r\n                    onChange={x => {\r\n                      let y = {};\r\n                      y[key] = x.target.value;\r\n                      this.setState({\r\n                        creator: { ...this.state.creator, ...y }\r\n                      });\r\n                    }}\r\n                  >\r\n                    {list.map(item => {\r\n                      return (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.creator.color}\r\n                change={color => {\r\n                  this.setState({ creator: { ...this.state.creator, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Display </label>\r\n              <select\r\n                name=\"\"\r\n                id=\"\"\r\n                multiple\r\n                value={this.state.creator.display}\r\n                onChange={ex => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      display: [...ex.target.selectedOptions]\r\n                        .filter(({ selected }) => selected)\r\n                        .map(({ value }) => value)\r\n                    }\r\n                  });\r\n                }}\r\n                size=\"6\"\r\n              >\r\n                <option value=\"batch\">Batch</option>\r\n                <option value=\"teacher\">Teacher</option>\r\n                <option value=\"subject\">Subject</option>\r\n                <option value=\"place\">Place</option>\r\n                <option value=\"day\">Day</option>\r\n                <option value=\"time\">Time</option>\r\n              </select>\r\n\r\n              <span className=\"info\" style={{ display: \"inline\" }}>\r\n                <span>\r\n                  These things will be displayed in the table,Hold control to\r\n                  select multiple options\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ display: \"main\" });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value={this.state.creator.mode}\r\n                style={{ textTransform: \"capitalize\" }}\r\n                className=\"black-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    let itemlist;\r\n    if (this.state.listshow === \"all\") {\r\n      itemlist = [];\r\n    } else {\r\n      itemlist = objector[this.state.listshow];\r\n    }\r\n    const lectCard = lecture => {\r\n      let subject = this.props.subjects.filter(\r\n        st => st.id === lecture.subject\r\n      )[0];\r\n      let batch = this.props.batches.filter(bh => bh.id === lecture.batch)[0];\r\n      let teacher = this.props.teachers.filter(\r\n        tr => tr.id === lecture.teacher\r\n      )[0];\r\n      let time = this.props.times.filter(tm => tm.id === lecture.time)[0];\r\n      let place = this.props.places.filter(pc => pc.id === lecture.place)[0];\r\n      let day = this.props.days.filter(dy => dy.id === lecture.day)[0];\r\n      return (\r\n        <div\r\n          key={lecture.id}\r\n          className=\"block\"\r\n          style={{\r\n            background:\r\n              lecture.color !== \"transparent\"\r\n                ? lecture.color\r\n                : \"rgb(179,178,178)\"\r\n          }}\r\n        >\r\n          <div className=\"block-txt\">\r\n            {subject != null ? (\r\n              <span>{subject.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Subject Error </span>\r\n            )}\r\n            {batch != null ? (\r\n              <span>{batch.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Batch Error </span>\r\n            )}\r\n            {teacher != null ? (\r\n              <span>{teacher.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Teacher Error </span>\r\n            )}\r\n            {time != null ? (\r\n              <span>{time.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Time Error </span>\r\n            )}\r\n            {place != null ? (\r\n              <span>{place.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Place Error </span>\r\n            )}\r\n            {day != null ? (\r\n              <span>{day.name}</span>\r\n            ) : (\r\n              <span className=\"warning\">Day Error </span>\r\n            )}\r\n          </div>\r\n          <div className=\"block-btns\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  display: \"create\",\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    ...lecture,\r\n                    mode: \"update\"\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.deleteLecture(lecture.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Lectures</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  ...DefaultCreator,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <h3 style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n            Filter by\r\n          </h3>\r\n          <select\r\n            value={this.state.listshow}\r\n            onChange={x => {\r\n              this.setState({ listshow: x.target.value, showitem: \"all\" });\r\n            }}\r\n            style={{ textTransform: \"capitalize\" }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {Object.keys(objector).map(obj => {\r\n              return (\r\n                <option value={obj} key={obj + \"listitem\"}>\r\n                  {keyList(obj)}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            value={this.state.showitem}\r\n            onChange={x => {\r\n              this.setState({ showitem: x.target.value });\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            {itemlist.map(item => {\r\n              return <option value={item.id}>{item.name}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <p style={{ color: \"rgb(90, 90, 90)\" }}>\r\n          &nbsp;&nbsp; * Any lecture containing an error won't be displayed on\r\n          screen\r\n        </p>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          {this.state.listshow === \"all\" ? (\r\n            <div className=\"block-list\">\r\n              {this.props.lectures.map(lect => lectCard(lect))}\r\n            </div>\r\n          ) : (\r\n            objector[this.state.listshow]\r\n              .filter(item => {\r\n                if (this.state.showitem === \"all\") {\r\n                  return item;\r\n                } else if (this.state.showitem === item.id) {\r\n                  return item;\r\n                }\r\n                return null;\r\n              })\r\n              .map(item => {\r\n                let lectures = this.props.lectures.filter(\r\n                  lect => lect[this.state.listshow] === item.id\r\n                );\r\n\r\n                return (\r\n                  <div>\r\n                    <h2>{item.name}</h2>\r\n                    <div className=\"block-list\">\r\n                      {lectures.length > 0 ? (\r\n                        lectures.map(lect => lectCard(lect))\r\n                      ) : (\r\n                        <span>\r\n                          There are no lectures for this{\" \"}\r\n                          <strong style={{ textTransform: \"capitalize\" }}>\r\n                            {this.state.listshow}\r\n                          </strong>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture,\r\n    showModal\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createBatch,\r\n  updateBatch,\r\n  swapBatch,\r\n  deleteBatch,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { BATCH_COLOR, batchValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: BATCH_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch, batch);\r\n              if (validator.value) {\r\n                this.props.createBatch(batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let batch = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = batchValidator(this.props.batches, batch);\r\n              if (validator.value) {\r\n                this.props.updateBatch(this.state.creator.id, batch);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\"> Batch Name &nbsp; </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    name: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\"> Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    color\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{\r\n                textTransform: \"capitalize\"\r\n              }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <h1>Create Batch</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Batches List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.batches.map((batch, index) => {\r\n                return (\r\n                  <tr key={batch.id}>\r\n                    <td>\r\n                      <span>{batch.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapBatch(\r\n                                batch.id,\r\n                                this.props.batches[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.batches.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapBatch(\r\n                                batch.id,\r\n                                this.props.batches[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...batch,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteBatch(batch.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    swapBatch,\r\n    deleteBatch,\r\n    showModal\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createDay,\r\n  updateDay,\r\n  swapDay,\r\n  deleteDay,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { DAY_COLOR, dayValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: DAY_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day, day);\r\n              if (validator.value) {\r\n                this.props.createDay(day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let day = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = dayValidator(this.props.days, day);\r\n              if (validator.value) {\r\n                this.props.updateDay(this.state.creator.id, day);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color</label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <h1>Create Day</h1>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              let days = [\r\n                \"Monday\",\r\n                \"Tuesday\",\r\n                \"Wednesday\",\r\n                \"Thursday\",\r\n                \"Friday\",\r\n                \"Saturday\",\r\n                \"Sunday\"\r\n              ];\r\n              days.forEach(day => {\r\n                let dayObj = { name: day, color: DAY_COLOR };\r\n                let validator = dayValidator(this.props.days, dayObj);\r\n                if (validator.value) {\r\n                  this.props.createDay(dayObj);\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Add All Days\r\n          </button>\r\n        </div>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Days List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.days.map((day, index) => {\r\n                return (\r\n                  <tr key={day.id}>\r\n                    <td>\r\n                      <span>{day.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapDay(\r\n                                day.id,\r\n                                this.props.days[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.days.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapDay(\r\n                                day.id,\r\n                                this.props.days[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...day,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteDay(day.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    lectures: state.Lectures,\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    swapDay,\r\n    deleteDay,\r\n    showModal\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTime,\r\n  updateTime,\r\n  swapTime,\r\n  deleteTime,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { TIME_COLOR, timeValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TIME_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  fromTime: \"08\",\r\n  fromMeridian: \"AM\",\r\n  toTime: \"01\",\r\n  toMeridian: \"PM\",\r\n  lectureTime: \"60\",\r\n  color: TIME_COLOR\r\n};\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Times</h1>\r\n\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>Timing of your institute/school ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"from\">From </label>\r\n              <input\r\n                id=\"from\"\r\n                type=\"text\"\r\n                value={this.state.quicker.fromTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.fromMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      fromMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"to\">To </label>\r\n              <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                value={this.state.quicker.toTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <select\r\n                value={this.state.quicker.toMeridian}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      toMeridian: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"30,60 or 90\"\r\n                value={this.state.quicker.lectureTime}\r\n                onChange={x => {\r\n                  this.setState({\r\n                    quicker: {\r\n                      ...this.state.quicker,\r\n                      lectureTime: x.target.value\r\n                    }\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\" />\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color</label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                const timeChanger = (time, modifier) => {\r\n                  time = parseInt(time);\r\n                  if (time === 12) {\r\n                    time = 0;\r\n                  }\r\n                  if (modifier === \"PM\") {\r\n                    time += 12;\r\n                  }\r\n                  return time;\r\n                };\r\n                let from = new Date();\r\n                from.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.fromTime,\r\n                    this.state.quicker.fromMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let to = new Date();\r\n                to.setHours(\r\n                  timeChanger(\r\n                    this.state.quicker.toTime,\r\n                    this.state.quicker.toMeridian\r\n                  ),\r\n                  0,\r\n                  0,\r\n                  0\r\n                );\r\n                let times = [];\r\n                const timeStringer = time => {\r\n                  let hours =\r\n                    time.getHours() > 12\r\n                      ? time.getHours() - 12\r\n                      : time.getHours();\r\n                  time = `${\r\n                    hours.toString().length === 1 ? `0${hours}` : hours\r\n                  }:${\r\n                    time.getMinutes().toString().length === 1\r\n                      ? `0${time.getMinutes()}`\r\n                      : time.getMinutes()\r\n                  } ${time.getHours() > 12 ? \"PM\" : \"AM\"}`;\r\n                  return time;\r\n                };\r\n                while (from.getTime() < to.getTime()) {\r\n                  let start = timeStringer(from);\r\n                  from.setMinutes(\r\n                    from.getMinutes() + parseInt(this.state.quicker.lectureTime)\r\n                  );\r\n                  times.push(start + \" - \" + timeStringer(from));\r\n                }\r\n                times.forEach(time => {\r\n                  let timeObj = { name: time, color: this.state.quicker.color };\r\n                  let validator = timeValidator(this.props.times, timeObj);\r\n                  if (validator.value) {\r\n                    this.props.createTime(timeObj);\r\n                  }\r\n                  this.setState({ display: \"main\" });\r\n                });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Times\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time);\r\n              if (validator.value) {\r\n                this.props.createTime(time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let time = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = timeValidator(this.props.times, time, time);\r\n              if (validator.value) {\r\n                this.props.updateTime(this.state.creator.id, time);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"colorbtn\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <h1>Create Time</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({\r\n              display: \"quick\",\r\n              creator: { id: null, name: null, mode: \"create\" }\r\n            });\r\n          }}\r\n        >\r\n          Quick Times\r\n        </button>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Times List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.times.map((time, index) => {\r\n                return (\r\n                  <tr key={time.id}>\r\n                    <td>\r\n                      <span>{time.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTime(\r\n                                time.id,\r\n                                this.props.times[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.times.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTime(\r\n                                time.id,\r\n                                this.props.times[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...time,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteTime(time.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    swapTime,\r\n    deleteTime,\r\n    showModal\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createPlace,\r\n  updatePlace,\r\n  swapPlace,\r\n  deletePlace,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { PLACE_COLOR, placeValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: PLACE_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nconst DefaultQuicker = {\r\n  name: \"Room\",\r\n  from: \"1\",\r\n  to: \"10\",\r\n  color: PLACE_COLOR\r\n};\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator,\r\n    quicker: DefaultQuicker\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  quicker() {\r\n    return (\r\n      <div>\r\n        <h1>Places</h1>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n          <div className=\"form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"name\">Place Name : </label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.name}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, name: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.from}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, from: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.quicker.to}\r\n                onChange={x =>\r\n                  this.setState({\r\n                    quicker: { ...this.state.quicker, to: x.target.value }\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"\">Color </label>\r\n              <ColorsPanel\r\n                color={this.state.quicker.color}\r\n                change={color => {\r\n                  this.setState({ quicker: { ...this.state.quicker, color } });\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.setState({ display: \"main\" })}>\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => {\r\n                let places = [];\r\n                for (\r\n                  let i = parseInt(this.state.quicker.from);\r\n                  i <= parseInt(this.state.quicker.to);\r\n                  i++\r\n                ) {\r\n                  places.push(`${this.state.quicker.name} ${i}`);\r\n                }\r\n                places.forEach(place => {\r\n                  let placeObj = {\r\n                    name: place,\r\n                    color: this.state.quicker.color\r\n                  };\r\n                  let validator = placeValidator(\r\n                    this.props.places,\r\n                    placeObj,\r\n                    placeObj\r\n                  );\r\n                  if (validator.value) {\r\n                    this.props.createPlace(placeObj);\r\n                  }\r\n                });\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              className=\"black-btn\"\r\n            >\r\n              Create Places\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.createPlace(place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let place = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = placeValidator(this.props.places, place);\r\n              if (validator.value) {\r\n                this.props.updatePlace(this.state.creator.id, place);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"quick\") {\r\n      return this.quicker();\r\n    }\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <h1>Create Place</h1>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n          >\r\n            Quick Places\r\n          </button>\r\n\r\n          <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n          <div className=\"table-list\">\r\n            <h1>Places List</h1>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <td>Name</td>\r\n                  <td>Move</td>\r\n                  <td>Actions</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.places.map((place, index) => {\r\n                  return (\r\n                    <tr key={place.id}>\r\n                      <td>\r\n                        <span>{place.name}</span>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"btn-container\">\r\n                          {index === 0 ? null : (\r\n                            <button\r\n                              onClick={() => {\r\n                                this.props.swapPlace(\r\n                                  place.id,\r\n                                  this.props.places[index - 1].id\r\n                                );\r\n                              }}\r\n                            >\r\n                              Up\r\n                            </button>\r\n                          )}\r\n                          {index === this.props.places.length - 1 ? null : (\r\n                            <button\r\n                              onClick={() => {\r\n                                this.props.swapPlace(\r\n                                  place.id,\r\n                                  this.props.places[index + 1].id\r\n                                );\r\n                              }}\r\n                            >\r\n                              Down\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"btn-container\">\r\n                          <button\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                creator: {\r\n                                  ...this.state.creator,\r\n                                  ...place,\r\n                                  mode: \"update\"\r\n                                }\r\n                              });\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.deletePlace(place.id);\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    swapPlace,\r\n    deletePlace,\r\n    showModal\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createSubject,\r\n  updateSubject,\r\n  swapSubject,\r\n  deleteSubject,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { SUBJECT_COLOR, subjectValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: SUBJECT_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(this.props.subjects, subject);\r\n              if (validator.value) {\r\n                this.props.createSubject(subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let subject = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = subjectValidator(\r\n                this.props.subjects,\r\n                subject,\r\n                subject\r\n              );\r\n              if (validator.value) {\r\n                this.props.updateSubject(this.state.creator.id, subject);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <h1>Create Subject</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Subjects List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.subjects.map((subject, index) => {\r\n                return (\r\n                  <tr key={subject.id}>\r\n                    <td>\r\n                      <span>{subject.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapSubject(\r\n                                subject.id,\r\n                                this.props.subjects[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.subjects.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapSubject(\r\n                                subject.id,\r\n                                this.props.subjects[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...subject,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteSubject(subject.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    swapSubject,\r\n    deleteSubject,\r\n    showModal\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createTeacher,\r\n  updateTeacher,\r\n  swapTeacher,\r\n  deleteTeacher,\r\n  showModal\r\n} from \"../../../actions\";\r\n\r\nimport { TEACHER_COLOR, teacherValidator } from \"../../../actions/helpers\";\r\n\r\nimport ColorsPanel from \"../../modals/ColorsPanel\";\r\n\r\nconst DefaultCreator = {\r\n  id: null,\r\n  name: null,\r\n  color: TEACHER_COLOR,\r\n  mode: \"create\"\r\n};\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: DefaultCreator\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.user.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(\r\n                this.props.teachers,\r\n                teacher,\r\n                teacher\r\n              );\r\n              if (validator.value) {\r\n                this.props.createTeacher(teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            } else {\r\n              let teacher = {\r\n                name: this.state.creator.name,\r\n                color: this.state.creator.color\r\n              };\r\n              let validator = teacherValidator(\r\n                this.props.teachers,\r\n                teacher,\r\n                teacher\r\n              );\r\n              if (validator.value) {\r\n                this.props.updateTeacher(this.state.creator.id, teacher);\r\n              } else {\r\n                this.props.showModal(\"message\", validator.message);\r\n              }\r\n            }\r\n            this.setState({\r\n              creator: DefaultCreator\r\n            });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Color </label>\r\n            <ColorsPanel\r\n              color={this.state.creator.color}\r\n              change={color => {\r\n                this.setState({ creator: { ...this.state.creator, color } });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div />\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <h1>Create Teacher</h1>\r\n        <div style={{ margin: \"1rem\" }}>{this.creator()}</div>\r\n\r\n        <div className=\"table-list\">\r\n          <h1>Teachers List</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Move</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.teachers.map((teacher, index) => {\r\n                return (\r\n                  <tr key={teacher.id}>\r\n                    <td>\r\n                      <span>{teacher.name}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        {index === 0 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTeacher(\r\n                                teacher.id,\r\n                                this.props.teachers[index - 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Up\r\n                          </button>\r\n                        )}\r\n                        {index === this.props.teachers.length - 1 ? null : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.swapTeacher(\r\n                                teacher.id,\r\n                                this.props.teachers[index + 1].id\r\n                              );\r\n                            }}\r\n                          >\r\n                            Down\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-container\">\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              creator: {\r\n                                ...this.state.creator,\r\n                                ...teacher,\r\n                                mode: \"update\"\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteTeacher(teacher.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    swapTeacher,\r\n    deleteTeacher,\r\n    showModal\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./others/Tables\";\r\nimport Lectures from \"./others/Lectures\";\r\nimport Batches from \"./others/Batches\";\r\nimport Days from \"./others/Days\";\r\nimport Times from \"./others/Times\";\r\nimport Places from \"./others/Places\";\r\nimport Subjects from \"./others/Subjects\";\r\nimport Teachers from \"./others/Teachers\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\",\r\n    params: null\r\n  };\r\n  changeDisplay = (display, params = null) => {\r\n    this.setState({ display, params });\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"tables\":\r\n        return <Tables params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"lectures\":\r\n        return (\r\n          <Lectures params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"batches\":\r\n        return (\r\n          <Batches params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"days\":\r\n        return <Days params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"times\":\r\n        return <Times params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"places\":\r\n        return <Places params={this.state.params} actor={this.changeDisplay} />;\r\n      case \"subjects\":\r\n        return (\r\n          <Subjects params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      case \"teachers\":\r\n        return (\r\n          <Teachers params={this.state.params} actor={this.changeDisplay} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={\r\n                    this.state.display === btn ? \"selected elebtn\" : \"elebtn\"\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {this.actor()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../actions\";\r\n\r\nimport \"../resources/modal.css\";\r\n\r\n/*\r\nINITIAL MODAL STATE\r\nmodal: {\r\n    display: false,\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  }\r\n*/\r\n\r\nclass Modal extends Component {\r\n  waiting() {\r\n    return <div className=\"modal-loader\" />;\r\n  }\r\n  content(\r\n    content = this.props.modal.content,\r\n    buttons = this.props.modal.buttons || []\r\n  ) {\r\n    return (\r\n      <div>\r\n        <div>{content}</div>\r\n        <br />\r\n        <div>\r\n          {buttons.map(button => {\r\n            return (\r\n              <button\r\n                key={button.value + \"-btn\"}\r\n                onClick={button.click}\r\n                className={button.type === \"black\" ? \"black-btn\" : \"\"}\r\n              >\r\n                {button.value}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  confirm() {\r\n    let content = this.props.modal.content;\r\n    let buttons = [\r\n      {\r\n        value: \"No\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[1] != null) {\r\n                  this.props.modal.actions[1]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : this.props.unshowModal\r\n      },\r\n      {\r\n        type: \"black\",\r\n        value: \"Yes\",\r\n        click:\r\n          this.props.modal.actions != null\r\n            ? () => {\r\n                if (this.props.modal.actions[0] != null) {\r\n                  this.props.modal.actions[0]();\r\n                }\r\n                this.props.unshowModal();\r\n              }\r\n            : () => {}\r\n      }\r\n    ];\r\n    return this.content(content, buttons);\r\n  }\r\n  implement() {\r\n    switch (this.props.modal.type) {\r\n      case \"waiting\":\r\n      default:\r\n        return this.waiting();\r\n      case \"content\":\r\n      case \"message\":\r\n        return this.content();\r\n      case \"confirm\":\r\n        return this.confirm();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.modal.display) {\r\n      return (\r\n        <div\r\n          className=\"modal\"\r\n          onClick={() => {\r\n            if (this.props.modal.type === \"message\") {\r\n              this.props.unshowModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-inside\">{this.implement()}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modal: state.System.modal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    unshowModal\r\n  }\r\n)(Modal);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"./ColorsPanel\";\r\n\r\nclass AreaEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\" key=\"areacolor\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element.color}\r\n                  change={color => {\r\n                    this.setState({\r\n                      element: { ...this.state.element, color }\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\" key={\"area\" + e}>\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.element[e]}\r\n                  onChange={ex => {\r\n                    let element = { ...this.state.element };\r\n                    element[e] = ex.target.value;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            {this.props.delete !== null ? (\r\n              <button\r\n                onClick={() => {\r\n                  this.props.delete();\r\n                  this.props.unshowModal();\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : null}\r\n            &nbsp;\r\n            <input type=\"submit\" value=\"Update\" className=\"black-btn\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(AreaEditor);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unshowModal } from \"../../actions\";\r\n\r\nimport ColorsPanel from \"./ColorsPanel\";\r\n\r\nclass ObjectEditor extends Component {\r\n  state = {\r\n    element: {\r\n      ...this.props.element\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.props.update(this.state.element);\r\n          this.props.unshowModal();\r\n        }}\r\n        className=\"form-table\"\r\n      >\r\n        {Object.keys(this.props.element[this.props.obj]).map(e => {\r\n          if (e === \"id\") {\r\n            return null;\r\n          } else if (e === \"color\") {\r\n            return (\r\n              <div className=\"form-row\" key=\"areacolor\">\r\n                <label htmlFor=\"\">Color </label>\r\n                <ColorsPanel\r\n                  color={this.state.element[this.props.obj].color}\r\n                  change={color => {\r\n                    let element = { ...this.state.element };\r\n                    element[this.props.obj].color = color;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"form-row\" key={\"area\" + e}>\r\n                <label htmlFor=\"\" style={{ textTransform: \"capitalize\" }}>\r\n                  {e} &nbsp;\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.element[this.props.obj][e]}\r\n                  onChange={ex => {\r\n                    let element = { ...this.state.element };\r\n                    element[this.props.obj][e] = ex.target.value;\r\n                    this.setState({ element });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"form-row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.unshowModal();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            {this.props.delete !== null ? (\r\n              <button\r\n                onClick={() => {\r\n                  this.props.delete();\r\n                  this.props.unshowModal();\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : null}\r\n            &nbsp;\r\n            <input\r\n              type=\"submit\"\r\n              value={this.props.updateValue}\r\n              className=\"black-btn\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    unshowModal\r\n  }\r\n)(ObjectEditor);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  showModal,\r\n  unshowMenu,\r\n  deleteDay,\r\n  deleteBatch,\r\n  deleteTeacher,\r\n  deleteTime,\r\n  deletePlace,\r\n  deleteSubject,\r\n  deleteLecture,\r\n  updateTable,\r\n  updateDay,\r\n  updateBatch,\r\n  updateTeacher,\r\n  updateTime,\r\n  updatePlace,\r\n  updateSubject,\r\n  updateLecture,\r\n  swapDay,\r\n  swapBatch,\r\n  swapTeacher,\r\n  swapTime,\r\n  swapPlace,\r\n  swapSubject,\r\n  swapTable\r\n} from \"../actions\";\r\n\r\nimport AreaEditor from \"./modals/AreaEditor\";\r\nimport ObjectEditor from \"./modals/ObjectEditor\";\r\nimport LectureModal from \"./modals/LectureModal\";\r\n\r\nimport {\r\n  reverse,\r\n  keyList,\r\n  listKey,\r\n  lectureValidator,\r\n  batchValidator,\r\n  dayValidator,\r\n  timeValidator,\r\n  placeValidator,\r\n  subjectValidator,\r\n  teacherValidator\r\n} from \"../actions/helpers\";\r\n\r\nimport \"../resources/menu.css\";\r\n\r\nclass Menu extends Component {\r\n  editor(obj) {\r\n    let tochange = obj.tochange;\r\n    let area = reverse(obj.element.id);\r\n    const switcher = (area, request) => {\r\n      let req = this.props[\r\n        `${request}${area[0].toUpperCase()}${listKey(area).substr(\r\n          1,\r\n          listKey(area).length\r\n        )}`\r\n      ];\r\n      return req;\r\n    };\r\n    if (tochange !== null) {\r\n      this.props.showModal(\r\n        \"content\",\r\n        <ObjectEditor\r\n          element={obj.element}\r\n          obj={obj.tochange}\r\n          update={data => {\r\n            switcher(keyList(area), \"update\")(obj.element.id, data);\r\n          }}\r\n          delete={null}\r\n        />\r\n      );\r\n    } else if (tochange === null && area === \"lecture\") {\r\n      let {\r\n        rname,\r\n        cname,\r\n        rindex,\r\n        rows,\r\n        base,\r\n        cols,\r\n        cindex,\r\n        tableBase,\r\n        lecture\r\n      } = obj.additional;\r\n      let params = {};\r\n      params[listKey(tableBase)] = base.id;\r\n      params[listKey(rname)] = rows[rindex].id;\r\n      params[listKey(cname)] = cols[cindex].id;\r\n      let toEdit = [\"day\", \"time\", \"place\", \"batch\", \"subject\", \"teacher\"];\r\n      toEdit = toEdit.filter(p => {\r\n        if (Object.keys(params).indexOf(p) < 0) {\r\n          return p;\r\n        }\r\n        return null;\r\n      });\r\n      params = { ...lecture, ...params };\r\n      this.props.showModal(\r\n        \"content\",\r\n        <LectureModal params={params} edit={toEdit} mode=\"update\" />\r\n      );\r\n    } else {\r\n      this.props.showModal(\r\n        \"content\",\r\n        <AreaEditor\r\n          element={obj.element}\r\n          update={data => {\r\n            let vals = {\r\n              timeValidator,\r\n              placeValidator,\r\n              subjectValidator,\r\n              teacherValidator,\r\n              batchValidator,\r\n              dayValidator\r\n            };\r\n            let validator = vals[area + \"Validator\"](\r\n              this.props[keyList(area)],\r\n              data,\r\n              obj.element\r\n            );\r\n            if (validator.value) {\r\n              switcher(keyList(area), \"update\")(obj.element.id, data);\r\n            } else {\r\n              console.log(\"what\");\r\n              this.props.showModal(\"content\", validator.message);\r\n            }\r\n          }}\r\n          delete={() => {\r\n            switcher(keyList(area), \"delete\")(obj.element.id);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  move(direction, thing, way = null) {\r\n    let mover = (man, range) => {\r\n      let {\r\n        rname,\r\n        cname,\r\n        rindex,\r\n        rows,\r\n        base,\r\n        cols,\r\n        cindex,\r\n        lecture,\r\n        tableBase\r\n      } = way;\r\n      let index, length;\r\n      if (man === \"row\") {\r\n        index = rindex + range;\r\n        length = rows.length;\r\n      } else {\r\n        index = cindex + range;\r\n        length = cols.length;\r\n      }\r\n      if (index > -1 && index < length) {\r\n        let otherLecture = this.props.lectures.filter(\r\n          block =>\r\n            block[listKey(tableBase)] === base.id &&\r\n            block[listKey(rname)] ===\r\n              (man === \"row\" ? rows[rindex + range].id : rows[rindex].id) &&\r\n            block[listKey(cname)] ===\r\n              (man === \"col\" ? cols[cindex + range].id : cols[cindex].id)\r\n        );\r\n\r\n        if (otherLecture.length > 0) {\r\n          otherLecture = {\r\n            ...otherLecture[0],\r\n            [listKey(man === \"row\" ? rname : cname)]:\r\n              man === \"row\" ? rows[rindex].id : cols[cindex].id\r\n          };\r\n          let otherValidator = lectureValidator(\r\n            this.props.lectures,\r\n            otherLecture,\r\n            lecture\r\n          );\r\n          if (otherValidator.value) {\r\n            this.props.updateLecture(otherLecture.id, otherLecture);\r\n            lecture = {\r\n              ...lecture,\r\n              [listKey(man === \"row\" ? rname : cname)]:\r\n                man === \"row\"\r\n                  ? rows[rindex + range].id\r\n                  : cols[cindex + range].id\r\n            };\r\n            let validator = lectureValidator(\r\n              this.props.lectures,\r\n              lecture,\r\n              otherLecture\r\n            );\r\n            if (validator.value) {\r\n              this.props.updateLecture(lecture.id, lecture);\r\n            } else {\r\n              this.props.showModal(\"message\", validator.message);\r\n            }\r\n          } else {\r\n            this.props.showModal(\r\n              \"message\",\r\n              \"2nd lecture error , \" + otherValidator.message\r\n            );\r\n          }\r\n        } else {\r\n          lecture = {\r\n            ...lecture,\r\n            [listKey(man === \"row\" ? rname : cname)]:\r\n              man === \"row\" ? rows[rindex + range].id : cols[cindex + range].id\r\n          };\r\n          this.props.updateLecture(lecture.id, lecture);\r\n        }\r\n      }\r\n    };\r\n    if (way === null) {\r\n      switch (direction) {\r\n        case \"up\":\r\n          let key = reverse(thing.id);\r\n          let list = this.props[keyList(key)];\r\n          let index = list.indexOf(thing);\r\n          if (index + 1 < list.length) {\r\n            this.props[\r\n              \"swap\" + key[0].toUpperCase() + key.substr(1, key.length)\r\n            ](list[index].id, list[index + 1].id);\r\n          }\r\n          break;\r\n        case \"down\":\r\n          let key2 = reverse(thing.id);\r\n          let list2 = this.props[keyList(key2)];\r\n          let index2 = list2.indexOf(thing);\r\n          if (index2 - 1 > -1) {\r\n            this.props[\r\n              \"swap\" + key2[0].toUpperCase() + key2.substr(1, key2.length)\r\n            ](list2[index2].id, list2[index2 - 1].id);\r\n          }\r\n          break;\r\n        default:\r\n          return false;\r\n      }\r\n    } else {\r\n      switch (direction) {\r\n        case \"up\":\r\n          mover(\"row\", -1);\r\n          break;\r\n        case \"down\":\r\n          mover(\"row\", 1);\r\n          break;\r\n        case \"left\":\r\n          mover(\"col\", -1);\r\n          break;\r\n        case \"right\":\r\n          mover(\"col\", 1);\r\n          break;\r\n        default:\r\n          return false;\r\n      }\r\n    }\r\n  }\r\n  delete(dealing, element) {\r\n    this.props[\r\n      \"delete\" + dealing[0].toUpperCase() + dealing.substr(1, dealing.length)\r\n    ](element.id);\r\n  }\r\n  construct(obj) {\r\n    let ele = obj.element;\r\n    let dealing = reverse(ele.id);\r\n    let menuItems = {};\r\n    switch (dealing) {\r\n      case \"table\":\r\n        menuItems[\"Edit\"] = () => {\r\n          this.editor(obj);\r\n        };\r\n        break;\r\n      case \"lecture\":\r\n        menuItems[\"Edit\"] = () => {\r\n          this.editor(obj);\r\n        };\r\n        menuItems[\"Move Up\"] = () => {\r\n          this.move(\"up\", \"block\", obj.additional);\r\n        };\r\n        menuItems[\"Move Down\"] = () => {\r\n          this.move(\"down\", \"block\", obj.additional);\r\n        };\r\n        menuItems[\"Move Left\"] = () => {\r\n          this.move(\"left\", \"block\", obj.additional);\r\n        };\r\n        menuItems[\"Move Right\"] = () => {\r\n          this.move(\"right\", \"block\", obj.additional);\r\n        };\r\n        menuItems[\"Delete\"] = () => {\r\n          this.delete(dealing, obj.element);\r\n        };\r\n        break;\r\n      case \"time\":\r\n      case \"place\":\r\n      case \"day\":\r\n      case \"batch\":\r\n      case \"subject\":\r\n      case \"teacher\":\r\n        let moveEle;\r\n        if (\r\n          obj.additional != null &&\r\n          obj.additional.moveBlock != null &&\r\n          obj.additional.moveBlock\r\n        ) {\r\n          moveEle = obj.additional.block;\r\n        } else {\r\n          moveEle = ele;\r\n        }\r\n        let up = \"Up\";\r\n        let down = \"Down\";\r\n        if (obj.additional != null && obj.additional.rowsLine) {\r\n          up = \"Down\";\r\n          down = \"Up\";\r\n        } else if (obj.additional != null && obj.additional.colsLine) {\r\n          up = \"Right\";\r\n          down = \"Left\";\r\n        }\r\n        menuItems[\"Move \" + up] = () => {\r\n          this.move(\"up\", moveEle);\r\n        };\r\n        menuItems[\"Move \" + down] = () => {\r\n          this.move(\"down\", moveEle);\r\n        };\r\n        menuItems[\"Edit\"] = () => {\r\n          this.editor(obj);\r\n        };\r\n        menuItems[\"Delete\"] = () => {\r\n          this.delete(dealing, obj.element);\r\n        };\r\n        break;\r\n      default:\r\n        return false;\r\n    }\r\n\r\n    return [\r\n      <ul>\r\n        {Object.keys(menuItems).map(item => {\r\n          return (\r\n            <li\r\n              onClick={() => {\r\n                menuItems[item]();\r\n                this.props.unshowMenu();\r\n              }}\r\n              key={item + \"mi\"}\r\n            >\r\n              {item}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>,\r\n      Object.keys(menuItems).length * 35 + 32\r\n    ];\r\n  }\r\n  render() {\r\n    if (this.props.menu.display) {\r\n      let x = this.props.menu.type.event.x;\r\n      let y = this.props.menu.type.event.y;\r\n      let Excerpt = this.construct(this.props.menu.type);\r\n      let menuw = 200;\r\n      let menuh = Excerpt[1];\r\n      let Menu = () => {\r\n        return Excerpt[0];\r\n      };\r\n      let winw = window.innerWidth;\r\n      let winh = window.innerHeight;\r\n      let top = null,\r\n        bottom = null,\r\n        left = null,\r\n        right = null;\r\n\r\n      if (winh - y > menuh) {\r\n        top = y;\r\n      } else {\r\n        bottom = winh - y;\r\n      }\r\n      if (winw - x > menuw) {\r\n        left = x;\r\n      } else {\r\n        right = winw - x - 16;\r\n      }\r\n      return (\r\n        <div\r\n          className=\"act-menu\"\r\n          style={{\r\n            top: top != null ? top : \"unset\",\r\n            left: left != null ? left : \"unset\",\r\n            bottom: bottom != null ? bottom : \"unset\",\r\n            right: right != null ? right : \"unset\"\r\n          }}\r\n        >\r\n          <Menu />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    menu: state.System.menu,\r\n    lectures: state.Lectures,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subject: state.Subjects,\r\n    teachers: state.Teachers,\r\n    batches: state.Batches,\r\n    tables: state.Tables\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showModal,\r\n    unshowMenu,\r\n    deleteDay,\r\n    deleteBatch,\r\n    deleteTeacher,\r\n    deleteTime,\r\n    deletePlace,\r\n    deleteSubject,\r\n    deleteLecture,\r\n    updateLecture,\r\n    updateDay,\r\n    updateBatch,\r\n    updateTeacher,\r\n    updateTime,\r\n    updatePlace,\r\n    updateSubject,\r\n    updateTable,\r\n    swapDay,\r\n    swapBatch,\r\n    swapTeacher,\r\n    swapTime,\r\n    swapPlace,\r\n    swapSubject,\r\n    swapTable\r\n  }\r\n)(Menu);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../resources/app.css\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Menu from \"./Menu\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deselectCollection, unshowMenu } from \"../actions\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    let x = this;\r\n    window.onerror = function(e) {\r\n      x.props.deselectCollection();\r\n    };\r\n    window.onscroll = function(e) {\r\n      x.props.unshowMenu();\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        <div\r\n          style={{ position: \"relative\" }}\r\n          onClick={() => {\r\n            this.props.unshowMenu();\r\n          }}\r\n        >\r\n          {this.props.user == null ? <Welcome /> : <Display />}\r\n          <Modal />\r\n        </div>\r\n        <Menu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    deselectCollection,\r\n    unshowMenu\r\n  }\r\n)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\n// VERSION = 1.2.9;\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import types from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  modal: {\r\n    type: null,\r\n    content: null,\r\n    buttons: null\r\n  },\r\n  menu: {\r\n    display: false,\r\n    type: null\r\n  }\r\n};\r\n\r\nexport default (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n    case types.UNSHOW_MODAL:\r\n      return { ...state, modal: action.payload };\r\n    case types.SHOW_MENU:\r\n    case types.UNSHOW_MENU:\r\n      return { ...state, menu: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport System from \"./System\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  System,\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload.user;\r\n    case types.DESELECT_COLLECTION:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(storage.list);\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    case types.EXAMPLE_COLLECTION:\r\n      if (state.find(col => col.id === \"example\") == null) {\r\n        return [...state, { ...action.payload }];\r\n      } else {\r\n        return state.map(col => {\r\n          if (col.id === \"example\") {\r\n            return action.payload;\r\n          }\r\n          return col;\r\n        });\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.SWAP_TABLE:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_PLACE:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_BATCH:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_DAY:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TIME:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_SUBJECT:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.SWAP_TEACHER:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}