{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/QuickSetup.js","components/Welcome.js","components/display/Screen.js","components/display/Tables.js","components/display/Lectures.js","components/display/Batches.js","components/display/Days.js","components/display/Times.js","components/display/Places.js","components/display/Subjects.js","components/display/Teachers.js","components/display/index.js","components/App.js","reducers/index.js","reducers/User.js","reducers/Collections.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","listKey","listName","datamanager","datacenter","datakey","data","Object","classCallCheck","this","localData","getData","keys","setData","localStorage","getItem","sessionStorage","validator","JSON","parse","setItem","stringify","console","warning","removeItem","id","userdata","tobedeleted","storage","user","_this","save","event","session","local","setDataItem","tables","batches","days","times","places","lectures","subjects","teachers","collections","getDataItem","key","delDataItem","delData","values","forEach","s","window","onbeforeunload","onunload","selectCollection","init","type","payload","getDataKey","createLecture","lecture","DefaultSetupSettings","from","to","fromTime","fromMeridian","toTime","toMeridian","lectureTime","name","base","rows","cols","QuickSetup","state","stage","_this2","react_default","a","createElement","value","onChange","x","setState","objectSpread","target","onClick","_this3","className","htmlFor","placeholder","_this4","style","color","_this5","objects","textTransform","map","obj","finish","title","props","back","Component","Welcome","ftDisplay","collectionName","collectionDesc","onSubmit","preventDefault","createCollection","desc","required","displayCreate","components_QuickSetup","exampleCollection","coll","copyCollection","deleteCollection","firstTime","screen","connect","Collections","collection","set","newid","get","Example","deleted","delete","Screen","objector","table","filter","i","baseValue","col","row","block","params","subject","st","batch","bh","teacher","tr","Tables","Lectures","Batches","Days","Times","Places","Subjects","Teachers","display","creator","action","_this2$state$creator","createTable","_this2$state$creator2","updateTable","defaultValue","item","marginRight","deleteTable","quicker","margin","disabled","baseName","fontWeight","tableID","day","time","place","mode","updateLecture","list","y","tm","pc","dy","deleteLecture","lectureID","createBatch","updateBatch","deleteBatch","batchID","createDay","updateDay","deleteDay","dayID","createTime","updateTime","deleteTime","timeID","createPlace","updatePlace","deletePlace","placeID","createSubject","updateSubject","deleteSubject","subjectID","createTeacher","updateTeacher","deleteTeacher","teacherID","Display","display_Screen","display_Tables","display_Lectures","display_Batches","display_Days","display_Times","display_Places","display_Subjects","display_Teachers","deselectCollection","btn","ref","actor","User","App","components_Welcome","combineReducers","concat","toConsumableArray","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.7bb7c280.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  DESELECT_COLLECTION: \"DESELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_LECTURE: \"CREATE_LECTURE\",\r\n  UPDATE_LECTURE: \"UPDATE_LECTURE\",\r\n  DELETE_LECTURE: \"DELETE_LECTURE\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { random, listKey } from \"./helpers\";\r\n\r\nclass datamanager {\r\n  constructor(datacenter, datakey, data = null) {\r\n    this.datacenter = datacenter;\r\n    this.datakey = datakey;\r\n    let localData = this.getData();\r\n    if (Object.keys(localData).length === 0) {\r\n      this.setData({});\r\n    }\r\n    if (data != null) {\r\n      this.setData(data);\r\n    }\r\n  }\r\n  getData() {\r\n    let localData;\r\n    if (this.datacenter === \"local\") {\r\n      localData = localStorage.getItem(this.datakey);\r\n    } else if (this.datacenter === \"session\") {\r\n      localData = sessionStorage.getItem(this.datakey);\r\n    } else {\r\n      return false;\r\n    }\r\n    return this.validator(JSON.parse(localData));\r\n  }\r\n  setData(data) {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.setItem(this.datakey, JSON.stringify(data));\r\n      return true;\r\n    } else {\r\n      console.warning(\"Data could't be saved\", this.datacenter, this.datakey);\r\n      return false;\r\n    }\r\n  }\r\n  delData() {\r\n    if (this.datacenter === \"local\") {\r\n      localStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else if (this.datacenter === \"session\") {\r\n      sessionStorage.removeItem(this.datakey);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    return this.validator(data[id]);\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    userdata = this.validator(userdata);\r\n    let data = this.getData();\r\n    data[id] = userdata;\r\n    let response = this.setData(data);\r\n    if (response) {\r\n      return userdata;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return this.validator(tobedeleted);\r\n  }\r\n  validator(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.collections = new datamanager(\"local\", \"collections\");\r\n    this.local = null;\r\n    this.session = null;\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.local = new datamanager(\"local\", id);\r\n    this.session = {\r\n      tables: new datamanager(\r\n        \"session\",\r\n        \"tables\",\r\n        this.local.getDataItem(\"tables\")\r\n      ),\r\n      batches: new datamanager(\r\n        \"session\",\r\n        \"batches\",\r\n        this.local.getDataItem(\"batches\")\r\n      ),\r\n      days: new datamanager(\"session\", \"days\", this.local.getDataItem(\"days\")),\r\n      places: new datamanager(\r\n        \"session\",\r\n        \"places\",\r\n        this.local.getDataItem(\"places\")\r\n      ),\r\n      times: new datamanager(\r\n        \"session\",\r\n        \"times\",\r\n        this.local.getDataItem(\"times\")\r\n      ),\r\n      lectures: new datamanager(\r\n        \"session\",\r\n        \"lectures\",\r\n        this.local.getDataItem(\"lectures\")\r\n      ),\r\n      subjects: new datamanager(\r\n        \"session\",\r\n        \"subjects\",\r\n        this.local.getDataItem(\"subjects\")\r\n      ),\r\n      teachers: new datamanager(\r\n        \"session\",\r\n        \"teachers\",\r\n        this.local.getDataItem(\"teachers\")\r\n      )\r\n    };\r\n    return id;\r\n  }\r\n  get list() {\r\n    return this.collections.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.collections.getDataItem(id);\r\n  }\r\n  set(data) {\r\n    return this.collections.setDataItem(this.id, data);\r\n  }\r\n  getData(id = this.id) {\r\n    let local = new datamanager(\"local\", id);\r\n    return local.getData();\r\n  }\r\n  setData(data) {\r\n    this.local.setData(data);\r\n    this.session.tables.setData(data.tables);\r\n    this.session.batches.setData(data.batches);\r\n    this.session.days.setData(data.days);\r\n    this.session.times.setData(data.times);\r\n    this.session.places.setData(data.places);\r\n    this.session.lectures.setData(data.lectures);\r\n    this.session.subjects.setData(data.subjects);\r\n    this.session.teachers.setData(data.teachers);\r\n  }\r\n  getDataKey(key) {\r\n    return this.session[key].getData();\r\n  }\r\n  setDataKey(key, data) {\r\n    this.session[key] = data;\r\n  }\r\n  getDataItem(key, id) {\r\n    return this.session[key].getDataItem(id);\r\n  }\r\n  setDataItem(key, id = null, data) {\r\n    if (id == null) {\r\n      id = random(listKey(key));\r\n    }\r\n    data.id = id;\r\n    return this.session[key].setDataItem(id, data);\r\n  }\r\n  delDataItem(key, id) {\r\n    return this.session[key].delDataItem(id);\r\n  }\r\n  save = event => {\r\n    if (this.session != null) {\r\n      this.local.setDataItem(\"tables\", this.session.tables.getData());\r\n      this.local.setDataItem(\"batches\", this.session.batches.getData());\r\n      this.local.setDataItem(\"days\", this.session.days.getData());\r\n      this.local.setDataItem(\"times\", this.session.times.getData());\r\n      this.local.setDataItem(\"places\", this.session.places.getData());\r\n      this.local.setDataItem(\"lectures\", this.session.lectures.getData());\r\n      this.local.setDataItem(\"subjects\", this.session.subjects.getData());\r\n      this.local.setDataItem(\"teachers\", this.session.teachers.getData());\r\n    }\r\n  };\r\n  delete() {\r\n    this.local.delData();\r\n    Object.values(this.session).forEach(s => {\r\n      let deleted = s.delData();\r\n      if (!deleted) {\r\n        console.warning(\"dataitem \", s, \" cannot be deleted\");\r\n      }\r\n    });\r\n    return this.collections.delDataItem(this.id);\r\n  }\r\n}\r\n\r\nlet storage = new user();\r\n\r\nexport default storage;\r\n","import types from \"./types\";\r\n\r\nimport Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nwindow.onbeforeunload = storage.save;\r\nwindow.onunload = storage.save;\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  storage.init(\"example\");\r\n  let collection = storage.set({\r\n    id: \"example\",\r\n    name: \"Example\",\r\n    desc: \"This is an Example Collection generated by Acadtable.\"\r\n  });\r\n  storage.setData(Example);\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}) => {\r\n  storage.init();\r\n  let collection = storage.set(data);\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  storage.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {\r\n      user: storage,\r\n      tables: storage.getDataKey(\"tables\"),\r\n      days: storage.getDataKey(\"days\"),\r\n      places: storage.getDataKey(\"places\"),\r\n      lectures: storage.getDataKey(\"lectures\"),\r\n      batches: storage.getDataKey(\"batches\"),\r\n      times: storage.getDataKey(\"times\"),\r\n      subjects: storage.getDataKey(\"subjects\"),\r\n      teachers: storage.getDataKey(\"teachers\")\r\n    }\r\n  };\r\n};\r\n\r\nexport const deselectCollection = () => {\r\n  return {\r\n    type: types.DESELECT_COLLECTION,\r\n    payload: null\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  let newid = storage.init();\r\n  let collection = storage.get(id);\r\n  collection.name += \" Copy\";\r\n  collection.id = newid;\r\n  collection = storage.set(collection);\r\n  storage.setData(storage.getData(id));\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  storage.init(id);\r\n  let deleted = storage.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = data => {\r\n  let table = storage.setDataItem(\"tables\", null, data);\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const updateTable = (tableID, data) => {\r\n  let table = storage.setDataItem(\"tables\", tableID, data);\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\nexport const deleteTable = tableID => {\r\n  let table = storage.delDataItem(\"tables\", tableID);\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: table\r\n  };\r\n};\r\n\r\n//Lecture ACTIONS\r\n\r\nexport const createLecture = data => {\r\n  let lecture = storage.setDataItem(\"lectures\", null, data);\r\n  return {\r\n    type: types.CREATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const updateLecture = (lectureID, data) => {\r\n  let lecture = storage.setDataItem(\"lectures\", lectureID, data);\r\n  return {\r\n    type: types.UPDATE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\nexport const deleteLecture = lectureID => {\r\n  let lecture = storage.delDataItem(\"lectures\", lectureID);\r\n  return {\r\n    type: types.DELETE_LECTURE,\r\n    payload: lecture\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = data => {\r\n  let day = storage.setDataItem(\"days\", null, data);\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const updateDay = (dayID, data) => {\r\n  let day = storage.setDataItem(\"days\", dayID, data);\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: day\r\n  };\r\n};\r\nexport const deleteDay = dayID => {\r\n  let day = storage.delDataItem(\"days\", dayID);\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: day\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = data => {\r\n  let time = storage.setDataItem(\"times\", null, data);\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const updateTime = (timeID, data) => {\r\n  let time = storage.setDataItem(\"times\", timeID, data);\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: time\r\n  };\r\n};\r\nexport const deleteTime = timeID => {\r\n  let time = storage.delDataItem(\"times\", timeID);\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: time\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = data => {\r\n  let place = storage.setDataItem(\"places\", null, data);\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const updatePlace = (placeID, data) => {\r\n  let place = storage.setDataItem(\"places\", placeID, data);\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\nexport const deletePlace = placeID => {\r\n  let place = storage.delDataItem(\"places\", placeID);\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: place\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = data => {\r\n  let batch = storage.setDataItem(\"batches\", null, data);\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const updateBatch = (batchID, data) => {\r\n  let batch = storage.setDataItem(\"batches\", batchID, data);\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\nexport const deleteBatch = batchID => {\r\n  let batch = storage.delDataItem(\"batches\", batchID);\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: batch\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = data => {\r\n  let subject = storage.setDataItem(\"subjects\", null, data);\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const updateSubject = (subjectID, data) => {\r\n  let subject = storage.setDataItem(\"subjects\", subjectID, data);\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\nexport const deleteSubject = subjectID => {\r\n  let subject = storage.delDataItem(\"subjects\", subjectID);\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: subject\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = data => {\r\n  let teacher = storage.setDataItem(\"teachers\", null, data);\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const updateTeacher = (teacherID, data) => {\r\n  let teacher = storage.setDataItem(\"teachers\", teacherID, data);\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\nexport const deleteTeacher = teacherID => {\r\n  let teacher = storage.delDataItem(\"teachers\", teacherID);\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: teacher\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nconst DefaultSetupSettings = {\r\n  days: {\r\n    from: \"monday\",\r\n    to: \"saturday\"\r\n  },\r\n  times: {\r\n    fromTime: \"06:00\",\r\n    fromMeridian: \"AM\",\r\n    toTime: \"01:00\",\r\n    toMeridian: \"PM\",\r\n    lectureTime: \"60\"\r\n  },\r\n  places: {\r\n    name: \"Room\",\r\n    from: \"0\",\r\n    to: \"10\"\r\n  },\r\n  tables: {\r\n    base: \"days\",\r\n    rows: \"places\",\r\n    cols: \"times\"\r\n  }\r\n};\r\n\r\nclass QuickSetup extends Component {\r\n  state = {\r\n    stage: null,\r\n    ...DefaultSetupSettings\r\n  };\r\n  days() {\r\n    return (\r\n      <div>\r\n        <h2>Days on which your school/university has lectures ?</h2>\r\n\r\n        <div>\r\n          <span>Monday to </span>&nbsp;&nbsp;\r\n          <select\r\n            name=\"days\"\r\n            value={this.state.days.to}\r\n            onChange={x => {\r\n              this.setState({\r\n                days: { ...this.state.days, to: x.target.value }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"tuesday\">Tuesday</option>\r\n            <option value=\"wednesday\">Wednesday</option>\r\n            <option value=\"thursday\">Thursday</option>\r\n            <option value=\"friday\">Friday</option>\r\n            <option value=\"saturday\">Saturday</option>\r\n            <option value=\"sunday\">Sunday</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ stage: \"times\" });\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  times() {\r\n    return (\r\n      <div>\r\n        <h2>Timing of your institute/school ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"from\">From </label>\r\n            <input\r\n              id=\"from\"\r\n              type=\"text\"\r\n              value={this.state.times.fromTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.fromMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    fromMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"to\">To </label>\r\n            <input\r\n              id=\"to\"\r\n              type=\"text\"\r\n              value={this.state.times.toTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <select\r\n              value={this.state.times.toMeridian}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    toMeridian: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"\">Lecture time (in minutes)</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"30,60 or 90\"\r\n              value={this.state.times.lectureTime}\r\n              onChange={x => {\r\n                this.setState({\r\n                  times: {\r\n                    ...this.state.times,\r\n                    lectureTime: x.target.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"days\" })}>Prev</button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  places() {\r\n    return (\r\n      <div>\r\n        <h2>How many Rooms/Places in which lectures are held ?</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.name}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, name: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">From (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.from}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, from: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"roomfrom\">To (room/place no)</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.places.to}\r\n              onChange={x =>\r\n                this.setState({\r\n                  places: { ...this.state.places, to: x.target.value }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <h4 style={{ color: \"rgb(150,150,150)\" }}>\r\n            You can add the labs/etc later...\r\n          </h4>\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"times\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button onClick={() => this.setState({ stage: \"tables\" })}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  tables() {\r\n    let objects = [\r\n      \"days\",\r\n      \"times\",\r\n      \"places\"\r\n      //   \"batches\",\r\n      //   \"subjects\",\r\n      //   \"teachers\"\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Table Settings</h2>\r\n        <div className=\"form-table\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Tables for</label>\r\n            <select\r\n              type=\"text\"\r\n              value={this.state.tables.base}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, base: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"base\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              id=\"rows\"\r\n              type=\"text\"\r\n              value={this.state.tables.rows}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, rows: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.base ||\r\n                //   obj === this.state.tables.cols\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"row\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              id=\"cols\"\r\n              type=\"text\"\r\n              value={this.state.tables.cols}\r\n              onChange={x =>\r\n                this.setState({\r\n                  tables: { ...this.state.tables, cols: x.target.value }\r\n                })\r\n              }\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              {objects.map(obj => {\r\n                // if (\r\n                //   obj === this.state.tables.rows ||\r\n                //   obj === this.state.tables.base\r\n                // ) {\r\n                //   return null;\r\n                // }\r\n                return (\r\n                  <option key={\"col\" + obj} value={obj}>\r\n                    {obj}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={() => this.setState({ stage: \"places\" })}>\r\n            Prev\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={this.finish}\r\n            className=\"black-btn\"\r\n            title=\"Default value will be used if a value was found to be invalid\"\r\n          >\r\n            Finish Setup\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  finish() {}\r\n  stage() {\r\n    switch (this.state.stage) {\r\n      case null:\r\n      case \"days\":\r\n      default:\r\n        return this.days();\r\n      case \"times\":\r\n        return this.times();\r\n      case \"places\":\r\n        return this.places();\r\n      case \"tables\":\r\n        return this.tables();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.back}>Back</button>\r\n        <h1>Quick Setup</h1>\r\n        {this.stage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickSetup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createCollection,\r\n  selectCollection,\r\n  exampleCollection,\r\n  copyCollection,\r\n  deleteCollection\r\n} from \"../actions\";\r\n\r\nimport QuickSetup from \"./QuickSetup\";\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return (\r\n        <QuickSetup\r\n          back={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={this.props.exampleCollection}>\r\n            Load An Example\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 120\r\n                    ? coll.desc.substr(0, 120) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button onClick={() => this.props.selectCollection(coll.id)}>\r\n                    Select\r\n                  </button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    selectCollection,\r\n    copyCollection,\r\n    exampleCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport \"../../resources/screen.css\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    let objector = {\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    return (\r\n      <div className=\"screen\">\r\n        {objector.tables.map(table => {\r\n          let base = objector[table.base].filter(\r\n            i => i.id === table.baseValue\r\n          )[0];\r\n          let rows = objector[table.rows];\r\n          let cols = objector[table.cols];\r\n          return (\r\n            <table key={table.id} className=\"screen-table\">\r\n              <thead>\r\n                <tr>\r\n                  <td>{base != null ? base.name : null}</td>\r\n                  {cols.map(col => {\r\n                    return <td key={\"c\" + col.id}>{col.name}</td>;\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rows.map(row => {\r\n                  return (\r\n                    <tr key={\"r\" + row.id}>\r\n                      <td>{row.name}</td>\r\n                      {cols.map(col => {\r\n                        let block = objector[\"lectures\"].filter(\r\n                          block =>\r\n                            block[listKey(table.base)] === base.id &&\r\n                            block[listKey(table.rows)] === row.id &&\r\n                            block[listKey(table.cols)] === col.id\r\n                        );\r\n                        if (block.length === 0) {\r\n                          // if (this.state.mode === \"print\") {\r\n                          //   return <td key={\"emp\" + col.id} />;\r\n                          // }\r\n                          return (\r\n                            <td\r\n                              onClick={() => {\r\n                                let params = {};\r\n                                params[listKey(table.base)] = base.id;\r\n                                params[listKey(table.rows)] = row.id;\r\n                                params[listKey(table.cols)] = col.id;\r\n                                //this.props.displayAddModal(params);\r\n                              }}\r\n                              key={\"b\" + col.id}\r\n                              className=\"table-block empty-block\"\r\n                            >\r\n                              <button>+</button>\r\n                            </td>\r\n                          );\r\n                        } else {\r\n                          let lecture = block[0];\r\n                          let subject = this.props.subjects.filter(\r\n                            st => st.id === lecture.subject\r\n                          )[0].name;\r\n                          let batch = this.props.batches.filter(\r\n                            bh => bh.id === lecture.batch\r\n                          )[0].name;\r\n                          let teacher = this.props.teachers.filter(\r\n                            tr => tr.id === lecture.teacher\r\n                          )[0].name;\r\n                          return (\r\n                            <td key={\"b\" + col.id} className=\"table-block\">\r\n                              <span>{batch}</span>\r\n                              <span>{subject}</span>\r\n                              <span>{teacher}</span>\r\n                            </td>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\n// downloadPDF() {\r\n//   let screen = this.refs.screen;\r\n//   let doc = new jsPDF({ orientation: \"landscape\" });\r\n//   doc.fromHTML(screen);\r\n//   doc.save(\"file.pdf\");\r\n// }\r\n// downloadPNG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toPng(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.href = dataUrl;\r\n//       link.download = \"file.png\";\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to PNG Image\");\r\n//     });\r\n// }\r\n// downloadJPEG() {\r\n//   let screen = this.refs.screen;\r\n//   domtoimage\r\n//     .toJpeg(screen, { bgcolor: \"#fff\" })\r\n//     .then(function(dataUrl) {\r\n//       let link = document.createElement(\"a\");\r\n//       link.download = \"file.jpeg\";\r\n//       link.href = dataUrl;\r\n//       link.target = \"_blank\";\r\n//       link.click();\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(\"Error converting to JPEG Image\");\r\n//     });\r\n// }\r\n// componentDidUpdate() {\r\n//   if (this.state.download) {\r\n//     switch (this.state.downloadType) {\r\n//       case \"pdf\":\r\n//       default:\r\n//         this.downloadPDF();\r\n//         break;\r\n//       case \"png\":\r\n//         this.downloadPNG();\r\n//         break;\r\n//       case \"jpeg\":\r\n//         this.downloadJPEG();\r\n//         break;\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React, { Component } from \"react\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listKey } from \"../../actions/helpers\";\r\n\r\nimport { createTable, updateTable, deleteTable } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      action: \"create\",\r\n      id: null,\r\n      base: \"days\",\r\n      baseValue: null,\r\n      rows: \"times\",\r\n      cols: \"places\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator(objector) {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.action === \"create\") {\r\n              let { base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.createTable({ base, baseValue, rows, cols });\r\n            } else if (this.state.creator.action === \"update\") {\r\n              let { id, base, baseValue, rows, cols } = this.state.creator;\r\n              this.props.updateTable(id, { base, baseValue, rows, cols });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"base\">Table of </label>\r\n            <select\r\n              defaultValue={this.state.creator.base}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, base: event.target.value }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.rows &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"base\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {this.state.creator.base != null &&\r\n          objector[this.state.creator.base].length > 0 ? (\r\n            <div className=\"form-row\">\r\n              <label\r\n                htmlFor=\"baseValue\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {listKey(this.state.creator.base)}\r\n              </label>\r\n              <select\r\n                defaultValue={\r\n                  this.state.creator.baseValue == null\r\n                    ? objector[this.state.creator.base][0].id\r\n                    : this.state.creator.baseValue\r\n                }\r\n                style={{ textTransform: \"capitalize\" }}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    creator: {\r\n                      ...this.state.creator,\r\n                      baseValue: event.target.value\r\n                    }\r\n                  });\r\n                }}\r\n                required={true}\r\n              >\r\n                {objector[this.state.creator.base].map(item => {\r\n                  return (\r\n                    <option value={item.id} key={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"rows\">Rows </label>\r\n            <select\r\n              defaultValue={this.state.creator.rows}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    rows: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.cols\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"rows\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"cols\">Columns </label>\r\n            <select\r\n              defaultValue={this.state.creator.cols}\r\n              style={{ textTransform: \"capitalize\" }}\r\n              onChange={event => {\r\n                this.setState({\r\n                  creator: {\r\n                    ...this.state.creator,\r\n                    cols: event.target.value\r\n                  }\r\n                });\r\n              }}\r\n              required={true}\r\n            >\r\n              {Object.keys(objector)\r\n                .filter(\r\n                  key =>\r\n                    key !== this.state.creator.base &&\r\n                    key !== this.state.creator.rows\r\n                )\r\n                .map(key => {\r\n                  return (\r\n                    <option key={\"cols\" + key} value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ display: \"main\" });\r\n              }}\r\n              style={{ marginRight: \"1em\" }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.props.deleteTable(this.state.creator.id);\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n                value={this.state.creator.action}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  quicker(objector) {\r\n    return null;\r\n  }\r\n  render() {\r\n    let objector = {\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      batches: this.props.batches,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n    if (this.state.display === \"create\") {\r\n      return this.creator(objector);\r\n    } else if (this.state.display === \"quick\") {\r\n      return this.quicker(objector);\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  action: \"create\",\r\n                  id: null,\r\n                  base: \"days\",\r\n                  baseValue: null,\r\n                  rows: \"times\",\r\n                  cols: \"places\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Table\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ display: \"quick\" });\r\n            }}\r\n            disabled={true}\r\n          >\r\n            Quick Tables\r\n          </button>\r\n        </div>\r\n        <div className=\"sq-list\">\r\n          {this.props.tables.map(table => {\r\n            let base = objector[table.base].filter(\r\n              item => item.id === table.baseValue\r\n            );\r\n            if (base.length === 0) {\r\n              console.warning(\"Table Base Not Found\", table);\r\n              return null;\r\n            }\r\n            let baseName = base[0].name;\r\n            return (\r\n              <div\r\n                key={table.id}\r\n                className=\"sq-list-item\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    display: \"create\",\r\n                    creator: { ...table, action: \"update\" }\r\n                  });\r\n                }}\r\n              >\r\n                <h2>\r\n                  <strong style={{ fontWeight: 500 }}>{baseName}</strong> Table\r\n                </h2>\r\n                <h3 style={{ fontWeight: 400 }}>{table.rows} as rows</h3>\r\n                <h3 style={{ fontWeight: 400 }}>{table.cols} as columns</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    times: state.Times,\r\n    places: state.Places,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTable, updateTable, deleteTable }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createLecture, updateLecture, deleteLecture } from \"../../actions\";\r\n\r\nclass Lectures extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      day: null,\r\n      time: null,\r\n      place: null,\r\n      subject: null,\r\n      teacher: null,\r\n      batch: null,\r\n      display: \"%batch%%subject%%teacher%\",\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    let objector = {\r\n      batch: this.props.batches,\r\n      subject: this.props.subjects,\r\n      teacher: this.props.teachers,\r\n      day: this.props.days,\r\n      time: this.props.times,\r\n      place: this.props.places\r\n    };\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              let {\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.createLecture({\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            } else {\r\n              let {\r\n                id,\r\n                place,\r\n                subject,\r\n                day,\r\n                time,\r\n                teacher,\r\n                batch\r\n              } = this.state.creator;\r\n              this.props.updateLecture(id, {\r\n                batch,\r\n                subject,\r\n                teacher,\r\n                place,\r\n                day,\r\n                time\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          {Object.keys(objector).map(key => {\r\n            let list = objector[key];\r\n            return (\r\n              <div className=\"form-row\" key={key}>\r\n                <label\r\n                  htmlFor={key + \"sct\"}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {key}\r\n                </label>\r\n                <select\r\n                  name={key}\r\n                  id={key + \"sct\"}\r\n                  value={this.state.creator[key]}\r\n                  required={true}\r\n                  onChange={x => {\r\n                    let y = {};\r\n                    y[key] = x.target.value;\r\n                    this.setState({ creator: { ...this.state.creator, ...y } });\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <option value={item.id} key={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: {\r\n                  id: null,\r\n                  day:\r\n                    this.props.days[0] != null ? this.props.days[0].id : null,\r\n                  time:\r\n                    this.props.times[0] != null ? this.props.times[0].id : null,\r\n                  place:\r\n                    this.props.places[0] != null\r\n                      ? this.props.places[0].id\r\n                      : null,\r\n                  subject:\r\n                    this.props.subjects[0] != null\r\n                      ? this.props.subjects[0].id\r\n                      : null,\r\n                  teacher:\r\n                    this.props.teachers[0] != null\r\n                      ? this.props.teachers[0].id\r\n                      : null,\r\n                  batch:\r\n                    this.props.batches[0] != null\r\n                      ? this.props.batches[0].id\r\n                      : null,\r\n                  display: \"%batch%%subject%%teacher%\",\r\n                  mode: \"create\"\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Create A Lecture\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.lectures.map(lecture => {\r\n            let subject = this.props.subjects.filter(\r\n              st => st.id === lecture.subject\r\n            )[0].name;\r\n            let batch = this.props.batches.filter(\r\n              bh => bh.id === lecture.batch\r\n            )[0].name;\r\n            let teacher = this.props.teachers.filter(\r\n              tr => tr.id === lecture.teacher\r\n            )[0].name;\r\n            let time = this.props.times.filter(tm => tm.id === lecture.time)[0]\r\n              .name;\r\n            let place = this.props.places.filter(\r\n              pc => pc.id === lecture.place\r\n            )[0].name;\r\n            let day = this.props.days.filter(dy => dy.id === lecture.day)[0]\r\n              .name;\r\n            return (\r\n              <div key={lecture.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  {subject != null ? <span>{subject}</span> : null}\r\n                  {batch != null ? <span>{batch}</span> : null}\r\n                  {teacher != null ? <span>{teacher}</span> : null}\r\n                  {time != null ? <span>{time}</span> : null}\r\n                  {place != null ? <span>{place}</span> : null}\r\n                  {day != null ? <span>{day}</span> : null}\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...lecture,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteLecture(lecture.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lectures: state.Lectures,\r\n    subjects: state.Subjects,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    teachers: state.Teachers,\r\n    days: state.Days,\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createLecture,\r\n    updateLecture,\r\n    deleteLecture\r\n  }\r\n)(Lectures);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createBatch, updateBatch, deleteBatch } from \"../../actions\";\r\n\r\nclass Batches extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createBatch({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateBatch(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Batch Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Batch\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.batches.map(batch => {\r\n            return (\r\n              <div key={batch.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{batch.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...batch,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteBatch(batch.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    batches: state.Batches\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBatch,\r\n    updateBatch,\r\n    deleteBatch\r\n  }\r\n)(Batches);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createDay, updateDay, deleteDay } from \"../../actions\";\r\n\r\nclass Days extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createDay({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateDay(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Day Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Day\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.days.map(day => {\r\n            return (\r\n              <div key={day.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{day.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...day,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteDay(day.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    days: state.Days\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createDay,\r\n    updateDay,\r\n    deleteDay\r\n  }\r\n)(Days);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTime, updateTime, deleteTime } from \"../../actions\";\r\n\r\nclass Times extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTime({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTime(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Time Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Time\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.times.map(time => {\r\n            return (\r\n              <div key={time.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{time.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...time,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTime(time.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    times: state.Times\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTime,\r\n    updateTime,\r\n    deleteTime\r\n  }\r\n)(Times);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createPlace, updatePlace, deletePlace } from \"../../actions\";\r\n\r\nclass Places extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createPlace({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updatePlace(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Place Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Place\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.places.map(place => {\r\n            return (\r\n              <div key={place.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{place.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...place,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deletePlace(place.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.Places\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createPlace,\r\n    updatePlace,\r\n    deletePlace\r\n  }\r\n)(Places);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createSubject, updateSubject, deleteSubject } from \"../../actions\";\r\n\r\nclass Subjects extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createSubject({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateSubject(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Subject Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Subject\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.subjects.map(subject => {\r\n            return (\r\n              <div key={subject.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{subject.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...subject,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteSubject(subject.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjects: state.Subjects\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createSubject,\r\n    updateSubject,\r\n    deleteSubject\r\n  }\r\n)(Subjects);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport storage from \"../../actions/storage\";\r\n\r\nimport { createTeacher, updateTeacher, deleteTeacher } from \"../../actions\";\r\n\r\nclass Teachers extends Component {\r\n  state = {\r\n    display: \"main\",\r\n    creator: {\r\n      id: null,\r\n      name: null,\r\n      mode: \"create\"\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    storage.save();\r\n  }\r\n  creator() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            if (this.state.creator.mode === \"create\") {\r\n              this.props.createTeacher({ name: this.state.creator.name });\r\n            } else {\r\n              this.props.updateTeacher(this.state.creator.id, {\r\n                name: this.state.creator.name\r\n              });\r\n            }\r\n            this.setState({ display: \"main\" });\r\n          }}\r\n          className=\"form-table\"\r\n        >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"name\">Teacher Name &nbsp;</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              onChange={x => {\r\n                this.setState({\r\n                  creator: { ...this.state.creator, name: x.target.value }\r\n                });\r\n              }}\r\n              value={this.state.creator.name || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ display: \"main\" });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value={this.state.creator.mode}\r\n              style={{ textTransform: \"capitalize\" }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.state.display === \"create\") {\r\n      return this.creator();\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({\r\n                display: \"create\",\r\n                creator: { id: null, name: null, mode: \"create\" }\r\n              });\r\n            }}\r\n          >\r\n            Create A Teacher\r\n          </button>\r\n        </div>\r\n        <div className=\"block-list\">\r\n          {this.props.teachers.map(teacher => {\r\n            return (\r\n              <div key={teacher.id} className=\"block\">\r\n                <div className=\"block-txt\">\r\n                  <span>{teacher.name}</span>\r\n                </div>\r\n                <div className=\"block-btns\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        display: \"create\",\r\n                        creator: {\r\n                          ...this.state.creator,\r\n                          ...teacher,\r\n                          mode: \"update\"\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.deleteTeacher(teacher.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createTeacher,\r\n    updateTeacher,\r\n    deleteTeacher\r\n  }\r\n)(Teachers);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport Tables from \"./Tables\";\r\nimport Lectures from \"./Lectures\";\r\nimport Batches from \"./Batches\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Places from \"./Places\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\n// import Modal from \"../Modal\";\r\n// import FormEditor from \"../collections/areas/FormEditor\";\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import domtoimage from \"dom-to-image\";\r\n\r\nimport {\r\n  selectCollection,\r\n  deselectCollection,\r\n  createLecture\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    display: \"screen\"\r\n  };\r\n  actor() {\r\n    switch (this.state.display) {\r\n      case \"screen\":\r\n        return <Screen />;\r\n      case \"tables\":\r\n        return <Tables />;\r\n      case \"lectures\":\r\n        return <Lectures />;\r\n      case \"batches\":\r\n        return <Batches />;\r\n      case \"days\":\r\n        return <Days />;\r\n      case \"times\":\r\n        return <Times />;\r\n      case \"places\":\r\n        return <Places />;\r\n      case \"subjects\":\r\n        return <Subjects />;\r\n      case \"teachers\":\r\n        return <Teachers />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    let objector = {\r\n      screen: null,\r\n      tables: this.props.tables,\r\n      lectures: this.props.lectures,\r\n      batches: this.props.batches,\r\n      days: this.props.days,\r\n      times: this.props.times,\r\n      places: this.props.places,\r\n      subjects: this.props.subjects,\r\n      teachers: this.props.teachers\r\n    };\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Acadtable</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.props.deselectCollection();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <div className=\"full-wrapper flex-center\">\r\n          <div>\r\n            {Object.keys(objector).map(btn => {\r\n              return (\r\n                <button\r\n                  onClick={() => this.setState({ display: btn })}\r\n                  className={this.state.display === btn ? \"selected\" : null}\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                  key={btn + \"-menuBtn\"}\r\n                >\r\n                  {btn}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div ref=\"screen\" className=\"full-wrapper flex-center\">\r\n          {this.actor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User,\r\n    tables: state.Tables,\r\n    days: state.Days,\r\n    places: state.Places,\r\n    times: state.Times,\r\n    lectures: state.Lectures,\r\n    batches: state.Batches,\r\n    subjects: state.Subjects,\r\n    teachers: state.Teachers\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectCollection,\r\n    deselectCollection,\r\n    createLecture\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport Display from \"./display\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    if (this.props.user == null) {\r\n      return <Welcome />;\r\n    } else {\r\n      return <Display />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.DESELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nexport default (state = Object.values(storage.list), action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_COLLECTION:\r\n    case types.EXAMPLE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.tables);\r\n    case types.CREATE_TABLE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TABLE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TABLE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.places);\r\n    case types.CREATE_PLACE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_PLACE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_PLACE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.batches);\r\n    case types.CREATE_BATCH:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_BATCH:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_BATCH:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.days);\r\n    case types.CREATE_DAY:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_DAY:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_DAY:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.times);\r\n    case types.CREATE_TIME:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TIME:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TIME:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.lectures);\r\n    case types.CREATE_LECTURE:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_LECTURE:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_LECTURE:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.subjects);\r\n    case types.CREATE_SUBJECT:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_SUBJECT:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_SUBJECT:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return Object.values(action.payload.teachers);\r\n    case types.CREATE_TEACHER:\r\n      return [...state, action.payload];\r\n    case types.UPDATE_TEACHER:\r\n      return state.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case types.DELETE_TEACHER:\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}