{"version":3,"sources":["actions/types.js","actions/helpers.js","actions/storage.js","actions/index.js","components/Welcome.js","components/App.js","reducers/Collections.js","reducers/index.js","reducers/User.js","reducers/Tables.js","reducers/Places.js","reducers/Batches.js","reducers/Days.js","reducers/Times.js","reducers/Lectures.js","reducers/Subjects.js","reducers/Teachers.js","index.js"],"names":["types","random","operator","arguments","length","undefined","start","end","Math","toString","split","substr","local","datacenter","Object","classCallCheck","this","localData","getData","setData","localStorage","getItem","JSON","parse","data","setItem","stringify","id","userdata","assign","tobedeleted","db","dbName","openDb","upgrade","uDb","createObjectStore","keyPath","createIndex","unique","deleteDb","user","getDataItem","setDataItem","delete","delDataItem","storage","Welcome","state","ftDisplay","collectionName","collectionDesc","_this2","react_default","a","createElement","onClick","setState","onSubmit","event","preventDefault","props","createCollection","name","desc","className","htmlFor","type","onChange","target","value","placeholder","required","_this3","displayCreate","_this4","collections","map","coll","key","copyCollection","deleteCollection","firstTime","screen","Component","connect","Collections","init","collection","set","payload","get","deleted","App","components_Welcome","values","all","combineReducers","User","action","concat","toConsumableArray","objectSpread","filter","Tables","tables","Places","places","Batches","batches","Days","days","Times","times","Lectures","blocks","Subjects","subjects","Teachers","teachers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"wOAAeA,EAGM,oBAHNA,EAIM,oBAJNA,EAKI,kBALJA,EAOM,oBAPNA,EASC,eATDA,EAaC,eAbDA,EAiBD,aAjBCA,EAkBD,aAlBCA,EAmBD,aAnBCA,EAqBA,cArBAA,EAyBC,eAzBDA,EA0BC,eA1BDA,EA2BC,eA3BDA,EA6BC,eA7BDA,EA8BC,eA9BDA,EA+BC,eA/BDA,EAiCG,iBAjCHA,EAkCG,iBAlCHA,EAmCG,iBAnCHA,EAqCG,kDCrCLC,EAAS,WAAwC,IAAvCC,EAAuCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5B,IAAKG,EAAuBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,EAAGI,EAAYJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACtD,OAAQD,GACN,IAAK,aACHA,EAAW,KACX,MACF,IAAK,QACHA,EAAW,KACX,MACF,IAAK,QACHA,EAAW,KACX,MACF,IAAK,MACHA,EAAW,KACX,MACF,IAAK,OACHA,EAAW,KACX,MACF,IAAK,QACHA,EAAW,KACX,MACF,IAAK,QACHA,EAAW,KACX,MACF,IAAK,UACHA,EAAW,KACX,MACF,IAAK,UACHA,EAAW,KASf,OAAOA,EAJEM,KAAKP,SACXQ,WACAC,MAAM,KAAK,GACXC,OAAOL,EAAOC,IC/BbK,aACJ,SAAAA,EAAYC,GAAaC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACvBI,KAAKH,WAAaA,EAClB,IAAII,EAAYD,KAAKE,UACJ,MAAbD,GAAmC,KAAdA,GACvBD,KAAKG,QAAQ,0DAIf,IAAIF,EAAYG,aAAaC,QAAQL,KAAKH,YAC1C,OAAOS,KAAKC,MAAMN,mCAEZO,GACNJ,aAAaK,QAAQT,KAAKH,WAAYS,KAAKI,UAAUF,wCAE3CG,GACV,IAAIH,EAAOR,KAAKE,UAChB,OAAgB,MAAZM,EAAKG,GACAH,EAAKG,GAEL,yCAGCA,GAAmB,IAAfC,EAAezB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACrBqB,EAAOR,KAAKE,UAQhB,OAPgB,MAAZM,EAAKG,GACPH,EAAKG,GAAMb,OAAOe,OAAOL,EAAKG,GAAKC,GAEnCJ,EAAKG,GAAMC,EAEbJ,EAAKG,GAAIA,GAAKA,EACdX,KAAKG,QAAQK,GACNI,sCAEGD,GACV,IAAIH,EAAOR,KAAKE,UACZY,EAAcN,EAAKG,GAGvB,cAFOH,EAAKG,GACZX,KAAKG,QAAQK,GACNM,WAILC,aACJ,SAAAA,EAAYJ,EAAIH,GAAOV,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,GACrBf,KAAKgB,OAASL,EACdX,KAAKe,GAAKE,iBAAON,EAAI,EAAGX,KAAKkB,6DAEvBC,GACYA,EAAIC,kBAAkB,WAAY,CAClDC,QAAS,OAECC,YAAY,KAAM,KAAM,CAAEC,QAAQ,IAC9BJ,EAAIC,kBAAkB,SAAU,CAAEC,QAAS,OACjDC,YAAY,KAAM,KAAM,CAAEC,QAAQ,IAC3BJ,EAAIC,kBAAkB,UAAW,CAAEC,QAAS,OAClDC,YAAY,KAAM,KAAM,CAAEC,QAAQ,IAC/BJ,EAAIC,kBAAkB,OAAQ,CAAEC,QAAS,OAC/CC,YAAY,KAAM,KAAM,CAAEC,QAAQ,IAC3BJ,EAAIC,kBAAkB,QAAS,CAAEC,QAAS,OAChDC,YAAY,KAAM,KAAM,CAAEC,QAAQ,IAC3BJ,EAAIC,kBAAkB,SAAU,CAAEC,QAAS,OACjDC,YAAY,KAAM,KAAM,CAAEC,QAAQ,IAC1BJ,EAAIC,kBAAkB,WAAY,CAClDC,QAAS,OAECC,YAAY,KAAM,KAAM,CAAEC,QAAQ,IAC5BJ,EAAIC,kBAAkB,WAAY,CAClDC,QAAS,OAECC,YAAY,KAAM,KAAM,CAAEC,QAAQ,6JAGjCC,mBAASxB,KAAKgB,2JA6BhBS,aAxBb,SAAAA,EAAYd,GAAKb,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,GACfzB,KAAKW,GAAW,MAANA,EAAaA,EAAK1B,EAAO,cACnCe,KAAKJ,MAAQ,IAAIA,EAAM,kEAEO,IAA3Be,EAA2BxB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAO,cACfe,KAAKW,GAAKA,EACVX,KAAKe,GAAK,IAAIA,EAAGf,KAAKW,kCAGtB,OAAOX,KAAKJ,MAAMM,wCAEF,IAAdS,EAAcxB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAATa,KAAKW,GACZ,OAAOX,KAAKJ,MAAM8B,YAAYf,iCAEjB,IAAXH,EAAWrB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACT,OAAOa,KAAKJ,MAAM+B,YAAY3B,KAAKW,GAAIH,oCAIvC,OADAR,KAAKe,GAAGa,SACD5B,KAAKJ,MAAMiC,YAAY7B,KAAKW,6CC/FnCc,EAAO,IAAIK,ECETC,oNACJC,MAAQ,CACNC,UAAW,KACXC,eAAgB,GAChBC,eAAgB,mFAEF,IAAAC,EAAApC,KACd,OACEqC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,QAAS,WACPJ,EAAKK,SAAS,CAAER,UAAW,SAF/B,QAOAI,EAAAC,EAAAC,cAAA,QACEG,SAAU,SAAAC,GACRA,EAAMC,iBACNR,EAAKS,MAAMC,iBAAiB,CAC1BC,KAAMX,EAAKJ,MAAME,eACjBc,KAAMZ,EAAKJ,MAAMG,iBAEnBC,EAAKK,SAAS,CAAER,UAAW,SAG7BI,EAAAC,EAAAC,cAAA,OAAKU,UAAU,+BACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YACbZ,EAAAC,EAAAC,cAAA,SAAOW,QAAQ,QAAQD,UAAU,aAAjC,mBAGAZ,EAAAC,EAAAC,cAAA,SACE5B,GAAG,QACHwC,KAAK,OACLC,SAAU,SAAAT,GAAK,OACbP,EAAKK,SAAS,CAAEP,eAAgBS,EAAMU,OAAOC,SAE/CA,MAAOtD,KAAKgC,MAAME,eAClBe,UAAU,YACVM,YAAY,yBACZC,UAAU,KAGdnB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YACbZ,EAAAC,EAAAC,cAAA,SAAOW,QAAQ,OAAOD,UAAU,aAAhC,eAGAZ,EAAAC,EAAAC,cAAA,YACE5B,GAAG,QACHsC,UAAU,WACVG,SAAU,SAAAT,GACRP,EAAKK,SAAS,CAAEN,eAAgBQ,EAAMU,OAAOC,SAE/CA,MAAOtD,KAAKgC,MAAMG,eAClBoB,YAAY,yCAGhBlB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YACbZ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,SAAOY,KAAK,SAASG,MAAM,SAASL,UAAU,oDAQ9C,IAAAQ,EAAAzD,KACV,MAA6B,WAAzBA,KAAKgC,MAAMC,UACNjC,KAAK0D,gBACsB,eAAzB1D,KAAKgC,MAAMC,UACbI,EAAAC,EAAAC,cAAA,YAGPF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACbZ,EAAAC,EAAAC,cAAA,UACEC,QAAS,WACPiB,EAAKhB,SAAS,CAAER,UAAW,aAF/B,uBAOAI,EAAAC,EAAAC,cAAA,QAAMU,UAAU,QACdZ,EAAAC,EAAAC,cAAA,2CAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UACEC,QAAS,WACPiB,EAAKhB,SAAS,CAAER,UAAW,iBAF/B,eAOAI,EAAAC,EAAAC,cAAA,QAAMU,UAAU,QACdZ,EAAAC,EAAAC,cAAA,0DAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,QAAS,cAAjB,mBACAH,EAAAC,EAAAC,cAAA,QAAMU,UAAU,QACdZ,EAAAC,EAAAC,cAAA,wFAMD,IAAAoB,EAAA3D,KACP,MAA6B,WAAzBA,KAAKgC,MAAMC,UACNjC,KAAK0D,gBAGZrB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACbZ,EAAAC,EAAAC,cAAA,UACEC,QAAS,WACPmB,EAAKlB,SAAS,CACZR,UAAW,SACXC,eAAgB,GAChBC,eAAgB,OALtB,8BAYFE,EAAAC,EAAAC,cAAA,oDAEFF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACZjD,KAAK6C,MAAMe,YAAYC,IAAI,SAAAC,GAC1B,OACEzB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YAAYc,IAAKD,EAAKnD,IACnC0B,EAAAC,EAAAC,cAAA,OAAKU,UAAU,gBACZa,EAAKf,KAAK3D,OAAS,GAChB0E,EAAKf,KAAKpD,OAAO,EAAG,IAAM,MAC1BmE,EAAKf,MAEXV,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACZa,EAAKd,KAAK5D,OAAS,IAChB0E,EAAKd,KAAKrD,OAAO,EAAG,KAAO,MAC3BmE,EAAKd,MAEXX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACbZ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMmB,EAAKd,MAAMmB,eAAeF,EAAKnD,MAAtD,QAGA0B,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMmB,EAAKd,MAAMoB,iBAAiBH,EAAKnD,MAAxD,iDAYd,OACE0B,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WACbZ,EAAAC,EAAAC,cAAA,UACqC,IAAlCvC,KAAK6C,MAAMe,YAAYxE,OACpB,uBACA,aAENiD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WACsB,IAAlCjD,KAAK6C,MAAMe,YAAYxE,OACpBY,KAAKkE,YACLlE,KAAKmE,kBA7KGC,cA0LPC,cANS,SAAArC,GACtB,MAAO,CACL4B,YAAa5B,EAAMsC,cAMrB,CACExB,iBDrL4B,WAAe,IAAdtC,EAAcrB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACtCsC,EAAK8C,OACL,IAAIC,EAAa/C,EAAKgD,IAAIjE,GAC1B,MAAO,CACL2C,KAAMnE,EACN0F,QAASF,ICiLTR,eDvK0B,SAAArD,GAC5Bc,EAAK8C,OACL,IAAIC,EAAa/C,EAAKkD,IAAIhE,GAG1B,OAFA6D,EAAWzB,MAAQ,QACnByB,EAAa/C,EAAKgD,IAAID,GACf,CACLrB,KAAMnE,EACN0F,QAASF,ICiKTP,iBDxJ4B,SAAAtD,GAC9Bc,EAAK8C,KAAK5D,GACV,IAAIiE,EAAUnD,EAAKG,SACnB,MAAO,CACLuB,KAAMnE,EACN0F,QAASE,KC8IEP,CAObtC,GC/La8C,mLAJX,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,aAFOV,oCCAd3C,EAAO,IAAIK,EACX8B,EAAc9D,OAAOiF,OAAOtD,EAAKuD,OCOtBC,cAAgB,CAC7BC,KCXa,WAA0B,IAAzBlD,EAAyB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACH,OAAOmG,EAAOT,QAChB,QACE,OAAO1C,IDOXsC,YDPa,WAAiC,IAAhCtC,EAAgC7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxByE,EAAauB,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACH,SAAAoG,OAAAtF,OAAAuF,EAAA,EAAAvF,CAAWkC,GAAX,CAAAlC,OAAAwF,EAAA,EAAAxF,CAAA,GAAuBqF,EAAOT,WAChC,KAAK1F,EACH,OAAOgD,EAAMuD,OAAO,SAAAzB,GAAI,OAAIA,EAAKnD,KAAOwE,EAAOT,QAAQ/D,KACzD,QACE,OAAOqB,ICAXwD,OEba,WAAwB,IAAvBxD,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQe,OAAOT,MAC/B,QACE,OAAOhD,IFQX0D,OGda,WAAwB,IAAvB1D,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQiB,OAAOX,MAC/B,QACE,OAAOhD,IHOX4D,QIfa,WAAwB,IAAvB5D,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQmB,QAAQb,MAChC,QACE,OAAOhD,IJQX8D,KKhBa,WAAwB,IAAvB9D,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQqB,KAAKf,MAC7B,QACE,OAAOhD,ILSXgE,MMjBa,WAAwB,IAAvBhE,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQuB,MAAMjB,MAC9B,QACE,OAAOhD,INYXkE,SOlBa,WAAwB,IAAvBlE,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQyB,OAAOnB,MAC/B,QACE,OAAOhD,IPaXoE,SQnBa,WAAwB,IAAvBpE,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQ2B,SAASrB,MACjC,QACE,OAAOhD,IRYXsE,SSpBa,WAAwB,IAAvBtE,EAAuB7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQ8F,EAAOhC,MACb,KAAKnE,EACL,KAAKA,EACH,OAAOmG,EAAOT,QAAQ6B,SAASvB,MACjC,QACE,OAAOhD,MCEPwE,EAAQC,YAAYC,GAE1BC,IAASC,OACPvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAUL,MAAOA,GACfnE,EAAAC,EAAAC,cAACuE,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.2435edee.chunk.js","sourcesContent":["export default {\r\n  EXAMPLE_COLLECTION: \"EXAMPLE_COLLECTION\",\r\n\r\n  CREATE_COLLECTION: \"CREATE_COLLECTION\",\r\n  SELECT_COLLECTION: \"SELECT_COLLECTION\",\r\n  COPY_COLLECTION: \"COPY_COLLECTION\",\r\n  RENAME_COLLECTION: \"RENAME_COLLECTION\",\r\n  DELETE_COLLECTION: \"DELETE_COLLECTION\",\r\n\r\n  CREATE_TABLE: \"CREATE_TABLE\",\r\n  UPDATE_TABLE: \"UPDATE_TABLE\",\r\n  DELETE_TABLE: \"DELETE_TABLE\",\r\n\r\n  CREATE_BLOCK: \"CREATE_BLOCK\",\r\n  UPDATE_BLOCK: \"UPDATE_BLOCK\",\r\n  DELETE_BLOCK: \"DELETE_BLOCK\",\r\n\r\n  CREATE_DAY: \"CREATE_DAY\",\r\n  UPDATE_DAY: \"UPDATE_DAY\",\r\n  DELETE_DAY: \"DELETE_DAY\",\r\n\r\n  CREATE_TIME: \"CREATE_TIME\",\r\n  UPDATE_TIME: \"UPDATE_TIME\",\r\n  DELETE_TIME: \"DELETE_TIME\",\r\n\r\n  CREATE_PLACE: \"CREATE_PLACE\",\r\n  UPDATE_PLACE: \"UPDATE_PLACE\",\r\n  DELETE_PLACE: \"DELETE_PLACE\",\r\n\r\n  CREATE_BATCH: \"CREATE_BATCH\",\r\n  UPDATE_BATCH: \"UPDATE_BATCH\",\r\n  DELETE_BATCH: \"DELETE_BATCH\",\r\n\r\n  CREATE_SUBJECT: \"CREATE_SUBJECT\",\r\n  UPDATE_SUBJECT: \"UPDATE_SUBJECT\",\r\n  DELETE_SUBJECT: \"DELETE_SUBJECT\",\r\n\r\n  CREATE_TEACHER: \"CREATE_TEACHER\",\r\n  UPDATE_TEACHER: \"UPDATE_TEACHER\",\r\n  DELETE_TEACHER: \"DELETE_TEACHER\"\r\n};\r\n","export const random = (operator = \"x\", start = 3, end = 7) => {\r\n  switch (operator) {\r\n    case \"collection\":\r\n      operator = \"cn\";\r\n      break;\r\n    case \"table\":\r\n      operator = \"tl\";\r\n      break;\r\n    case \"block\":\r\n      operator = \"bk\";\r\n      break;\r\n    case \"day\":\r\n      operator = \"dy\";\r\n      break;\r\n    case \"time\":\r\n      operator = \"tm\";\r\n      break;\r\n    case \"place\":\r\n      operator = \"pl\";\r\n      break;\r\n    case \"batch\":\r\n      operator = \"bh\";\r\n      break;\r\n    case \"subject\":\r\n      operator = \"st\";\r\n      break;\r\n    case \"teacher\":\r\n      operator = \"tr\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\nexport const keyList = keyName => {\r\n  switch (keyName) {\r\n    case \"batch\":\r\n      return \"batches\";\r\n    default:\r\n      return keyName + \"s\";\r\n  }\r\n};\r\n\r\nexport const listKey = listName => {\r\n  switch (listName) {\r\n    case \"batches\":\r\n      return \"batch\";\r\n    default:\r\n      return listName.substr(0, listName.length - 1);\r\n  }\r\n};\r\n","import { openDb, deleteDb } from \"idb\";\r\n\r\nimport { random } from \"./helpers\";\r\n\r\nclass local {\r\n  constructor(datacenter) {\r\n    this.datacenter = datacenter;\r\n    let localData = this.getData();\r\n    if (localData == null || localData === \"\") {\r\n      this.setData({});\r\n    }\r\n  }\r\n  getData() {\r\n    let localData = localStorage.getItem(this.datacenter);\r\n    return JSON.parse(localData);\r\n  }\r\n  setData(data) {\r\n    localStorage.setItem(this.datacenter, JSON.stringify(data));\r\n  }\r\n  getDataItem(id) {\r\n    let data = this.getData();\r\n    if (data[id] != null) {\r\n      return data[id];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  setDataItem(id, userdata = {}) {\r\n    let data = this.getData();\r\n    if (data[id] != null) {\r\n      data[id] = Object.assign(data[id], userdata);\r\n    } else {\r\n      data[id] = userdata;\r\n    }\r\n    data[id].id = id;\r\n    this.setData(data);\r\n    return userdata;\r\n  }\r\n  delDataItem(id) {\r\n    let data = this.getData();\r\n    let tobedeleted = data[id];\r\n    delete data[id];\r\n    this.setData(data);\r\n    return tobedeleted;\r\n  }\r\n}\r\n\r\nclass db {\r\n  constructor(id, data) {\r\n    this.dbName = id;\r\n    this.db = openDb(id, 1, this.upgrade);\r\n  }\r\n  upgrade(uDb) {\r\n    let lecturesObS = uDb.createObjectStore(\"lectures\", {\r\n      keyPath: \"id\"\r\n    });\r\n    lecturesObS.createIndex(\"id\", \"id\", { unique: true });\r\n    let tablesObS = uDb.createObjectStore(\"tables\", { keyPath: \"id\" });\r\n    tablesObS.createIndex(\"id\", \"id\", { unique: true });\r\n    let batchesObS = uDb.createObjectStore(\"batches\", { keyPath: \"id\" });\r\n    batchesObS.createIndex(\"id\", \"id\", { unique: true });\r\n    let daysObS = uDb.createObjectStore(\"days\", { keyPath: \"id\" });\r\n    daysObS.createIndex(\"id\", \"id\", { unique: true });\r\n    let timesObS = uDb.createObjectStore(\"times\", { keyPath: \"id\" });\r\n    timesObS.createIndex(\"id\", \"id\", { unique: true });\r\n    let placesObS = uDb.createObjectStore(\"places\", { keyPath: \"id\" });\r\n    placesObS.createIndex(\"id\", \"id\", { unique: true });\r\n    let subjectsObS = uDb.createObjectStore(\"subjects\", {\r\n      keyPath: \"id\"\r\n    });\r\n    subjectsObS.createIndex(\"id\", \"id\", { unique: true });\r\n    let teachersObS = uDb.createObjectStore(\"teachers\", {\r\n      keyPath: \"id\"\r\n    });\r\n    teachersObS.createIndex(\"id\", \"id\", { unique: true });\r\n  }\r\n  async delete() {\r\n    return await deleteDb(this.dbName);\r\n  }\r\n}\r\n\r\nclass user {\r\n  constructor(id) {\r\n    this.id = id != null ? id : random(\"collection\");\r\n    this.local = new local(\"collections\");\r\n  }\r\n  init(id = random(\"collection\")) {\r\n    this.id = id;\r\n    this.db = new db(this.id);\r\n  }\r\n  all() {\r\n    return this.local.getData();\r\n  }\r\n  get(id = this.id) {\r\n    return this.local.getDataItem(id);\r\n  }\r\n  set(data = {}) {\r\n    return this.local.setDataItem(this.id, data);\r\n  }\r\n  delete() {\r\n    this.db.delete();\r\n    return this.local.delDataItem(this.id);\r\n  }\r\n  list() {}\r\n}\r\n\r\nexport default user;\r\n","import types from \"./types\";\r\n\r\n// import Example from \"./example.json\";\r\n\r\nimport storage from \"./storage\";\r\n\r\nlet user = new storage();\r\n\r\n//COLLECTION ACTIONS\r\nexport const exampleCollection = () => {\r\n  return {\r\n    type: types.EXAMPLE_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\n\r\nexport const createCollection = (data = {}) => {\r\n  user.init();\r\n  let collection = user.set(data);\r\n  return {\r\n    type: types.CREATE_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const selectCollection = id => {\r\n  user.init(id);\r\n  return {\r\n    type: types.SELECT_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const copyCollection = id => {\r\n  user.init();\r\n  let collection = user.get(id);\r\n  collection.name += \" Copy\";\r\n  collection = user.set(collection);\r\n  return {\r\n    type: types.COPY_COLLECTION,\r\n    payload: collection\r\n  };\r\n};\r\nexport const renameCollection = (id, newname) => {\r\n  return {\r\n    type: types.RENAME_COLLECTION,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteCollection = id => {\r\n  user.init(id);\r\n  let deleted = user.delete();\r\n  return {\r\n    type: types.DELETE_COLLECTION,\r\n    payload: deleted\r\n  };\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTable = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTable = (collectionID, tableID, data) => {\r\n  return {\r\n    type: types.UPDATE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTable = (collectionID, tableID) => {\r\n  return {\r\n    type: types.DELETE_TABLE,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateBlock = (collectionID, blockID, data) => {\r\n  return {\r\n    type: types.UPDATE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteBlock = (collectionID, blockID) => {\r\n  return {\r\n    type: types.DELETE_BLOCK,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//DAY ACTIONS\r\n\r\nexport const createDay = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateDay = (collectionID, dayID, data) => {\r\n  return {\r\n    type: types.UPDATE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteDay = (collectionID, dayID) => {\r\n  return {\r\n    type: types.DELETE_DAY,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//TIME ACTIONS\r\n\r\nexport const createTime = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTime = (collectionID, timeID, data) => {\r\n  return {\r\n    type: types.UPDATE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTime = (collectionID, timeID) => {\r\n  return {\r\n    type: types.DELETE_TIME,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//PLACE ACTIONS\r\n\r\nexport const createPlace = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updatePlace = (collectionID, placeID, data) => {\r\n  return {\r\n    type: types.UPDATE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deletePlace = (collectionID, placeID) => {\r\n  return {\r\n    type: types.DELETE_PLACE,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//BATCH ACTIONS\r\n\r\nexport const createBatch = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateBatch = (collectionID, batchID, data) => {\r\n  return {\r\n    type: types.UPDATE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteBatch = (collectionID, batchID) => {\r\n  return {\r\n    type: types.DELETE_BATCH,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//SUBJECT ACTIONS\r\n\r\nexport const createSubject = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateSubject = (collectionID, subjectID, data) => {\r\n  return {\r\n    type: types.UPDATE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteSubject = (collectionID, subjectID) => {\r\n  return {\r\n    type: types.DELETE_SUBJECT,\r\n    payload: {}\r\n  };\r\n};\r\n\r\n//TEACHER ACTIONS\r\n\r\nexport const createTeacher = (collectionID, data) => {\r\n  return {\r\n    type: types.CREATE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\nexport const updateTeacher = (collectionID, teacherID, data) => {\r\n  return {\r\n    type: types.UPDATE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\nexport const deleteTeacher = (collectionID, teacherID) => {\r\n  return {\r\n    type: types.DELETE_TEACHER,\r\n    payload: {}\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createCollection, copyCollection, deleteCollection } from \"../actions\";\r\n\r\nimport \"../resources/welcome.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = {\r\n    ftDisplay: null,\r\n    collectionName: \"\",\r\n    collectionDesc: \"\"\r\n  };\r\n  displayCreate() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.props.createCollection({\r\n              name: this.state.collectionName,\r\n              desc: this.state.collectionDesc\r\n            });\r\n            this.setState({ ftDisplay: null });\r\n          }}\r\n        >\r\n          <div className=\"welcome-dialogue form-table\">\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"cName\" className=\"big-label\">\r\n                Collection Name\r\n              </label>\r\n              <input\r\n                id=\"cName\"\r\n                type=\"text\"\r\n                onChange={event =>\r\n                  this.setState({ collectionName: event.target.value })\r\n                }\r\n                value={this.state.collectionName}\r\n                className=\"big-input\"\r\n                placeholder=\"my first collection...\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <label htmlFor=\"desc\" className=\"big-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"cdesc\"\r\n                className=\"big-desc\"\r\n                onChange={event => {\r\n                  this.setState({ collectionDesc: event.target.value });\r\n                }}\r\n                value={this.state.collectionDesc}\r\n                placeholder=\"this is the best collection ever...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <span />\r\n              <input type=\"submit\" value=\"Create\" className=\"big-btn\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstTime() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    } else if (this.state.ftDisplay === \"quickSetup\") {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Looks like its your first time visiting acadtable.</h2>\r\n        <div className=\"welcome-buttons\">\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"create\" });\r\n            }}\r\n          >\r\n            Create A Collection\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Do everything from scratch</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ ftDisplay: \"quickSetup\" });\r\n            }}\r\n          >\r\n            Quick Setup\r\n          </button>\r\n          <span className=\"info\">\r\n            <span>Quick setup to build tables (recommended)</span>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button onClick={() => {}}>Load An Example</button>\r\n          <span className=\"info\">\r\n            <span>Load an example , premade collection</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    if (this.state.ftDisplay === \"create\") {\r\n      return this.displayCreate();\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"screen-header\">\r\n          <div className=\"welcome-buttons\">\r\n            <button\r\n              onClick={() => {\r\n                this.setState({\r\n                  ftDisplay: \"create\",\r\n                  collectionName: \"\",\r\n                  collectionDesc: \"\"\r\n                });\r\n              }}\r\n            >\r\n              Create Another Collection\r\n            </button>\r\n          </div>\r\n          <h2>Please select a collection to display</h2>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {this.props.collections.map(coll => {\r\n            return (\r\n              <div className=\"card-item\" key={coll.id}>\r\n                <div className=\"card-heading\">\r\n                  {coll.name.length > 40\r\n                    ? coll.name.substr(0, 40) + \"...\"\r\n                    : coll.name}\r\n                </div>\r\n                <div className=\"card-desc\">\r\n                  {coll.desc.length > 100\r\n                    ? coll.desc.substr(0, 100) + \"...\"\r\n                    : coll.desc}\r\n                </div>\r\n                <div className=\"card-btns\">\r\n                  <button>Select</button>\r\n                  <button onClick={() => this.props.copyCollection(coll.id)}>\r\n                    Copy\r\n                  </button>\r\n                  <button onClick={() => this.props.deleteCollection(coll.id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          {this.props.collections.length === 0\r\n            ? \"Welcome To Acadtable\"\r\n            : \"Acadtable\"}\r\n        </h1>\r\n        <div className=\"wrapper\">\r\n          {this.props.collections.length === 0\r\n            ? this.firstTime()\r\n            : this.screen()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    collections: state.Collections\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCollection,\r\n    copyCollection,\r\n    deleteCollection\r\n  }\r\n)(Welcome);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <Welcome />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import storage from \"../actions/storage\";\r\n\r\nimport types from \"../actions/types\";\r\n\r\nlet user = new storage();\r\nlet collections = Object.values(user.all());\r\n\r\nexport default (state = collections, action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_COLLECTION:\r\n    case types.COPY_COLLECTION:\r\n      return [...state, { ...action.payload }];\r\n    case types.DELETE_COLLECTION:\r\n      return state.filter(coll => coll.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./User\";\r\nimport Collections from \"./Collections\";\r\nimport Tables from \"./Tables\";\r\nimport Batches from \"./Batches\";\r\nimport Places from \"./Places\";\r\nimport Days from \"./Days\";\r\nimport Times from \"./Times\";\r\nimport Lectures from \"./Lectures\";\r\nimport Subjects from \"./Subjects\";\r\nimport Teachers from \"./Teachers\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n  Collections,\r\n  Tables,\r\n  Places,\r\n  Batches,\r\n  Days,\r\n  Times,\r\n  Lectures,\r\n  Subjects,\r\n  Teachers\r\n});\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TABLE:\r\n      return action.payload.tables.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_PLACE:\r\n    case types.UPDATE_PLACE:\r\n    case types.DELETE_PLACE:\r\n      return action.payload.places.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_BATCH:\r\n    case types.UPDATE_BATCH:\r\n    case types.DELETE_BATCH:\r\n      return action.payload.batches.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_DAY:\r\n    case types.UPDATE_DAY:\r\n    case types.DELETE_DAY:\r\n      return action.payload.days.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TIME:\r\n      return action.payload.times.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_BLOCK:\r\n      return action.payload.blocks.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_SUBJECT:\r\n    case types.UPDATE_SUBJECT:\r\n    case types.DELETE_SUBJECT:\r\n      return action.payload.subjects.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import types from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COLLECTION:\r\n    case types.CREATE_TEACHER:\r\n      return action.payload.teachers.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}