{"version":3,"sources":["components/Header.js","components/display/Welcome.js","engine/storage.js","actions/index.js","actions/types.js","components/display/index.js","components/tables/List.js","components/tables/Create.js","components/tables/Edit.js","components/tables/index.js","components/App.js","reducers/index.js","reducers/TablesList.js","reducers/SelectedTable.js","reducers/PlacesList.js","reducers/DaysList.js","reducers/TimesList.js","reducers/BlocksList.js","reducers/SubjectsList.js","reducers/TeachersList.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","Component","Welcome","storage","id","name","list","getList","creation","data","push","saveList","saveData","sessionStorage","getItem","JSON","parse","ex","arguments","length","undefined","setItem","stringify","newname","newlist","map","item","filter","removeItem","type","tableData","getData","ListFunctions","all","this","itemID","createItem","Object","assign","deleteItem","rand","operator","start","end","Math","random","toString","split","substr","selectTableById","table","Display","display_Welcome","props","select","_this","tables","days","rows","places","cols","times","blocks","subjects","teachers","no","text","TablesBlockKey","RowsBlockKey","ColsBlockKey","userCreate","x","userParams","params","batch","day","time","subject","teacher","createBlock","selected","createBatch","createDay","createTime","createPlace","createSubject","createTeacher","key","col","onClick","row","block","welcomeMessage","nothingSelected","screen","connect","state","TablesList","SelectedTable","PlacesList","DaysList","TimesList","BlocksList","batches","BatchesList","SubjectsList","TeachersList","tableID","blockID","List","addit_class","className","concat","edit","delete","deleted","CreateTable","form","handleSubmit","event","preventDefault","action","_this2","onSubmit","htmlFor","value","onChange","e","setState","target","cancel","EditTable","Tables","showCreateForm","editTable","showEditForm","Create","values","create","Edit","rename","tables_List","App","HashRouter","Route","path","component","exact","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.57e0f8db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/tables\">\r\n            <button>Tables</button>\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Welcome !</span>\r\n        <p>\r\n          You have't created any tables\r\n          <br />\r\n          <Link to=\"/tables\">Click Here</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","class storage {\r\n  static create(id, name) {\r\n    let list = storage.getList();\r\n    let creation = {\r\n      name,\r\n      id\r\n    };\r\n    let data = {\r\n      name,\r\n      id\r\n    };\r\n    list.push(creation);\r\n    storage.saveList(list);\r\n    storage.saveData(id, data);\r\n  }\r\n  static getList() {\r\n    let list = sessionStorage.getItem(\"tables-list\") || \"[]\";\r\n    try {\r\n      list = JSON.parse(list);\r\n    } catch (ex) {\r\n      list = [];\r\n    }\r\n    return list;\r\n  }\r\n  static saveList(list = []) {\r\n    sessionStorage.setItem(\"tables-list\", JSON.stringify(list));\r\n  }\r\n\r\n  static getData(id) {\r\n    let data = sessionStorage.getItem(\"td-\" + id);\r\n    data = JSON.parse(data);\r\n    if (data !== undefined && data !== null) {\r\n      return data;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  static saveData(id, data = {}) {\r\n    sessionStorage.setItem(\"td-\" + id, JSON.stringify(data));\r\n  }\r\n  static rename(id, newname) {\r\n    let list = storage.getList();\r\n    let newlist = list.map(item => {\r\n      if (item.id === id) {\r\n        item.name = newname;\r\n      }\r\n      return item;\r\n    });\r\n    storage.saveList(newlist);\r\n  }\r\n  static delete(id) {\r\n    let list = storage.getList();\r\n    let newlist = list.filter(item => item.id !== id);\r\n    storage.saveList(newlist);\r\n    sessionStorage.removeItem(\"td-\" + id);\r\n  }\r\n\r\n  //Main User Functions\r\n\r\n  static list(id, type) {\r\n    let tableData = storage.getData(id);\r\n    if (tableData) {\r\n      if (!tableData[type]) {\r\n        tableData[type] = [];\r\n        storage.saveData(id, tableData);\r\n      }\r\n      let ListFunctions = {\r\n        all: function() {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          return list;\r\n        },\r\n        getItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let items = list.filter(item => item.id === itemID);\r\n          return items[0];\r\n        },\r\n        createItem: function(itemID, data) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          let item = {\r\n            id: itemID\r\n          };\r\n          Object.assign(item, data);\r\n          list.push(item);\r\n          storage.saveData(this.id, tableData);\r\n          return item;\r\n        },\r\n        deleteItem: function(itemID) {\r\n          let tableData = storage.getData(this.id);\r\n          let list = tableData[this.type];\r\n          tableData[this.type] = list.filter(item => item.id !== itemID);\r\n          storage.saveData(this.id, tableData);\r\n        }\r\n      };\r\n      ListFunctions.id = id;\r\n      ListFunctions.type = type;\r\n      return ListFunctions;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default storage;\r\n","import storage from \"../engine/storage\";\r\nimport {\r\n  CREATE_TABLE,\r\n  SELECT_TABLE,\r\n  RENAME_TABLE,\r\n  DELETE_TABLE,\r\n  CREATE_BLOCK,\r\n  DELETE_BLOCK,\r\n  CREATE_DAY,\r\n  DELETE_DAY,\r\n  CREATE_TIME,\r\n  DELETE_TIME,\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  CREATE_BATCH,\r\n  DELETE_BATCH,\r\n  CREATE_SUBJECT,\r\n  DELETE_SUBJECT,\r\n  CREATE_TEACHER,\r\n  DELETE_TEACHER\r\n} from \"./types\";\r\n\r\n//HELPER FUNCTIONS\r\n\r\nconst rand = (operator = \"x\", start = 0, end = 7) => {\r\n  let id = Math.random()\r\n    .toString()\r\n    .split(\".\")[1]\r\n    .substr(start, end);\r\n  return operator + id;\r\n};\r\n\r\n//TABLE ACTIONS\r\n\r\nexport const createTableByName = name => {\r\n  let id = rand(\"t\", 0, 5);\r\n  storage.create(id, name);\r\n  let list = storage.getList();\r\n  return {\r\n    type: CREATE_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const selectTableById = id => {\r\n  return {\r\n    type: SELECT_TABLE,\r\n    table: storage.getData(id)\r\n  };\r\n};\r\nexport const renameTableById = (id, newname) => {\r\n  storage.rename(id, newname);\r\n  let list = storage.getList();\r\n  return {\r\n    type: RENAME_TABLE,\r\n    list\r\n  };\r\n};\r\nexport const deleteTableById = id => {\r\n  storage.delete(id);\r\n  let list = storage.getList();\r\n  return {\r\n    type: DELETE_TABLE,\r\n    deleted: id,\r\n    list\r\n  };\r\n};\r\n\r\n//BLOCK ACTIONS\r\n\r\nexport const createBlock = (tableID, data) => {\r\n  let blockID = rand(\"bl\", 1, 9);\r\n  let blocks = storage.list(tableID, \"blocks\");\r\n  blocks.createItem(blockID, data);\r\n  blocks = storage.list(tableID, \"blocks\");\r\n  return {\r\n    type: CREATE_BLOCK,\r\n    blocks\r\n  };\r\n};\r\n\r\nexport const deleteBlockById = (tableID, blockID) => {\r\n  let blocks = storage.list(tableID, \"blocks\");\r\n  blocks.deleteItem(blockID);\r\n  blocks = storage.list(tableID, \"blocks\");\r\n  return {\r\n    type: DELETE_BLOCK,\r\n    blocks\r\n  };\r\n};\r\n\r\nexport const createDay = (tableID, data) => {\r\n  let days = storage.list(tableID, \"days\");\r\n  days.createItem(rand(\"dy\"), Object.assign(data, { no: days.all().length }));\r\n  days = storage.list(tableID, \"days\");\r\n  return {\r\n    type: CREATE_DAY,\r\n    days\r\n  };\r\n};\r\nexport const deleteDayById = () => {};\r\n\r\nexport const createTime = (tableID, data) => {\r\n  let times = storage.list(tableID, \"times\");\r\n  times.createItem(rand(\"bl\"), Object.assign(data, { no: times.all().length }));\r\n  times = storage.list(tableID, \"times\");\r\n  return {\r\n    type: CREATE_TIME,\r\n    times\r\n  };\r\n};\r\nexport const deleteTimeById = () => {};\r\n\r\nexport const createPlace = (tableID, data) => {\r\n  let places = storage.list(tableID, \"places\");\r\n  places.createItem(\r\n    rand(\"pl\"),\r\n    Object.assign(data, { no: places.all().length })\r\n  );\r\n  places = storage.list(tableID, \"places\");\r\n  return {\r\n    type: CREATE_PLACE,\r\n    places\r\n  };\r\n};\r\nexport const deletePlaceById = () => {};\r\n\r\nexport const createBatch = (tableID, data) => {\r\n  let batches = storage.list(tableID, \"batches\");\r\n  batches.createItem(\r\n    rand(\"bh\"),\r\n    Object.assign(data, { no: batches.all().length })\r\n  );\r\n  batches = storage.list(tableID, \"batches\");\r\n  return {\r\n    type: CREATE_BATCH,\r\n    batches\r\n  };\r\n};\r\nexport const deleteBatchById = () => {};\r\n\r\nexport const createSubject = (tableID, data) => {\r\n  let subjects = storage.list(tableID, \"subjects\");\r\n  subjects.createItem(\r\n    rand(\"st\"),\r\n    Object.assign(data, { no: subjects.all().length })\r\n  );\r\n  subjects = storage.list(tableID, \"subjects\");\r\n  return {\r\n    type: CREATE_SUBJECT,\r\n    subjects\r\n  };\r\n};\r\nexport const deleteSubjectById = () => {};\r\n\r\nexport const createTeacher = (tableID, data) => {\r\n  let teachers = storage.list(tableID, \"teachers\");\r\n  teachers.createItem(\r\n    rand(\"tr\"),\r\n    Object.assign(data, { no: teachers.all().length })\r\n  );\r\n  teachers = storage.list(tableID, \"teachers\");\r\n  return {\r\n    type: CREATE_TEACHER,\r\n    teachers\r\n  };\r\n};\r\nexport const deleteTeacherById = () => {};\r\n","export const CREATE_TABLE = \"CREATE_TABLE\";\r\nexport const SELECT_TABLE = \"SELECT_TABLE\";\r\nexport const RENAME_TABLE = \"RENAME_TABLE\";\r\nexport const DELETE_TABLE = \"DELETE_TABLE\";\r\n\r\nexport const CREATE_BLOCK = \"CREATE_BLOCK\";\r\nexport const DELETE_BLOCK = \"DELETE_BLOCK\";\r\n\r\nexport const CREATE_DAY = \"CREATE_DAY\";\r\nexport const DELETE_DAY = \"DELETE_DAY\";\r\n\r\nexport const CREATE_TIME = \"CREATE_TIME\";\r\nexport const DELETE_TIME = \"DELETE_TIME\";\r\n\r\nexport const CREATE_PLACE = \"CREATE_PLACE\";\r\nexport const DELETE_PLACE = \"DELETE_PLACE\";\r\n\r\nexport const CREATE_BATCH = \"CREATE_BATCH\";\r\nexport const DELETE_BATCH = \"DELETE_BATCH\";\r\n\r\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\r\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\r\n\r\nexport const CREATE_TEACHER = \"CREATE_TEACHER\";\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Welcome from \"./Welcome\";\r\n\r\nimport {\r\n  selectTableById,\r\n  createBlock,\r\n  createBatch,\r\n  createDay,\r\n  createTime,\r\n  createPlace,\r\n  createSubject,\r\n  createTeacher\r\n} from \"../../actions\";\r\n\r\nclass Display extends Component {\r\n  welcomeMessage() {\r\n    return <Welcome />;\r\n  }\r\n  nothingSelected() {\r\n    if (this.props.list.length === 1) {\r\n      this.props.select(this.props.list[0].id);\r\n    }\r\n    return (\r\n      <div>\r\n        <span>You have't selected a table</span>\r\n        <br />\r\n        <Link to=\"/tables\">Click Here</Link>\r\n      </div>\r\n    );\r\n  }\r\n  screen() {\r\n    //Tables , Rows , Columns : Table Items\r\n    let tables = this.props.days;\r\n    let rows = this.props.places;\r\n    let cols = this.props.times;\r\n    //Blocks , Subjects , Teachers : Info Containers\r\n    let blocks = this.props.blocks;\r\n    let subjects = this.props.subjects;\r\n    let teachers = this.props.teachers;\r\n    //Whats in the tables,rows,columns\r\n    let TablesBlockKey = \"day\";\r\n    let RowsBlockKey = \"place\";\r\n    let ColsBlockKey = \"time\";\r\n\r\n    // tables = [\r\n    //   { no: 1, text: \"Monday\" },\r\n    //   { no: 2, text: \"Tuesday\" },\r\n    //   { no: 3, text: \"Wednesday\" }\r\n    // ];\r\n    // rows = [\r\n    //   { no: 1, text: \"Room 1\" },\r\n    //   { no: 2, text: \"Room 2\" },\r\n    //   { no: 3, text: \"Room 3\" }\r\n    // ];\r\n    // cols = [\r\n    //   { no: 1, text: \"8:00\" },\r\n    //   { no: 2, text: \"9:00\" },\r\n    //   { no: 3, text: \"10:00\" }\r\n    // ];\r\n    // subjects = [\r\n    //   { no: 1, text: \"Functional English\" },\r\n    //   { no: 2, text: \"Basic Electronics\" },\r\n    //   { no: 3, text: \"Thomas Calculus\" }\r\n    // ];\r\n    // teachers = [\r\n    //   { no: 1, text: \"Mr Nadeed\" },\r\n    //   { no: 2, text: \"Mis Sabiha\" },\r\n    //   { no: 3, text: \"Thomas Himself\" }\r\n    // ];\r\n\r\n    //Default Display if there is no default display available\r\n    if (tables.length === 0) {\r\n      tables[0] = {\r\n        no: 1,\r\n        text: TablesBlockKey + \"1\"\r\n      };\r\n    }\r\n    if (rows.length === 0) {\r\n      rows[0] = {\r\n        no: 1,\r\n        text: RowsBlockKey + \"1\"\r\n      };\r\n    }\r\n    if (cols.length === 0) {\r\n      cols[0] = {\r\n        no: 1,\r\n        text: ColsBlockKey + \"1\"\r\n      };\r\n    }\r\n\r\n    const userCreate = (x, userParams) => {\r\n      switch (x) {\r\n        case \"block\":\r\n        default:\r\n          let params = {\r\n            batch: 0,\r\n            day: 0,\r\n            time: 0,\r\n            subject: 0,\r\n            teacher: 0,\r\n            text: \"block\"\r\n          };\r\n          Object.assign(params, userParams);\r\n          this.props.createBlock(this.props.selected.id, params);\r\n          break;\r\n        case \"batch\":\r\n          this.props.createBatch(this.props.selected.id, {\r\n            text: \"batch\"\r\n          });\r\n          break;\r\n        case \"day\":\r\n          this.props.createDay(this.props.selected.id, {\r\n            text: \"day\"\r\n          });\r\n          break;\r\n        case \"time\":\r\n          this.props.createTime(this.props.selected.id, {\r\n            text: \"time\"\r\n          });\r\n          break;\r\n        case \"place\":\r\n          this.props.createPlace(this.props.selected.id, {\r\n            text: \"place\"\r\n          });\r\n          break;\r\n        case \"subject\":\r\n          this.props.createSubject(this.props.selected.id, {\r\n            text: \"subject\"\r\n          });\r\n          break;\r\n        case \"teacher\":\r\n          this.props.createTeacher(this.props.selected.id, {\r\n            text: \"teacher\"\r\n          });\r\n          break;\r\n      }\r\n    };\r\n\r\n    const AllTables = () => {\r\n      return tables.map(table => {\r\n        return (\r\n          <div key={\"t\" + table.no}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <td>{table.text}</td>\r\n                  {cols.map(col => {\r\n                    return <td key={\"c\" + col.no}>{col.text}</td>;\r\n                  })}\r\n                  <td\r\n                    onClick={() => {\r\n                      userCreate(ColsBlockKey);\r\n                    }}\r\n                  >\r\n                    +\r\n                  </td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rows.map(row => {\r\n                  return (\r\n                    <tr key={\"r\" + row.no}>\r\n                      <td>{row.text}</td>\r\n                      {cols.map(col => {\r\n                        let block = blocks.filter(\r\n                          block =>\r\n                            block[TablesBlockKey] === table.no &&\r\n                            block[RowsBlockKey] === row.no &&\r\n                            block[ColsBlockKey] === col.no\r\n                        );\r\n                        if (block.length === 0) {\r\n                          return (\r\n                            <td\r\n                              onClick={() => {\r\n                                let params = {};\r\n                                params[TablesBlockKey] = table.no;\r\n                                params[RowsBlockKey] = row.no;\r\n                                params[ColsBlockKey] = col.no;\r\n                                userCreate(\"block\", params);\r\n                              }}\r\n                              key={\"b\" + col.no}\r\n                            >\r\n                              +\r\n                            </td>\r\n                          );\r\n                        } else {\r\n                          return <td key={\"b\" + col.no}>{block[0].text}</td>;\r\n                        }\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n                <tr>\r\n                  <td\r\n                    onClick={() => {\r\n                      userCreate(RowsBlockKey);\r\n                    }}\r\n                  >\r\n                    +\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <button\r\n              onClick={() => {\r\n                userCreate(TablesBlockKey);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Acadtable</h1>\r\n        <AllTables />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.list.length === 0) {\r\n      return this.welcomeMessage();\r\n    } else if (this.props.selected === null) {\r\n      return this.nothingSelected();\r\n    }\r\n\r\n    return this.screen();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TablesList,\r\n    selected: state.SelectedTable,\r\n    places: state.PlacesList,\r\n    days: state.DaysList,\r\n    times: state.TimesList,\r\n    blocks: state.BlocksList,\r\n    batches: state.BatchesList,\r\n    subjects: state.SubjectsList,\r\n    teachers: state.TeachersList\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createBlock,\r\n    createBatch,\r\n    createDay,\r\n    createTime,\r\n    createPlace,\r\n    createTeacher,\r\n    createSubject,\r\n    select: selectTableById\r\n  }\r\n)(Display);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectTableById, deleteTableById } from \"../../actions\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return this.props.list.map(item => {\r\n      let selected =\r\n        this.props.selected == null ? { id: \"\" } : this.props.selected;\r\n      let addit_class = item.id === selected.id ? \"selected-card\" : \"\";\r\n      return (\r\n        <div key={item.id} className={`table-card card-box ${addit_class}`}>\r\n          <div className=\"card-title\">{item.name}</div>\r\n          <div className=\"buttons-list blue\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.select(item.id);\r\n              }}\r\n              className=\"select-btn\"\r\n            >\r\n              Select\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.edit(item);\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.delete(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TablesList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    select: selectTableById,\r\n    delete: deleteTableById\r\n  }\r\n)(List);\r\n","import React, { Component } from \"react\";\r\n\r\nclass CreateTable extends Component {\r\n  state = {\r\n    form: {\r\n      name: \"\"\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.action(this.state.form);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"row-block\">\r\n        <label htmlFor=\"name\" className=\"item\">\r\n          Table Name :\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"item\"\r\n          value={this.state.form.name}\r\n          onChange={e => {\r\n            this.setState({\r\n              form: {\r\n                name: e.target.value\r\n              }\r\n            });\r\n          }}\r\n        />\r\n        <input type=\"submit\" className=\"item\" />\r\n        <button onClick={this.props.cancel} className=\"item\">\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTable;\r\n","import React, { Component } from \"react\";\r\n\r\nclass EditTable extends Component {\r\n  state = {\r\n    form: {\r\n      newname: this.props.name\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.action(this.state.form);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"row-block\">\r\n        <label htmlFor=\"name\" className=\"item\">\r\n          Table Name :\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"item\"\r\n          value={this.state.form.newname}\r\n          onChange={e => {\r\n            this.setState({\r\n              form: {\r\n                newname: e.target.value\r\n              }\r\n            });\r\n          }}\r\n        />\r\n        <input type=\"submit\" className=\"item\" value=\"Save\" />\r\n        <button onClick={this.props.cancel} className=\"item\">\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTable;\r\n","import React, { Component } from \"react\";\r\n\r\nimport List from \"./List\";\r\nimport Create from \"./Create\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createTableByName, renameTableById } from \"../../actions\";\r\n\r\nclass Tables extends Component {\r\n  state = {\r\n    showCreateForm: false,\r\n    editTable: null,\r\n    showEditForm: false\r\n  };\r\n  render() {\r\n    const CreateDialogue = () => {\r\n      if (this.state.showCreateForm) {\r\n        return (\r\n          <Create\r\n            cancel={() => {\r\n              this.setState({ showCreateForm: false });\r\n            }}\r\n            action={values => {\r\n              this.props.create(values.name);\r\n              this.setState({ showCreateForm: false });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ul className=\"buttons-list\">\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ showCreateForm: true });\r\n                }}\r\n              >\r\n                Create A Table\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        );\r\n      }\r\n    };\r\n\r\n    const EditDialogue = () => {\r\n      if (this.state.editTable != null && this.state.showEditForm) {\r\n        return (\r\n          <Edit\r\n            name={this.state.editTable.name}\r\n            action={values => {\r\n              this.props.rename(this.state.editTable.id, values.newname);\r\n              this.setState({\r\n                showEditForm: false,\r\n                editTable: null\r\n              });\r\n            }}\r\n            cancel={() => {\r\n              this.setState({\r\n                showEditForm: false,\r\n                editTable: null\r\n              });\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    const RenderedList = () => {\r\n      return (\r\n        <div className=\"list-contaienr\">\r\n          <List\r\n            edit={item => {\r\n              this.setState({\r\n                showEditForm: true,\r\n                editTable: item\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Tables</h1>\r\n        <CreateDialogue />\r\n        <EditDialogue />\r\n        <RenderedList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.TablesList,\r\n    selected: state.SelectedTable\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    create: createTableByName,\r\n    rename: renameTableById\r\n  }\r\n)(Tables);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n//Header Import\r\nimport Header from \"./Header\";\r\n\r\n//Display Import\r\nimport Display from \"./display\";\r\n\r\n//Tables Import\r\nimport Tables from \"./tables\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/\" component={Header} />\r\n          <div className=\"wrapper\">\r\n            <Route path=\"/\" exact component={Display} />\r\n\r\n            <Route path=\"/tables\" exact component={Tables} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport TablesList from \"./TablesList\";\r\nimport SelectedTable from \"./SelectedTable\";\r\nimport PlacesList from \"./PlacesList\";\r\nimport DaysList from \"./DaysList\";\r\nimport TimesList from \"./TimesList\";\r\nimport BlocksList from \"./BlocksList\";\r\nimport SubjectsList from \"./SubjectsList\";\r\nimport TeachersList from \"./TeachersList\";\r\n\r\nexport default combineReducers({\r\n  TablesList,\r\n  SelectedTable,\r\n  PlacesList,\r\n  DaysList,\r\n  TimesList,\r\n  BlocksList,\r\n  SubjectsList,\r\n  TeachersList\r\n});\r\n","import { CREATE_TABLE, RENAME_TABLE, DELETE_TABLE } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = storage.getList(), action) => {\r\n  switch (action.type) {\r\n    case CREATE_TABLE:\r\n    case RENAME_TABLE:\r\n    case DELETE_TABLE:\r\n      return action.list;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE, DELETE_TABLE } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let selected_table = action.table || null;\r\n      return selected_table;\r\n    case DELETE_TABLE:\r\n      if (state !== null && action.deleted === state.id) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let list = storage.list(action.table.id, \"places\");\r\n      return list.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let list = storage.list(action.table.id, \"days\");\r\n      return list.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let list = storage.list(action.table.id, \"times\");\r\n      return list.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE, CREATE_BLOCK } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let list = storage.list(action.table.id, \"blocks\");\r\n      return list.all();\r\n    case CREATE_BLOCK:\r\n      return action.blocks.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let list = storage.list(action.table.id, \"subjects\");\r\n      return list.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_TABLE } from \"../actions/types\";\r\nimport storage from \"../engine/storage\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      let list = storage.list(action.table.id, \"teachers\");\r\n      return list.all();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}